

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sat Jan 26 15:10:03 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F877A Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 342 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 636 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 643 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 657 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 739 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 810 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 966 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1068 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1096 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1257 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1439 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1563 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1620 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1682 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1756 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   176                           SSPCON2 equ 091h ;# 
   177  0091                     # 1818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   178                           PR2 equ 092h ;# 
   179  0092                     # 1825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   180                           SSPADD equ 093h ;# 
   181  0093                     # 1832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   182                           SSPSTAT equ 094h ;# 
   183  0094                     # 2001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   184                           TXSTA equ 098h ;# 
   185  0098                     # 2082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   186                           SPBRG equ 099h ;# 
   187  0099                     # 2089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   188                           CMCON equ 09Ch ;# 
   189  009C                     # 2159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   190                           CVRCON equ 09Dh ;# 
   191  009D                     # 2224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   192                           ADRESL equ 09Eh ;# 
   193  009E                     # 2231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   194                           ADCON1 equ 09Fh ;# 
   195  009F                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   196                           EEDATA equ 010Ch ;# 
   197  010C                     # 2297 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   198                           EEADR equ 010Dh ;# 
   199  010D                     # 2304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   200                           EEDATH equ 010Eh ;# 
   201  010E                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   202                           EEADRH equ 010Fh ;# 
   203  010F                     # 2318 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   204                           EECON1 equ 018Ch ;# 
   205  018C                     # 2363 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   206                           EECON2 equ 018Dh ;# 
   207  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   208                           INDF equ 00h ;# 
   209  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   210                           TMR0 equ 01h ;# 
   211  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   212                           PCL equ 02h ;# 
   213  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   214                           STATUS equ 03h ;# 
   215  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   216                           FSR equ 04h ;# 
   217  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   218                           PORTA equ 05h ;# 
   219  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   220                           PORTB equ 06h ;# 
   221  0006                     # 280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   222                           PORTC equ 07h ;# 
   223  0007                     # 342 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   224                           PORTD equ 08h ;# 
   225  0008                     # 404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   226                           PORTE equ 09h ;# 
   227  0009                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   228                           PCLATH equ 0Ah ;# 
   229  000A                     # 456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   230                           INTCON equ 0Bh ;# 
   231  000B                     # 534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   232                           PIR1 equ 0Ch ;# 
   233  000C                     # 596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   234                           PIR2 equ 0Dh ;# 
   235  000D                     # 636 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   236                           TMR1 equ 0Eh ;# 
   237  000E                     # 643 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   238                           TMR1L equ 0Eh ;# 
   239  000E                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   240                           TMR1H equ 0Fh ;# 
   241  000F                     # 657 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   242                           T1CON equ 010h ;# 
   243  0010                     # 732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   244                           TMR2 equ 011h ;# 
   245  0011                     # 739 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   246                           T2CON equ 012h ;# 
   247  0012                     # 810 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   248                           SSPBUF equ 013h ;# 
   249  0013                     # 817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   250                           SSPCON equ 014h ;# 
   251  0014                     # 887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   252                           CCPR1 equ 015h ;# 
   253  0015                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   254                           CCPR1L equ 015h ;# 
   255  0015                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   256                           CCPR1H equ 016h ;# 
   257  0016                     # 908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   258                           CCP1CON equ 017h ;# 
   259  0017                     # 966 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   260                           RCSTA equ 018h ;# 
   261  0018                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   262                           TXREG equ 019h ;# 
   263  0019                     # 1068 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   264                           RCREG equ 01Ah ;# 
   265  001A                     # 1075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   266                           CCPR2 equ 01Bh ;# 
   267  001B                     # 1082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   268                           CCPR2L equ 01Bh ;# 
   269  001B                     # 1089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   270                           CCPR2H equ 01Ch ;# 
   271  001C                     # 1096 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   272                           CCP2CON equ 01Dh ;# 
   273  001D                     # 1154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   274                           ADRESH equ 01Eh ;# 
   275  001E                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   276                           ADCON0 equ 01Fh ;# 
   277  001F                     # 1257 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   278                           OPTION_REG equ 081h ;# 
   279  0081                     # 1327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   280                           TRISA equ 085h ;# 
   281  0085                     # 1377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   282                           TRISB equ 086h ;# 
   283  0086                     # 1439 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   284                           TRISC equ 087h ;# 
   285  0087                     # 1501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   286                           TRISD equ 088h ;# 
   287  0088                     # 1563 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   288                           TRISE equ 089h ;# 
   289  0089                     # 1620 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   290                           PIE1 equ 08Ch ;# 
   291  008C                     # 1682 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   292                           PIE2 equ 08Dh ;# 
   293  008D                     # 1722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   294                           PCON equ 08Eh ;# 
   295  008E                     # 1756 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   296                           SSPCON2 equ 091h ;# 
   297  0091                     # 1818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   298                           PR2 equ 092h ;# 
   299  0092                     # 1825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   300                           SSPADD equ 093h ;# 
   301  0093                     # 1832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   302                           SSPSTAT equ 094h ;# 
   303  0094                     # 2001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   304                           TXSTA equ 098h ;# 
   305  0098                     # 2082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   306                           SPBRG equ 099h ;# 
   307  0099                     # 2089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   308                           CMCON equ 09Ch ;# 
   309  009C                     # 2159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   310                           CVRCON equ 09Dh ;# 
   311  009D                     # 2224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   312                           ADRESL equ 09Eh ;# 
   313  009E                     # 2231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   314                           ADCON1 equ 09Fh ;# 
   315  009F                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   316                           EEDATA equ 010Ch ;# 
   317  010C                     # 2297 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   318                           EEADR equ 010Dh ;# 
   319  010D                     # 2304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   320                           EEDATH equ 010Eh ;# 
   321  010E                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   322                           EEADRH equ 010Fh ;# 
   323  010F                     # 2318 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   324                           EECON1 equ 018Ch ;# 
   325  018C                     # 2363 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   326                           EECON2 equ 018Dh ;# 
   327  018D                     	FNCALL	_main,_Check_Response
   328                           	FNCALL	_main,_Lcd_Clear
   329                           	FNCALL	_main,_Lcd_Init
   330                           	FNCALL	_main,_Lcd_Set_Cursor
   331                           	FNCALL	_main,_Lcd_Write_String
   332                           	FNCALL	_main,_Read_Data
   333                           	FNCALL	_main,_Start_Signal
   334                           	FNCALL	_main,___awdiv
   335                           	FNCALL	_main,___awmod
   336                           	FNCALL	_Lcd_Write_String,_Lcd_Write_Char
   337                           	FNCALL	_Lcd_Write_Char,_Lcd_Port
   338                           	FNCALL	_Lcd_Set_Cursor,_Lcd_Cmd
   339                           	FNCALL	_Lcd_Init,_Lcd_Cmd
   340                           	FNCALL	_Lcd_Init,_Lcd_Port
   341                           	FNCALL	_Lcd_Clear,_Lcd_Cmd
   342                           	FNCALL	_Lcd_Cmd,_Lcd_Port
   343                           	FNROOT	_main
   344                           	global	_Vlaznost
   345                           	global	_Temperatura
   346                           psect	idataBANK0,class=CODE,space=0,delta=2,noexec
   347                           global __pidataBANK0
   348                           __pidataBANK0:
   349  0356                     	file	"ROK6ZAD1.c"
   350                           	line	128
   351                           
   352                           ;initializer for _Vlaznost
   353                           	retlw	056h
   354  0356  3456               	retlw	06Ch
   355  0357  346C               	retlw	061h
   356  0358  3461               	retlw	07Ah
   357  0359  347A               	retlw	020h
   358  035A  3420               	retlw	03Dh
   359  035B  343D               	retlw	020h
   360  035C  3420               	retlw	030h
   361  035D  3430               	retlw	030h
   362  035E  3430               	retlw	02Eh
   363  035F  342E               	retlw	030h
   364  0360  3430               	retlw	020h
   365  0361  3420               	retlw	025h
   366  0362  3425               	retlw	020h
   367  0363  3420               	retlw	low(0)
   368  0364  3400               	line	127
   369                           
   370                           ;initializer for _Temperatura
   371                           	retlw	054h
   372  0365  3454               	retlw	065h
   373  0366  3465               	retlw	06Dh
   374  0367  346D               	retlw	070h
   375  0368  3470               	retlw	020h
   376  0369  3420               	retlw	03Dh
   377  036A  343D               	retlw	020h
   378  036B  3420               	retlw	030h
   379  036C  3430               	retlw	030h
   380  036D  3430               	retlw	02Eh
   381  036E  342E               	retlw	030h
   382  036F  3430               	retlw	020h
   383  0370  3420               	retlw	043h
   384  0371  3443               	retlw	020h
   385  0372  3420               	retlw	low(0)
   386  0373  3400               	global	_V1
   387                           	global	_T1
   388                           	global	_KontrolnaSuma
   389                           	global	_V2
   390                           	global	_T2
   391                           	global	_T1CON
   392                           _T1CON	set	0x10
   393  0010                     	global	_PORTB
   394                           _PORTB	set	0x6
   395  0006                     	global	_PORTD
   396                           _PORTD	set	0x8
   397  0008                     	global	_TMR1L
   398                           _TMR1L	set	0xE
   399  000E                     	global	_TMR1H
   400                           _TMR1H	set	0xF
   401  000F                     	global	_TMR1ON
   402                           _TMR1ON	set	0x80
   403  0080                     	global	_RB0
   404                           _RB0	set	0x30
   405  0030                     	global	_RD3
   406                           _RD3	set	0x43
   407  0043                     	global	_RD2
   408                           _RD2	set	0x42
   409  0042                     	global	_RD7
   410                           _RD7	set	0x47
   411  0047                     	global	_RD6
   412                           _RD6	set	0x46
   413  0046                     	global	_RD5
   414                           _RD5	set	0x45
   415  0045                     	global	_RD4
   416                           _RD4	set	0x44
   417  0044                     	global	_TRISB
   418                           _TRISB	set	0x86
   419  0086                     	global	_TRISD
   420                           _TRISD	set	0x88
   421  0088                     	global	_TRISB0
   422                           _TRISB0	set	0x430
   423  0430                     psect	strings,class=STRING,delta=2,noexec
   424                           global __pstrings
   425                           __pstrings:
   426  0003                     stringtab:
   427  0003                     	global    __stringtab
   428                           __stringtab:
   429  0003                     ;	String table - string pointers are 1 byte each
   430                           	btfsc	(btemp+1),7
   431  0003  1BFF               	ljmp	stringcode
   432  0004  280D               	bcf	status,7
   433  0005  1383               	btfsc	(btemp+1),0
   434  0006  187F               	bsf	status,7
   435  0007  1783               	movf	indf,w
   436  0008  0800               	incf fsr
   437  0009  0A84               skipnz
   438  000A  1903               incf btemp+1
   439  000B  0AFF               	return
   440  000C  0008               stringcode:stringdir:
   441  000D                     movlw high(stringdir)
      + 000D                     stringdir:	
   442  000D  3000               movwf pclath
   443  000E  008A               movf fsr,w
   444  000F  0804               incf fsr
   445  0010  0A84               	addwf pc
   446  0011  0782               	global __stringbase
   447                           __stringbase:
   448  0012                     	retlw	0
   449  0012  3400               psect	strings
   450                           	global    __end_of__stringtab
   451                           __end_of__stringtab:
   452  0013                     	
   453                           STR_2:	
   454  0013                     	retlw	75	;'K'
   455  0013  344B               	retlw	111	;'o'
   456  0014  346F               	retlw	110	;'n'
   457  0015  346E               	retlw	116	;'t'
   458  0016  3474               	retlw	114	;'r'
   459  0017  3472               	retlw	111	;'o'
   460  0018  346F               	retlw	108	;'l'
   461  0019  346C               	retlw	110	;'n'
   462  001A  346E               	retlw	97	;'a'
   463  001B  3461               	retlw	32	;' '
   464  001C  3420               	retlw	115	;'s'
   465  001D  3473               	retlw	117	;'u'
   466  001E  3475               	retlw	109	;'m'
   467  001F  346D               	retlw	97	;'a'
   468  0020  3461               	retlw	58	;':'
   469  0021  343A               	retlw	0
   470  0022  3400               psect	strings
   471                           	
   472                           STR_5:	
   473  0023                     	retlw	115	;'s'
   474  0023  3473               	retlw	97	;'a'
   475  0024  3461               	retlw	32	;' '
   476  0025  3420               	retlw	115	;'s'
   477  0026  3473               	retlw	101	;'e'
   478  0027  3465               	retlw	110	;'n'
   479  0028  346E               	retlw	122	;'z'
   480  0029  347A               	retlw	111	;'o'
   481  002A  346F               	retlw	114	;'r'
   482  002B  3472               	retlw	97	;'a'
   483  002C  3461               	retlw	33	;'!'
   484  002D  3421               	retlw	0
   485  002E  3400               psect	strings
   486                           	
   487                           STR_4:	
   488  002F                     	retlw	78	;'N'
   489  002F  344E               	retlw	101	;'e'
   490  0030  3465               	retlw	109	;'m'
   491  0031  346D               	retlw	97	;'a'
   492  0032  3461               	retlw	32	;' '
   493  0033  3420               	retlw	111	;'o'
   494  0034  346F               	retlw	100	;'d'
   495  0035  3464               	retlw	122	;'z'
   496  0036  347A               	retlw	105	;'i'
   497  0037  3469               	retlw	118	;'v'
   498  0038  3476               	retlw	97	;'a'
   499  0039  3461               	retlw	0
   500  003A  3400               psect	strings
   501                           	
   502                           STR_1:	
   503  003B                     	retlw	84	;'T'
   504  003B  3454               	retlw	105	;'i'
   505  003C  3469               	retlw	109	;'m'
   506  003D  346D               	retlw	101	;'e'
   507  003E  3465               	retlw	32	;' '
   508  003F  3420               	retlw	111	;'o'
   509  0040  346F               	retlw	117	;'u'
   510  0041  3475               	retlw	116	;'t'
   511  0042  3474               	retlw	33	;'!'
   512  0043  3421               	retlw	0
   513  0044  3400               psect	strings
   514                           	
   515                           STR_3:	
   516  0045                     	retlw	69	;'E'
   517  0045  3445               	retlw	82	;'R'
   518  0046  3452               	retlw	82	;'R'
   519  0047  3452               	retlw	79	;'O'
   520  0048  344F               	retlw	82	;'R'
   521  0049  3452               	retlw	33	;'!'
   522  004A  3421               	retlw	33	;'!'
   523  004B  3421               	retlw	33	;'!'
   524  004C  3421               	retlw	0
   525  004D  3400               psect	strings
   526                           ; #config settings
   527                           global __CFG_FOSC$HS
   528                           __CFG_FOSC$HS equ 0x0
   529  0000                     global __CFG_WDTE$OFF
   530                           __CFG_WDTE$OFF equ 0x0
   531  0000                     global __CFG_PWRTE$OFF
   532                           __CFG_PWRTE$OFF equ 0x0
   533  0000                     global __CFG_BOREN$ON
   534                           __CFG_BOREN$ON equ 0x0
   535  0000                     global __CFG_LVP$OFF
   536                           __CFG_LVP$OFF equ 0x0
   537  0000                     global __CFG_CPD$OFF
   538                           __CFG_CPD$OFF equ 0x0
   539  0000                     global __CFG_WRT$OFF
   540                           __CFG_WRT$OFF equ 0x0
   541  0000                     global __CFG_CP$OFF
   542                           __CFG_CP$OFF equ 0x0
   543  0000                     	file	"C:\Users\sabic\AppData\Local\Temp\s4gs."
   544                           	line	#
   545                           psect cinit,class=CODE,delta=2
   546                           global start_initialization
   547                           start_initialization:
   548  07E9                     
   549                           global __initialization
   550                           __initialization:
   551  07E9                     psect	bssCOMMON,class=COMMON,space=1,noexec
   552                           global __pbssCOMMON
   553                           __pbssCOMMON:
   554  007C                     _V1:
   555  007C                            ds      1
   556  007C                     
   557                           _T1:
   558  007D                            ds      1
   559  007D                     
   560                           psect	bssBANK0,class=BANK0,space=1,noexec
   561                           global __pbssBANK0
   562                           __pbssBANK0:
   563  0048                     _KontrolnaSuma:
   564  0048                            ds      1
   565  0048                     
   566                           _V2:
   567  0049                            ds      1
   568  0049                     
   569                           _T2:
   570  004A                            ds      1
   571  004A                     
   572                           psect	dataBANK0,class=BANK0,space=1,noexec
   573                           global __pdataBANK0
   574                           __pdataBANK0:
   575  0020                     	file	"ROK6ZAD1.c"
   576                           	line	128
   577                           _Vlaznost:
   578  0020                            ds      15
   579  0020                     
   580                           psect	dataBANK0
   581                           	file	"ROK6ZAD1.c"
   582                           	line	127
   583                           _Temperatura:
   584  002F                            ds      15
   585  002F                     
   586                           	file	"C:\Users\sabic\AppData\Local\Temp\s4gs."
   587                           	line	#
   588                           global btemp
   589                           psect inittext,class=CODE,delta=2
   590                           global init_fetch0,btemp
   591                           ;	Called with low address in FSR and high address in W
   592                           init_fetch0:
   593  030E                     	movf btemp,w
   594  030E  087E               	movwf pclath
   595  030F  008A               	movf btemp+1,w
   596  0310  087F               	movwf pc
   597  0311  0082               global init_ram0
   598                           ;Called with:
   599                           ;	high address of idata address in btemp 
   600                           ;	low address of idata address in btemp+1 
   601                           ;	low address of data in FSR
   602                           ;	high address + 1 of data in btemp-1
   603                           init_ram0:
   604  0312                     	fcall init_fetch0
   605  0312  120A  118A  230E  120A  118A  	movwf indf,f
   606  0317  0080               	incf fsr,f
   607  0318  0A84               	movf fsr,w
   608  0319  0804               	xorwf btemp-1,w
   609  031A  067D               	btfsc status,2
   610  031B  1903               	retlw 0
   611  031C  3400               	incf btemp+1,f
   612  031D  0AFF               	btfsc status,2
   613  031E  1903               	incf btemp,f
   614  031F  0AFE               	goto init_ram0
   615  0320  2B12               ; Initialize objects allocated to BANK0
   616                           psect cinit,class=CODE,delta=2,merge=1
   617                           global init_ram0, __pidataBANK0
   618                           	bcf	status, 7	;select IRP bank0
   619  07E9  1383               	movlw low(__pdataBANK0+30)
   620  07EA  303E               	movwf btemp-1,f
   621  07EB  00FD               	movlw high(__pidataBANK0)
   622  07EC  3003               	movwf btemp,f
   623  07ED  00FE               	movlw low(__pidataBANK0)
   624  07EE  3056               	movwf btemp+1,f
   625  07EF  00FF               	movlw low(__pdataBANK0)
   626  07F0  3020               	movwf fsr,f
   627  07F1  0084               	fcall init_ram0
   628  07F2  120A  118A  2312  120A  118A  	line	#
   629                           ; Clear objects allocated to BANK0
   630                           psect cinit,class=CODE,delta=2,merge=1
   631                           	clrf	((__pbssBANK0)+0)&07Fh
   632  07F7  01C8               	clrf	((__pbssBANK0)+1)&07Fh
   633  07F8  01C9               	clrf	((__pbssBANK0)+2)&07Fh
   634  07F9  01CA               ; Clear objects allocated to COMMON
   635                           psect cinit,class=CODE,delta=2,merge=1
   636                           	clrf	((__pbssCOMMON)+0)&07Fh
   637  07FA  01FC               	clrf	((__pbssCOMMON)+1)&07Fh
   638  07FB  01FD               psect cinit,class=CODE,delta=2,merge=1
   639                           global end_of_initialization,__end_of__initialization
   640                           
   641                           ;End of C runtime variable initialization code
   642                           
   643                           end_of_initialization:
   644  07FC                     __end_of__initialization:
   645  07FC                     clrf status
   646  07FC  0183               ljmp _main	;jump to C main() function
   647  07FD  120A  118A  2E2D   psect	cstackCOMMON,class=COMMON,space=1,noexec
   648                           global __pcstackCOMMON
   649                           __pcstackCOMMON:
   650  0070                     ?_Check_Response:	; 1 bit 
   651  0070                     ?_Read_Data:	; 1 bit 
   652  0070                     ?_Lcd_Port:	; 1 bytes @ 0x0
   653  0070                     ??_Lcd_Port:	; 1 bytes @ 0x0
   654  0070                     ?_Lcd_Cmd:	; 1 bytes @ 0x0
   655  0070                     ?_Lcd_Init:	; 1 bytes @ 0x0
   656  0070                     ?_Lcd_Write_Char:	; 1 bytes @ 0x0
   657  0070                     ?_Start_Signal:	; 1 bytes @ 0x0
   658  0070                     ??_Start_Signal:	; 1 bytes @ 0x0
   659  0070                     ??_Check_Response:	; 1 bytes @ 0x0
   660  0070                     ??_Read_Data:	; 1 bytes @ 0x0
   661  0070                     ?_main:	; 1 bytes @ 0x0
   662  0070                     ?_Lcd_Clear:	; 2 bytes @ 0x0
   663  0070                     	global	?___awdiv
   664                           ?___awdiv:	; 2 bytes @ 0x0
   665  0070                     	global	?___awmod
   666                           ?___awmod:	; 2 bytes @ 0x0
   667  0070                     	global	Lcd_Port@a
   668                           Lcd_Port@a:	; 1 bytes @ 0x0
   669  0070                     	global	___awdiv@divisor
   670                           ___awdiv@divisor:	; 2 bytes @ 0x0
   671  0070                     	global	___awmod@divisor
   672                           ___awmod@divisor:	; 2 bytes @ 0x0
   673  0070                     	ds	1
   674  0070                     ??_Lcd_Cmd:	; 1 bytes @ 0x1
   675  0071                     ??_Lcd_Write_Char:	; 1 bytes @ 0x1
   676  0071                     	ds	1
   677  0071                     	global	Lcd_Write_Char@temp
   678                           Lcd_Write_Char@temp:	; 1 bytes @ 0x2
   679  0072                     	global	Read_Data@i
   680                           Read_Data@i:	; 1 bytes @ 0x2
   681  0072                     	global	___awdiv@dividend
   682                           ___awdiv@dividend:	; 2 bytes @ 0x2
   683  0072                     	global	___awmod@dividend
   684                           ___awmod@dividend:	; 2 bytes @ 0x2
   685  0072                     	ds	1
   686  0072                     	global	Lcd_Cmd@a
   687                           Lcd_Cmd@a:	; 1 bytes @ 0x3
   688  0073                     	global	Lcd_Write_Char@y
   689                           Lcd_Write_Char@y:	; 1 bytes @ 0x3
   690  0073                     	global	Read_Data@dht_data
   691                           Read_Data@dht_data:	; 1 bytes @ 0x3
   692  0073                     	ds	1
   693  0073                     ??_Lcd_Clear:	; 1 bytes @ 0x4
   694  0074                     ?_Lcd_Set_Cursor:	; 1 bytes @ 0x4
   695  0074                     ??_Lcd_Init:	; 1 bytes @ 0x4
   696  0074                     ??___awdiv:	; 1 bytes @ 0x4
   697  0074                     ??___awmod:	; 1 bytes @ 0x4
   698  0074                     	global	Lcd_Set_Cursor@b
   699                           Lcd_Set_Cursor@b:	; 1 bytes @ 0x4
   700  0074                     	global	Lcd_Write_Char@a
   701                           Lcd_Write_Char@a:	; 1 bytes @ 0x4
   702  0074                     	ds	1
   703  0074                     ??_Lcd_Set_Cursor:	; 1 bytes @ 0x5
   704  0075                     ?_Lcd_Write_String:	; 1 bytes @ 0x5
   705  0075                     	global	___awdiv@counter
   706                           ___awdiv@counter:	; 1 bytes @ 0x5
   707  0075                     	global	___awmod@counter
   708                           ___awmod@counter:	; 1 bytes @ 0x5
   709  0075                     	global	Lcd_Write_String@a
   710                           Lcd_Write_String@a:	; 2 bytes @ 0x5
   711  0075                     	ds	1
   712  0075                     	global	___awdiv@sign
   713                           ___awdiv@sign:	; 1 bytes @ 0x6
   714  0076                     	global	___awmod@sign
   715                           ___awmod@sign:	; 1 bytes @ 0x6
   716  0076                     	ds	1
   717  0076                     ??_Lcd_Write_String:	; 1 bytes @ 0x7
   718  0077                     	global	Lcd_Set_Cursor@a
   719                           Lcd_Set_Cursor@a:	; 1 bytes @ 0x7
   720  0077                     	global	___awdiv@quotient
   721                           ___awdiv@quotient:	; 2 bytes @ 0x7
   722  0077                     	ds	1
   723  0077                     	global	Lcd_Set_Cursor@z
   724                           Lcd_Set_Cursor@z:	; 1 bytes @ 0x8
   725  0078                     	ds	1
   726  0078                     	global	Lcd_Set_Cursor@y
   727                           Lcd_Set_Cursor@y:	; 1 bytes @ 0x9
   728  0079                     	ds	1
   729  0079                     	global	Lcd_Set_Cursor@temp
   730                           Lcd_Set_Cursor@temp:	; 1 bytes @ 0xA
   731  007A                     	global	Lcd_Write_String@i
   732                           Lcd_Write_String@i:	; 2 bytes @ 0xA
   733  007A                     	ds	2
   734  007A                     psect	cstackBANK0,class=BANK0,space=1,noexec
   735                           global __pcstackBANK0
   736                           __pcstackBANK0:
   737  003E                     ??_main:	; 1 bytes @ 0x0
   738  003E                     	ds	10
   739  003E                     ;!
   740                           ;!Data Sizes:
   741                           ;!    Strings     59
   742                           ;!    Constant    0
   743                           ;!    Data        30
   744                           ;!    BSS         5
   745                           ;!    Persistent  0
   746                           ;!    Stack       0
   747                           ;!
   748                           ;!Auto Spaces:
   749                           ;!    Space          Size  Autos    Used
   750                           ;!    COMMON           14     12      14
   751                           ;!    BANK0            80     10      43
   752                           ;!    BANK1            80      0       0
   753                           ;!    BANK3            96      0       0
   754                           ;!    BANK2            96      0       0
   755                           
   756                           ;!
   757                           ;!Pointer List with Targets:
   758                           ;!
   759                           ;!    Read_Data@dht_data	PTR unsigned char  size(1) Largest target is 1
   760                           ;!		 -> KontrolnaSuma(BANK0[1]), T2(BANK0[1]), T1(COMMON[1]), V2(BANK0[1]), 
   761                           ;!		 -> V1(COMMON[1]), 
   762                           ;!
   763                           ;!    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 16
   764                           ;!		 -> STR_5(CODE[12]), STR_4(CODE[12]), STR_3(CODE[9]), STR_2(CODE[16]), 
   765                           ;!		 -> Vlaznost(BANK0[15]), Temperatura(BANK0[15]), STR_1(CODE[10]), 
   766                           ;!
   767                           
   768                           
   769                           ;!
   770                           ;!Critical Paths under _main in COMMON
   771                           ;!
   772                           ;!    _main->_Lcd_Write_String
   773                           ;!    _Lcd_Write_String->_Lcd_Write_Char
   774                           ;!    _Lcd_Write_Char->_Lcd_Port
   775                           ;!    _Lcd_Set_Cursor->_Lcd_Cmd
   776                           ;!    _Lcd_Init->_Lcd_Cmd
   777                           ;!    _Lcd_Clear->_Lcd_Cmd
   778                           ;!    _Lcd_Cmd->_Lcd_Port
   779                           ;!
   780                           ;!Critical Paths under _main in BANK0
   781                           ;!
   782                           ;!    None.
   783                           ;!
   784                           ;!Critical Paths under _main in BANK1
   785                           ;!
   786                           ;!    None.
   787                           ;!
   788                           ;!Critical Paths under _main in BANK3
   789                           ;!
   790                           ;!    None.
   791                           ;!
   792                           ;!Critical Paths under _main in BANK2
   793                           ;!
   794                           ;!    None.
   795                           
   796 ;;
   797 ;;Main: autosize = 0, tempsize = 10, incstack = 0, save=0
   798 ;;
   799                           
   800                           ;!
   801                           ;!Call Graph Tables:
   802                           ;!
   803                           ;! ---------------------------------------------------------------------------------
   804                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   805                           ;! ---------------------------------------------------------------------------------
   806                           ;! (0) _main                                                10    10      0    3805
   807                           ;!                                              0 BANK0     10    10      0
   808                           ;!                     _Check_Response
   809                           ;!                          _Lcd_Clear
   810                           ;!                           _Lcd_Init
   811                           ;!                     _Lcd_Set_Cursor
   812                           ;!                   _Lcd_Write_String
   813                           ;!                          _Read_Data
   814                           ;!                       _Start_Signal
   815                           ;!                            ___awdiv
   816                           ;!                            ___awmod
   817                           ;! ---------------------------------------------------------------------------------
   818                           ;! (1) ___awmod                                              7     3      4     600
   819                           ;!                                              0 COMMON     7     3      4
   820                           ;! ---------------------------------------------------------------------------------
   821                           ;! (1) ___awdiv                                              9     5      4     908
   822                           ;!                                              0 COMMON     9     5      4
   823                           ;! ---------------------------------------------------------------------------------
   824                           ;! (1) _Start_Signal                                         2     2      0       0
   825                           ;!                                              0 COMMON     2     2      0
   826                           ;! ---------------------------------------------------------------------------------
   827                           ;! (1) _Read_Data                                            4     4      0     277
   828                           ;!                                              0 COMMON     4     4      0
   829                           ;! ---------------------------------------------------------------------------------
   830                           ;! (1) _Lcd_Write_String                                     7     5      2     800
   831                           ;!                                              5 COMMON     7     5      2
   832                           ;!                     _Lcd_Write_Char
   833                           ;! ---------------------------------------------------------------------------------
   834                           ;! (2) _Lcd_Write_Char                                       4     4      0     178
   835                           ;!                                              1 COMMON     4     4      0
   836                           ;!                           _Lcd_Port
   837                           ;! ---------------------------------------------------------------------------------
   838                           ;! (1) _Lcd_Set_Cursor                                       7     6      1     912
   839                           ;!                                              4 COMMON     7     6      1
   840                           ;!                            _Lcd_Cmd
   841                           ;! ---------------------------------------------------------------------------------
   842                           ;! (1) _Lcd_Init                                             2     2      0     198
   843                           ;!                                              4 COMMON     2     2      0
   844                           ;!                            _Lcd_Cmd
   845                           ;!                           _Lcd_Port
   846                           ;! ---------------------------------------------------------------------------------
   847                           ;! (1) _Lcd_Clear                                            0     0      0     110
   848                           ;!                            _Lcd_Cmd
   849                           ;! ---------------------------------------------------------------------------------
   850                           ;! (2) _Lcd_Cmd                                              3     3      0     110
   851                           ;!                                              1 COMMON     3     3      0
   852                           ;!                           _Lcd_Port
   853                           ;! ---------------------------------------------------------------------------------
   854                           ;! (3) _Lcd_Port                                             1     1      0      88
   855                           ;!                                              0 COMMON     1     1      0
   856                           ;! ---------------------------------------------------------------------------------
   857                           ;! (1) _Check_Response                                       0     0      0       0
   858                           ;! ---------------------------------------------------------------------------------
   859                           ;! Estimated maximum stack depth 3
   860                           ;! ---------------------------------------------------------------------------------
   861                           ;!
   862                           ;! Call Graph Graphs:
   863                           ;!
   864                           ;! _main (ROOT)
   865                           ;!   _Check_Response
   866                           ;!   _Lcd_Clear
   867                           ;!     _Lcd_Cmd
   868                           ;!       _Lcd_Port
   869                           ;!   _Lcd_Init
   870                           ;!     _Lcd_Cmd
   871                           ;!       _Lcd_Port
   872                           ;!     _Lcd_Port
   873                           ;!   _Lcd_Set_Cursor
   874                           ;!     _Lcd_Cmd
   875                           ;!       _Lcd_Port
   876                           ;!   _Lcd_Write_String
   877                           ;!     _Lcd_Write_Char
   878                           ;!       _Lcd_Port
   879                           ;!   _Read_Data
   880                           ;!   _Start_Signal
   881                           ;!   ___awdiv
   882                           ;!   ___awmod
   883                           ;!
   884                           
   885                           ;! Address spaces:
   886                           
   887                           ;!Name               Size   Autos  Total    Cost      Usage
   888                           ;!BANK3               60      0       0       9        0.0%
   889                           ;!BITBANK3            60      0       0       8        0.0%
   890                           ;!SFR3                 0      0       0       4        0.0%
   891                           ;!BITSFR3              0      0       0       4        0.0%
   892                           ;!BANK2               60      0       0      11        0.0%
   893                           ;!BITBANK2            60      0       0      10        0.0%
   894                           ;!SFR2                 0      0       0       5        0.0%
   895                           ;!BITSFR2              0      0       0       5        0.0%
   896                           ;!BANK1               50      0       0       7        0.0%
   897                           ;!BITBANK1            50      0       0       6        0.0%
   898                           ;!SFR1                 0      0       0       2        0.0%
   899                           ;!BITSFR1              0      0       0       2        0.0%
   900                           ;!BANK0               50      A      2B       5       53.8%
   901                           ;!BITBANK0            50      0       0       4        0.0%
   902                           ;!SFR0                 0      0       0       1        0.0%
   903                           ;!BITSFR0              0      0       0       1        0.0%
   904                           ;!COMMON               E      C       E       1      100.0%
   905                           ;!BITCOMMON            E      0       0       0        0.0%
   906                           ;!CODE                 0      0       0       0        0.0%
   907                           ;!DATA                 0      0      39      12        0.0%
   908                           ;!ABS                  0      0      39       3        0.0%
   909                           ;!NULL                 0      0       0       0        0.0%
   910                           ;!STACK                0      0       0       2        0.0%
   911                           ;!EEDATA             100      0       0       0        0.0%
   912                           
   913                           	global	_main
   914                           
   915 ;; *************** function _main *****************
   916 ;; Defined at:
   917 ;;		line 198 in file "ROK6ZAD1.c"
   918 ;; Parameters:    Size  Location     Type
   919 ;;		None
   920 ;; Auto vars:     Size  Location     Type
   921 ;;		None
   922 ;; Return value:  Size  Location     Type
   923 ;;                  1    wreg      void 
   924 ;; Registers used:
   925 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   926 ;; Tracked objects:
   927 ;;		On entry : B00/0
   928 ;;		On exit  : 0/0
   929 ;;		Unchanged: 0/0
   930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   931 ;;      Params:         0       0       0       0       0
   932 ;;      Locals:         0       0       0       0       0
   933 ;;      Temps:          0      10       0       0       0
   934 ;;      Totals:         0      10       0       0       0
   935 ;;Total ram usage:       10 bytes
   936 ;; Hardware stack levels required when called:    3
   937 ;; This function calls:
   938 ;;		_Check_Response
   939 ;;		_Lcd_Clear
   940 ;;		_Lcd_Init
   941 ;;		_Lcd_Set_Cursor
   942 ;;		_Lcd_Write_String
   943 ;;		_Read_Data
   944 ;;		_Start_Signal
   945 ;;		___awdiv
   946 ;;		___awmod
   947 ;; This function is called by:
   948 ;;		Startup code after reset
   949 ;; This function uses a non-reentrant model
   950 ;;
   951                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
   952                           	file	"ROK6ZAD1.c"
   953                           	line	198
   954                           global __pmaintext
   955                           __pmaintext:	;psect for function _main
   956  062D                     psect	maintext
   957                           	file	"ROK6ZAD1.c"
   958                           	line	198
   959                           	global	__size_of_main
   960                           	__size_of_main	equ	__end_of_main-_main
   961  01BC                     	
   962                           _main:	
   963  062D                     ;incstack = 0
   964                           	opt	stack 5
   965                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   966                           	line	199
   967                           	
   968                           l1238:	
   969  062D                     ;ROK6ZAD1.c: 199:     PORTD=0;
   970                           	bcf	status, 5	;RP0=0, select bank0
   971  062D  1283               	bcf	status, 6	;RP1=0, select bank0
   972  062E  1303               	clrf	(8)	;volatile
   973  062F  0188               	line	200
   974                           ;ROK6ZAD1.c: 200:     TRISD=0;
   975                           	bsf	status, 5	;RP0=1, select bank1
   976  0630  1683               	bcf	status, 6	;RP1=0, select bank1
   977  0631  1303               	clrf	(136)^080h	;volatile
   978  0632  0188               	line	201
   979                           ;ROK6ZAD1.c: 201:     PORTB=0;
   980                           	bcf	status, 5	;RP0=0, select bank0
   981  0633  1283               	bcf	status, 6	;RP1=0, select bank0
   982  0634  1303               	clrf	(6)	;volatile
   983  0635  0186               	line	202
   984                           ;ROK6ZAD1.c: 202:     TRISB=0;
   985                           	bsf	status, 5	;RP0=1, select bank1
   986  0636  1683               	bcf	status, 6	;RP1=0, select bank1
   987  0637  1303               	clrf	(134)^080h	;volatile
   988  0638  0186               	line	203
   989                           	
   990                           l1240:	
   991  0639                     ;ROK6ZAD1.c: 203:     T1CON = 0x10;
   992                           	movlw	low(010h)
   993  0639  3010               	bcf	status, 5	;RP0=0, select bank0
   994  063A  1283               	bcf	status, 6	;RP1=0, select bank0
   995  063B  1303               	movwf	(16)	;volatile
   996  063C  0090               	line	204
   997                           	
   998                           l1242:	
   999  063D                     ;ROK6ZAD1.c: 204:     TMR1H = 0;
  1000                           	clrf	(15)	;volatile
  1001  063D  018F               	line	205
  1002                           	
  1003                           l1244:	
  1004  063E                     ;ROK6ZAD1.c: 205:     TMR1L = 0;
  1005                           	clrf	(14)	;volatile
  1006  063E  018E               	line	206
  1007                           	
  1008                           l1246:	
  1009  063F                     ;ROK6ZAD1.c: 206:     Lcd_Init();
  1010                           	fcall	_Lcd_Init
  1011  063F  120A  118A  24FC  120A  118A  	line	207
  1012                           	
  1013                           l1248:	
  1014  0644                     ;ROK6ZAD1.c: 207:     Lcd_Clear();
  1015                           	fcall	_Lcd_Clear
  1016  0644  120A  118A  2301  120A  118A  	goto	l1250
  1017  0649  2E4A               	line	208
  1018                           ;ROK6ZAD1.c: 208:     while(1)
  1019                           	
  1020                           l122:	
  1021  064A                     	line	210
  1022                           	
  1023                           l1250:	
  1024  064A                     ;ROK6ZAD1.c: 209:   {;ROK6ZAD1.c: 210:     Start_Signal();
  1025                           	fcall	_Start_Signal
  1026  064A  120A  118A  233B  120A  118A  	line	212
  1027                           	
  1028                           l1252:	
  1029  064F                     ;ROK6ZAD1.c: 212:     if(Check_Response())
  1030                           	fcall	_Check_Response
  1031  064F  120A  118A  23D0  120A  118A  	btfss	status,0
  1032  0654  1C03               	goto	u981
  1033  0655  2E57               	goto	u980
  1034  0656  2E58               u981:
  1035  0657                     	goto	l1288
  1036  0657  2FAB               u980:
  1037  0658                     	line	215
  1038                           	
  1039                           l1254:	
  1040  0658                     ;ROK6ZAD1.c: 213:     {;ROK6ZAD1.c: 215:       if(Read_Data(&V1) || Read_Data(&V2) || Re
                                 ad_Data(&T1) || Read_Data(&T2) || Read_Data(&KontrolnaSuma))
  1041                           	movlw	(low(_V1|((0x00)<<8)))&0ffh
  1042  0658  307C               	fcall	_Read_Data
  1043  0659  120A  118A  24A2  120A  118A  	btfsc	status,0
  1044  065E  1803               	goto	u991
  1045  065F  2E61               	goto	u990
  1046  0660  2E62               u991:
  1047  0661                     	goto	l1264
  1048  0661  2E8B               u990:
  1049  0662                     	
  1050                           l1256:	
  1051  0662                     	movlw	(low(_V2|((0x0)<<8)))&0ffh
  1052  0662  3049               	fcall	_Read_Data
  1053  0663  120A  118A  24A2  120A  118A  	btfsc	status,0
  1054  0668  1803               	goto	u1001
  1055  0669  2E6B               	goto	u1000
  1056  066A  2E6C               u1001:
  1057  066B                     	goto	l1264
  1058  066B  2E8B               u1000:
  1059  066C                     	
  1060                           l1258:	
  1061  066C                     	movlw	(low(_T1|((0x00)<<8)))&0ffh
  1062  066C  307D               	fcall	_Read_Data
  1063  066D  120A  118A  24A2  120A  118A  	btfsc	status,0
  1064  0672  1803               	goto	u1011
  1065  0673  2E75               	goto	u1010
  1066  0674  2E76               u1011:
  1067  0675                     	goto	l1264
  1068  0675  2E8B               u1010:
  1069  0676                     	
  1070                           l1260:	
  1071  0676                     	movlw	(low(_T2|((0x0)<<8)))&0ffh
  1072  0676  304A               	fcall	_Read_Data
  1073  0677  120A  118A  24A2  120A  118A  	btfsc	status,0
  1074  067C  1803               	goto	u1021
  1075  067D  2E7F               	goto	u1020
  1076  067E  2E80               u1021:
  1077  067F                     	goto	l1264
  1078  067F  2E8B               u1020:
  1079  0680                     	
  1080                           l1262:	
  1081  0680                     	movlw	(low(_KontrolnaSuma|((0x0)<<8)))&0ffh
  1082  0680  3048               	fcall	_Read_Data
  1083  0681  120A  118A  24A2  120A  118A  	btfss	status,0
  1084  0686  1C03               	goto	u1031
  1085  0687  2E89               	goto	u1030
  1086  0688  2E8A               u1031:
  1087  0689                     	goto	l1268
  1088  0689  2EA6               u1030:
  1089  068A                     	goto	l1264
  1090  068A  2E8B               	
  1091                           l126:	
  1092  068B                     	line	217
  1093                           	
  1094                           l1264:	
  1095  068B                     ;ROK6ZAD1.c: 216:       {;ROK6ZAD1.c: 217:         Lcd_Clear();
  1096                           	fcall	_Lcd_Clear
  1097  068B  120A  118A  2301  120A  118A  	line	218
  1098                           ;ROK6ZAD1.c: 218:         Lcd_Set_Cursor(1, 5);
  1099                           	movlw	low(05h)
  1100  0690  3005               	bcf	status, 5	;RP0=0, select bank0
  1101  0691  1283               	bcf	status, 6	;RP1=0, select bank0
  1102  0692  1303               	movwf	(??_main+0)+0
  1103  0693  00BE               	movf	(??_main+0)+0,w
  1104  0694  083E               	movwf	(Lcd_Set_Cursor@b)
  1105  0695  00F4               	movlw	low(01h)
  1106  0696  3001               	fcall	_Lcd_Set_Cursor
  1107  0697  120A  118A  244E  120A  118A  	line	219
  1108                           	
  1109                           l1266:	
  1110  069C                     ;ROK6ZAD1.c: 219:         Lcd_Write_String("Time out!");
  1111                           	movlw	(low((((STR_1)-__stringbase)|8000h)))&0ffh
  1112  069C  3029               	movwf	(Lcd_Write_String@a)
  1113  069D  00F5               	movlw	80h
  1114  069E  3080               	movwf	(Lcd_Write_String@a+1)
  1115  069F  00F6               	fcall	_Lcd_Write_String
  1116  06A0  120A  118A  240A  120A  118A  	line	220
  1117                           ;ROK6ZAD1.c: 220:       }
  1118                           	goto	l1294
  1119  06A5  2FD3               	line	222
  1120                           ;ROK6ZAD1.c: 222:       else
  1121                           	
  1122                           l124:	
  1123  06A6                     	line	224
  1124                           	
  1125                           l1268:	
  1126  06A6                     ;ROK6ZAD1.c: 223:       {;ROK6ZAD1.c: 224:         if(KontrolnaSuma == ((V1 + V2 + T1 + 
                                 T2) & 0xFF))
  1127                           	movf	(_V1),w
  1128  06A6  087C               	bcf	status, 5	;RP0=0, select bank0
  1129  06A7  1283               	bcf	status, 6	;RP1=0, select bank0
  1130  06A8  1303               	addwf	(_V2),w
  1131  06A9  0749               	movwf	(??_main+0)+0
  1132  06AA  00BE               	clrf	(??_main+0)+0+1
  1133  06AB  01BF               	rlf	1+(??_main+0)+0,f
  1134  06AC  0DBF               	
  1135                           	movf	(_T1),w
  1136  06AD  087D               	addwf	0+(??_main+0)+0,w
  1137  06AE  073E               	movwf	(??_main+2)+0
  1138  06AF  00C0               	movlw	0
  1139  06B0  3000               	skipnc
  1140  06B1  1803               	movlw	1
  1141  06B2  3001               	addwf	1+(??_main+0)+0,w
  1142  06B3  073F               	movwf	1+(??_main+2)+0
  1143  06B4  00C1               	movf	(_T2),w
  1144  06B5  084A               	addwf	0+(??_main+2)+0,w
  1145  06B6  0740               	movwf	(??_main+4)+0
  1146  06B7  00C2               	movlw	0
  1147  06B8  3000               	skipnc
  1148  06B9  1803               	movlw	1
  1149  06BA  3001               	addwf	1+(??_main+2)+0,w
  1150  06BB  0741               	movwf	1+(??_main+4)+0
  1151  06BC  00C3               	movlw	0FFh
  1152  06BD  30FF               	andwf	0+(??_main+4)+0,w
  1153  06BE  0542               	movwf	(??_main+6)+0
  1154  06BF  00C4               	movlw	0
  1155  06C0  3000               	andwf	1+(??_main+4)+0,w
  1156  06C1  0543               	movwf	1+(??_main+6)+0
  1157  06C2  00C5               	movf	(_KontrolnaSuma),w
  1158  06C3  0848               	movwf	(??_main+8)+0
  1159  06C4  00C6               	clrf	(??_main+8)+0+1
  1160  06C5  01C7               	movf	1+(??_main+6)+0,w
  1161  06C6  0845               	xorwf	1+(??_main+8)+0,w
  1162  06C7  0647               	skipz
  1163  06C8  1D03               	goto	u1045
  1164  06C9  2ECC               	movf	0+(??_main+6)+0,w
  1165  06CA  0844               	xorwf	0+(??_main+8)+0,w
  1166  06CB  0646               u1045:
  1167  06CC                     
  1168                           	skipz
  1169  06CC  1D03               	goto	u1041
  1170  06CD  2ECF               	goto	u1040
  1171  06CE  2ED0               u1041:
  1172  06CF                     	goto	l1282
  1173  06CF  2F81               u1040:
  1174  06D0                     	line	226
  1175                           	
  1176                           l1270:	
  1177  06D0                     ;ROK6ZAD1.c: 225:         {;ROK6ZAD1.c: 226:           Temperatura[7] = T1 / 10 + '0';
  1178                           	movlw	0Ah
  1179  06D0  300A               	movwf	(___awdiv@divisor)
  1180  06D1  00F0               	movlw	0
  1181  06D2  3000               	movwf	((___awdiv@divisor))+1
  1182  06D3  00F1               	movf	(_T1),w
  1183  06D4  087D               	movwf	(??_main+0)+0
  1184  06D5  00BE               	clrf	(??_main+0)+0+1
  1185  06D6  01BF               	movf	0+(??_main+0)+0,w
  1186  06D7  083E               	movwf	(___awdiv@dividend)
  1187  06D8  00F2               	movf	1+(??_main+0)+0,w
  1188  06D9  083F               	movwf	(___awdiv@dividend+1)
  1189  06DA  00F3               	fcall	___awdiv
  1190  06DB  120A  118A  25BC  120A  118A  	movf	(0+(?___awdiv)),w
  1191  06E0  0870               	addlw	030h
  1192  06E1  3E30               	bcf	status, 5	;RP0=0, select bank0
  1193  06E2  1283               	bcf	status, 6	;RP1=0, select bank0
  1194  06E3  1303               	movwf	(??_main+2)+0
  1195  06E4  00C0               	movf	(??_main+2)+0,w
  1196  06E5  0840               	movwf	0+(_Temperatura)+07h
  1197  06E6  00B6               	line	227
  1198                           ;ROK6ZAD1.c: 227:           Temperatura[8] = T1 % 10 + '0';
  1199                           	movlw	0Ah
  1200  06E7  300A               	movwf	(___awmod@divisor)
  1201  06E8  00F0               	movlw	0
  1202  06E9  3000               	movwf	((___awmod@divisor))+1
  1203  06EA  00F1               	movf	(_T1),w
  1204  06EB  087D               	movwf	(??_main+0)+0
  1205  06EC  00BE               	clrf	(??_main+0)+0+1
  1206  06ED  01BF               	movf	0+(??_main+0)+0,w
  1207  06EE  083E               	movwf	(___awmod@dividend)
  1208  06EF  00F2               	movf	1+(??_main+0)+0,w
  1209  06F0  083F               	movwf	(___awmod@dividend+1)
  1210  06F1  00F3               	fcall	___awmod
  1211  06F2  120A  118A  2559  120A  118A  	movf	(0+(?___awmod)),w
  1212  06F7  0870               	addlw	030h
  1213  06F8  3E30               	bcf	status, 5	;RP0=0, select bank0
  1214  06F9  1283               	bcf	status, 6	;RP1=0, select bank0
  1215  06FA  1303               	movwf	(??_main+2)+0
  1216  06FB  00C0               	movf	(??_main+2)+0,w
  1217  06FC  0840               	movwf	0+(_Temperatura)+08h
  1218  06FD  00B7               	line	228
  1219                           ;ROK6ZAD1.c: 228:           Temperatura[10] = T2 / 10 + '0';
  1220                           	movlw	0Ah
  1221  06FE  300A               	movwf	(___awdiv@divisor)
  1222  06FF  00F0               	movlw	0
  1223  0700  3000               	movwf	((___awdiv@divisor))+1
  1224  0701  00F1               	movf	(_T2),w
  1225  0702  084A               	movwf	(??_main+0)+0
  1226  0703  00BE               	clrf	(??_main+0)+0+1
  1227  0704  01BF               	movf	0+(??_main+0)+0,w
  1228  0705  083E               	movwf	(___awdiv@dividend)
  1229  0706  00F2               	movf	1+(??_main+0)+0,w
  1230  0707  083F               	movwf	(___awdiv@dividend+1)
  1231  0708  00F3               	fcall	___awdiv
  1232  0709  120A  118A  25BC  120A  118A  	movf	(0+(?___awdiv)),w
  1233  070E  0870               	addlw	030h
  1234  070F  3E30               	bcf	status, 5	;RP0=0, select bank0
  1235  0710  1283               	bcf	status, 6	;RP1=0, select bank0
  1236  0711  1303               	movwf	(??_main+2)+0
  1237  0712  00C0               	movf	(??_main+2)+0,w
  1238  0713  0840               	movwf	0+(_Temperatura)+0Ah
  1239  0714  00B9               	line	229
  1240                           ;ROK6ZAD1.c: 229:           Vlaznost[7] = V1 / 10 + '0';
  1241                           	movlw	0Ah
  1242  0715  300A               	movwf	(___awdiv@divisor)
  1243  0716  00F0               	movlw	0
  1244  0717  3000               	movwf	((___awdiv@divisor))+1
  1245  0718  00F1               	movf	(_V1),w
  1246  0719  087C               	movwf	(??_main+0)+0
  1247  071A  00BE               	clrf	(??_main+0)+0+1
  1248  071B  01BF               	movf	0+(??_main+0)+0,w
  1249  071C  083E               	movwf	(___awdiv@dividend)
  1250  071D  00F2               	movf	1+(??_main+0)+0,w
  1251  071E  083F               	movwf	(___awdiv@dividend+1)
  1252  071F  00F3               	fcall	___awdiv
  1253  0720  120A  118A  25BC  120A  118A  	movf	(0+(?___awdiv)),w
  1254  0725  0870               	addlw	030h
  1255  0726  3E30               	bcf	status, 5	;RP0=0, select bank0
  1256  0727  1283               	bcf	status, 6	;RP1=0, select bank0
  1257  0728  1303               	movwf	(??_main+2)+0
  1258  0729  00C0               	movf	(??_main+2)+0,w
  1259  072A  0840               	movwf	0+(_Vlaznost)+07h
  1260  072B  00A7               	line	230
  1261                           ;ROK6ZAD1.c: 230:           Vlaznost[8] = V1 % 10 + '0';
  1262                           	movlw	0Ah
  1263  072C  300A               	movwf	(___awmod@divisor)
  1264  072D  00F0               	movlw	0
  1265  072E  3000               	movwf	((___awmod@divisor))+1
  1266  072F  00F1               	movf	(_V1),w
  1267  0730  087C               	movwf	(??_main+0)+0
  1268  0731  00BE               	clrf	(??_main+0)+0+1
  1269  0732  01BF               	movf	0+(??_main+0)+0,w
  1270  0733  083E               	movwf	(___awmod@dividend)
  1271  0734  00F2               	movf	1+(??_main+0)+0,w
  1272  0735  083F               	movwf	(___awmod@dividend+1)
  1273  0736  00F3               	fcall	___awmod
  1274  0737  120A  118A  2559  120A  118A  	movf	(0+(?___awmod)),w
  1275  073C  0870               	addlw	030h
  1276  073D  3E30               	bcf	status, 5	;RP0=0, select bank0
  1277  073E  1283               	bcf	status, 6	;RP1=0, select bank0
  1278  073F  1303               	movwf	(??_main+2)+0
  1279  0740  00C0               	movf	(??_main+2)+0,w
  1280  0741  0840               	movwf	0+(_Vlaznost)+08h
  1281  0742  00A8               	line	231
  1282                           ;ROK6ZAD1.c: 231:           Vlaznost[10] = V2 / 10 + '0';
  1283                           	movlw	0Ah
  1284  0743  300A               	movwf	(___awdiv@divisor)
  1285  0744  00F0               	movlw	0
  1286  0745  3000               	movwf	((___awdiv@divisor))+1
  1287  0746  00F1               	movf	(_V2),w
  1288  0747  0849               	movwf	(??_main+0)+0
  1289  0748  00BE               	clrf	(??_main+0)+0+1
  1290  0749  01BF               	movf	0+(??_main+0)+0,w
  1291  074A  083E               	movwf	(___awdiv@dividend)
  1292  074B  00F2               	movf	1+(??_main+0)+0,w
  1293  074C  083F               	movwf	(___awdiv@dividend+1)
  1294  074D  00F3               	fcall	___awdiv
  1295  074E  120A  118A  25BC  120A  118A  	movf	(0+(?___awdiv)),w
  1296  0753  0870               	addlw	030h
  1297  0754  3E30               	bcf	status, 5	;RP0=0, select bank0
  1298  0755  1283               	bcf	status, 6	;RP1=0, select bank0
  1299  0756  1303               	movwf	(??_main+2)+0
  1300  0757  00C0               	movf	(??_main+2)+0,w
  1301  0758  0840               	movwf	0+(_Vlaznost)+0Ah
  1302  0759  00AA               	line	232
  1303                           	
  1304                           l1272:	
  1305  075A                     ;ROK6ZAD1.c: 232:           Temperatura[11] = 223;
  1306                           	movlw	low(0DFh)
  1307  075A  30DF               	movwf	(??_main+0)+0
  1308  075B  00BE               	movf	(??_main+0)+0,w
  1309  075C  083E               	movwf	0+(_Temperatura)+0Bh
  1310  075D  00BA               	line	233
  1311                           	
  1312                           l1274:	
  1313  075E                     ;ROK6ZAD1.c: 233:           Lcd_Set_Cursor(1, 1);
  1314                           	clrf	(Lcd_Set_Cursor@b)
  1315  075E  01F4               	incf	(Lcd_Set_Cursor@b),f
  1316  075F  0AF4               	movlw	low(01h)
  1317  0760  3001               	fcall	_Lcd_Set_Cursor
  1318  0761  120A  118A  244E  120A  118A  	line	234
  1319                           	
  1320                           l1276:	
  1321  0766                     ;ROK6ZAD1.c: 234:           Lcd_Write_String(Temperatura);
  1322                           	movlw	(low(_Temperatura|((0x0)<<8))&0ffh)
  1323  0766  302F               	movwf	(Lcd_Write_String@a)
  1324  0767  00F5               	movlw	(0x0)
  1325  0768  3000               	movwf	(Lcd_Write_String@a+1)
  1326  0769  00F6               	fcall	_Lcd_Write_String
  1327  076A  120A  118A  240A  120A  118A  	line	235
  1328                           	
  1329                           l1278:	
  1330  076F                     ;ROK6ZAD1.c: 235:           Lcd_Set_Cursor(2, 1);
  1331                           	clrf	(Lcd_Set_Cursor@b)
  1332  076F  01F4               	incf	(Lcd_Set_Cursor@b),f
  1333  0770  0AF4               	movlw	low(02h)
  1334  0771  3002               	fcall	_Lcd_Set_Cursor
  1335  0772  120A  118A  244E  120A  118A  	line	236
  1336                           	
  1337                           l1280:	
  1338  0777                     ;ROK6ZAD1.c: 236:           Lcd_Write_String(Vlaznost);
  1339                           	movlw	(low(_Vlaznost|((0x0)<<8))&0ffh)
  1340  0777  3020               	movwf	(Lcd_Write_String@a)
  1341  0778  00F5               	movlw	(0x0)
  1342  0779  3000               	movwf	(Lcd_Write_String@a+1)
  1343  077A  00F6               	fcall	_Lcd_Write_String
  1344  077B  120A  118A  240A  120A  118A  	line	237
  1345                           ;ROK6ZAD1.c: 237:         }
  1346                           	goto	l1294
  1347  0780  2FD3               	line	240
  1348                           ;ROK6ZAD1.c: 240:         else
  1349                           	
  1350                           l128:	
  1351  0781                     	line	242
  1352                           	
  1353                           l1282:	
  1354  0781                     ;ROK6ZAD1.c: 241:         {;ROK6ZAD1.c: 242:           Lcd_Clear();
  1355                           	fcall	_Lcd_Clear
  1356  0781  120A  118A  2301  120A  118A  	line	243
  1357                           ;ROK6ZAD1.c: 243:           Lcd_Set_Cursor(1, 1);
  1358                           	clrf	(Lcd_Set_Cursor@b)
  1359  0786  01F4               	incf	(Lcd_Set_Cursor@b),f
  1360  0787  0AF4               	movlw	low(01h)
  1361  0788  3001               	fcall	_Lcd_Set_Cursor
  1362  0789  120A  118A  244E  120A  118A  	line	244
  1363                           	
  1364                           l1284:	
  1365  078E                     ;ROK6ZAD1.c: 244:           Lcd_Write_String("Kontrolna suma:");
  1366                           	movlw	(low((((STR_2)-__stringbase)|8000h)))&0ffh
  1367  078E  3001               	movwf	(Lcd_Write_String@a)
  1368  078F  00F5               	movlw	80h
  1369  0790  3080               	movwf	(Lcd_Write_String@a+1)
  1370  0791  00F6               	fcall	_Lcd_Write_String
  1371  0792  120A  118A  240A  120A  118A  	line	245
  1372                           	
  1373                           l1286:	
  1374  0797                     ;ROK6ZAD1.c: 245:           Lcd_Set_Cursor(2,1);
  1375                           	clrf	(Lcd_Set_Cursor@b)
  1376  0797  01F4               	incf	(Lcd_Set_Cursor@b),f
  1377  0798  0AF4               	movlw	low(02h)
  1378  0799  3002               	fcall	_Lcd_Set_Cursor
  1379  079A  120A  118A  244E  120A  118A  	line	246
  1380                           ;ROK6ZAD1.c: 246:           Lcd_Write_String("ERROR!!!");
  1381                           	movlw	(low((((STR_3)-__stringbase)|8000h)))&0ffh
  1382  079F  3033               	movwf	(Lcd_Write_String@a)
  1383  07A0  00F5               	movlw	80h
  1384  07A1  3080               	movwf	(Lcd_Write_String@a+1)
  1385  07A2  00F6               	fcall	_Lcd_Write_String
  1386  07A3  120A  118A  240A  120A  118A  	goto	l1294
  1387  07A8  2FD3               	line	247
  1388                           ;ROK6ZAD1.c: 247:         }
  1389                           	
  1390                           l129:	
  1391  07A9                     	goto	l1294
  1392  07A9  2FD3               	line	249
  1393                           ;ROK6ZAD1.c: 249:       }
  1394                           	
  1395                           l127:	
  1396  07AA                     	line	250
  1397                           ;ROK6ZAD1.c: 250:     }
  1398                           	goto	l1294
  1399  07AA  2FD3               	line	253
  1400                           ;ROK6ZAD1.c: 253:     else
  1401                           	
  1402                           l123:	
  1403  07AB                     	line	255
  1404                           	
  1405                           l1288:	
  1406  07AB                     ;ROK6ZAD1.c: 254:     {;ROK6ZAD1.c: 255:       Lcd_Clear();
  1407                           	fcall	_Lcd_Clear
  1408  07AB  120A  118A  2301  120A  118A  	line	256
  1409                           ;ROK6ZAD1.c: 256:       Lcd_Set_Cursor(1, 1);
  1410                           	clrf	(Lcd_Set_Cursor@b)
  1411  07B0  01F4               	incf	(Lcd_Set_Cursor@b),f
  1412  07B1  0AF4               	movlw	low(01h)
  1413  07B2  3001               	fcall	_Lcd_Set_Cursor
  1414  07B3  120A  118A  244E  120A  118A  	line	257
  1415                           	
  1416                           l1290:	
  1417  07B8                     ;ROK6ZAD1.c: 257:       Lcd_Write_String("Nema odziva");
  1418                           	movlw	(low((((STR_4)-__stringbase)|8000h)))&0ffh
  1419  07B8  301D               	movwf	(Lcd_Write_String@a)
  1420  07B9  00F5               	movlw	80h
  1421  07BA  3080               	movwf	(Lcd_Write_String@a+1)
  1422  07BB  00F6               	fcall	_Lcd_Write_String
  1423  07BC  120A  118A  240A  120A  118A  	line	258
  1424                           	
  1425                           l1292:	
  1426  07C1                     ;ROK6ZAD1.c: 258:       Lcd_Set_Cursor(2, 1);
  1427                           	clrf	(Lcd_Set_Cursor@b)
  1428  07C1  01F4               	incf	(Lcd_Set_Cursor@b),f
  1429  07C2  0AF4               	movlw	low(02h)
  1430  07C3  3002               	fcall	_Lcd_Set_Cursor
  1431  07C4  120A  118A  244E  120A  118A  	line	259
  1432                           ;ROK6ZAD1.c: 259:       Lcd_Write_String("sa senzora!");
  1433                           	movlw	(low((((STR_5)-__stringbase)|8000h)))&0ffh
  1434  07C9  3011               	movwf	(Lcd_Write_String@a)
  1435  07CA  00F5               	movlw	80h
  1436  07CB  3080               	movwf	(Lcd_Write_String@a+1)
  1437  07CC  00F6               	fcall	_Lcd_Write_String
  1438  07CD  120A  118A  240A  120A  118A  	goto	l1294
  1439  07D2  2FD3               	line	260
  1440                           ;ROK6ZAD1.c: 260:     }
  1441                           	
  1442                           l130:	
  1443  07D3                     	line	262
  1444                           	
  1445                           l1294:	
  1446  07D3                     ;ROK6ZAD1.c: 262:     TMR1ON = 0;
  1447                           	bcf	status, 5	;RP0=0, select bank0
  1448  07D3  1283               	bcf	status, 6	;RP1=0, select bank0
  1449  07D4  1303               	bcf	(128/8),(128)&7	;volatile
  1450  07D5  1010               	line	263
  1451                           	
  1452                           l1296:	
  1453  07D6                     ;ROK6ZAD1.c: 263:     _delay((unsigned long)((1000)*(8000000/4000.0)));
  1454                           	opt asmopt_push
  1455                           opt asmopt_off
  1456                           movlw  11
  1457  07D6  300B               	bcf	status, 5	;RP0=0, select bank0
  1458  07D7  1283               	bcf	status, 6	;RP1=0, select bank0
  1459  07D8  1303               movwf	((??_main+0)+0+2),f
  1460  07D9  00C0               movlw	38
  1461  07DA  3026               movwf	((??_main+0)+0+1),f
  1462  07DB  00BF               	movlw	93
  1463  07DC  305D               movwf	((??_main+0)+0),f
  1464  07DD  00BE               	u1057:
  1465  07DE                     decfsz	((??_main+0)+0),f
  1466  07DE  0BBE               	goto	u1057
  1467  07DF  2FDE               	decfsz	((??_main+0)+0+1),f
  1468  07E0  0BBF               	goto	u1057
  1469  07E1  2FDE               	decfsz	((??_main+0)+0+2),f
  1470  07E2  0BC0               	goto	u1057
  1471  07E3  2FDE               opt asmopt_pop
  1472                           
  1473                           	goto	l1250
  1474  07E4  2E4A               	line	265
  1475                           ;ROK6ZAD1.c: 265:   }
  1476                           	
  1477                           l131:	
  1478  07E5                     	goto	l1250
  1479  07E5  2E4A               	
  1480                           l132:	
  1481  07E6                     	line	266
  1482                           	
  1483                           l133:	
  1484  07E6                     	global	start
  1485                           	ljmp	start
  1486  07E6  120A  118A  2800   	opt stack 0
  1487                           GLOBAL	__end_of_main
  1488                           	__end_of_main:
  1489  07E9                     	signat	_main,89
  1490                           	global	___awmod
  1491                           
  1492 ;; *************** function ___awmod *****************
  1493 ;; Defined at:
  1494 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  1495 ;; Parameters:    Size  Location     Type
  1496 ;;  divisor         2    0[COMMON] int 
  1497 ;;  dividend        2    2[COMMON] int 
  1498 ;; Auto vars:     Size  Location     Type
  1499 ;;  sign            1    6[COMMON] unsigned char 
  1500 ;;  counter         1    5[COMMON] unsigned char 
  1501 ;; Return value:  Size  Location     Type
  1502 ;;                  2    0[COMMON] int 
  1503 ;; Registers used:
  1504 ;;		wreg, status,2, status,0
  1505 ;; Tracked objects:
  1506 ;;		On entry : 0/0
  1507 ;;		On exit  : 0/0
  1508 ;;		Unchanged: 0/0
  1509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1510 ;;      Params:         4       0       0       0       0
  1511 ;;      Locals:         2       0       0       0       0
  1512 ;;      Temps:          1       0       0       0       0
  1513 ;;      Totals:         7       0       0       0       0
  1514 ;;Total ram usage:        7 bytes
  1515 ;; Hardware stack levels used:    1
  1516 ;; This function calls:
  1517 ;;		Nothing
  1518 ;; This function is called by:
  1519 ;;		_main
  1520 ;; This function uses a non-reentrant model
  1521 ;;
  1522                           psect	text1,local,class=CODE,delta=2,merge=1,group=1
  1523                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  1524                           	line	5
  1525                           global __ptext1
  1526                           __ptext1:	;psect for function ___awmod
  1527  0559                     psect	text1
  1528                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  1529                           	line	5
  1530                           	global	__size_of___awmod
  1531                           	__size_of___awmod	equ	__end_of___awmod-___awmod
  1532  0063                     	
  1533                           ___awmod:	
  1534  0559                     ;incstack = 0
  1535                           	opt	stack 7
  1536                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1537                           	line	12
  1538                           	
  1539                           l1200:	
  1540  0559                     	clrf	(___awmod@sign)
  1541  0559  01F6               	line	13
  1542                           	
  1543                           l1202:	
  1544  055A                     	btfss	(___awmod@dividend+1),7
  1545  055A  1FF3               	goto	u891
  1546  055B  2D5D               	goto	u890
  1547  055C  2D5E               u891:
  1548  055D                     	goto	l1208
  1549  055D  2D66               u890:
  1550  055E                     	line	14
  1551                           	
  1552                           l1204:	
  1553  055E                     	comf	(___awmod@dividend),f
  1554  055E  09F2               	comf	(___awmod@dividend+1),f
  1555  055F  09F3               	incf	(___awmod@dividend),f
  1556  0560  0AF2               	skipnz
  1557  0561  1903               	incf	(___awmod@dividend+1),f
  1558  0562  0AF3               	line	15
  1559                           	
  1560                           l1206:	
  1561  0563                     	clrf	(___awmod@sign)
  1562  0563  01F6               	incf	(___awmod@sign),f
  1563  0564  0AF6               	goto	l1208
  1564  0565  2D66               	line	16
  1565                           	
  1566                           l375:	
  1567  0566                     	line	17
  1568                           	
  1569                           l1208:	
  1570  0566                     	btfss	(___awmod@divisor+1),7
  1571  0566  1FF1               	goto	u901
  1572  0567  2D69               	goto	u900
  1573  0568  2D6A               u901:
  1574  0569                     	goto	l1212
  1575  0569  2D70               u900:
  1576  056A                     	line	18
  1577                           	
  1578                           l1210:	
  1579  056A                     	comf	(___awmod@divisor),f
  1580  056A  09F0               	comf	(___awmod@divisor+1),f
  1581  056B  09F1               	incf	(___awmod@divisor),f
  1582  056C  0AF0               	skipnz
  1583  056D  1903               	incf	(___awmod@divisor+1),f
  1584  056E  0AF1               	goto	l1212
  1585  056F  2D70               	
  1586                           l376:	
  1587  0570                     	line	19
  1588                           	
  1589                           l1212:	
  1590  0570                     	movf	((___awmod@divisor)),w
  1591  0570  0870               iorwf	((___awmod@divisor+1)),w
  1592  0571  0471               	btfsc	status,2
  1593  0572  1903               	goto	u911
  1594  0573  2D75               	goto	u910
  1595  0574  2D76               u911:
  1596  0575                     	goto	l1230
  1597  0575  2DAB               u910:
  1598  0576                     	line	20
  1599                           	
  1600                           l1214:	
  1601  0576                     	clrf	(___awmod@counter)
  1602  0576  01F5               	incf	(___awmod@counter),f
  1603  0577  0AF5               	line	21
  1604                           	goto	l1220
  1605  0578  2D85               	
  1606                           l379:	
  1607  0579                     	line	22
  1608                           	
  1609                           l1216:	
  1610  0579                     	movlw	01h
  1611  0579  3001               	
  1612                           u925:
  1613  057A                     	clrc
  1614  057A  1003               	rlf	(___awmod@divisor),f
  1615  057B  0DF0               	rlf	(___awmod@divisor+1),f
  1616  057C  0DF1               	addlw	-1
  1617  057D  3EFF               	skipz
  1618  057E  1D03               	goto	u925
  1619  057F  2D7A               	line	23
  1620                           	
  1621                           l1218:	
  1622  0580                     	movlw	low(01h)
  1623  0580  3001               	movwf	(??___awmod+0)+0
  1624  0581  00F4               	movf	(??___awmod+0)+0,w
  1625  0582  0874               	addwf	(___awmod@counter),f
  1626  0583  07F5               	goto	l1220
  1627  0584  2D85               	line	24
  1628                           	
  1629                           l378:	
  1630  0585                     	line	21
  1631                           	
  1632                           l1220:	
  1633  0585                     	btfss	(___awmod@divisor+1),(15)&7
  1634  0585  1FF1               	goto	u931
  1635  0586  2D88               	goto	u930
  1636  0587  2D89               u931:
  1637  0588                     	goto	l1216
  1638  0588  2D79               u930:
  1639  0589                     	goto	l1222
  1640  0589  2D8B               	
  1641                           l380:	
  1642  058A                     	goto	l1222
  1643  058A  2D8B               	line	25
  1644                           	
  1645                           l381:	
  1646  058B                     	line	26
  1647                           	
  1648                           l1222:	
  1649  058B                     	movf	(___awmod@divisor+1),w
  1650  058B  0871               	subwf	(___awmod@dividend+1),w
  1651  058C  0273               	skipz
  1652  058D  1D03               	goto	u945
  1653  058E  2D91               	movf	(___awmod@divisor),w
  1654  058F  0870               	subwf	(___awmod@dividend),w
  1655  0590  0272               u945:
  1656  0591                     	skipc
  1657  0591  1C03               	goto	u941
  1658  0592  2D94               	goto	u940
  1659  0593  2D95               u941:
  1660  0594                     	goto	l1226
  1661  0594  2D9C               u940:
  1662  0595                     	line	27
  1663                           	
  1664                           l1224:	
  1665  0595                     	movf	(___awmod@divisor),w
  1666  0595  0870               	subwf	(___awmod@dividend),f
  1667  0596  02F2               	movf	(___awmod@divisor+1),w
  1668  0597  0871               	skipc
  1669  0598  1C03               	decf	(___awmod@dividend+1),f
  1670  0599  03F3               	subwf	(___awmod@dividend+1),f
  1671  059A  02F3               	goto	l1226
  1672  059B  2D9C               	
  1673                           l382:	
  1674  059C                     	line	28
  1675                           	
  1676                           l1226:	
  1677  059C                     	movlw	01h
  1678  059C  3001               	
  1679                           u955:
  1680  059D                     	clrc
  1681  059D  1003               	rrf	(___awmod@divisor+1),f
  1682  059E  0CF1               	rrf	(___awmod@divisor),f
  1683  059F  0CF0               	addlw	-1
  1684  05A0  3EFF               	skipz
  1685  05A1  1D03               	goto	u955
  1686  05A2  2D9D               	line	29
  1687                           	
  1688                           l1228:	
  1689  05A3                     	movlw	01h
  1690  05A3  3001               	subwf	(___awmod@counter),f
  1691  05A4  02F5               	btfss	status,2
  1692  05A5  1D03               	goto	u961
  1693  05A6  2DA8               	goto	u960
  1694  05A7  2DA9               u961:
  1695  05A8                     	goto	l1222
  1696  05A8  2D8B               u960:
  1697  05A9                     	goto	l1230
  1698  05A9  2DAB               	
  1699                           l383:	
  1700  05AA                     	goto	l1230
  1701  05AA  2DAB               	line	30
  1702                           	
  1703                           l377:	
  1704  05AB                     	line	31
  1705                           	
  1706                           l1230:	
  1707  05AB                     	movf	((___awmod@sign)),w
  1708  05AB  0876               	btfsc	status,2
  1709  05AC  1903               	goto	u971
  1710  05AD  2DAF               	goto	u970
  1711  05AE  2DB0               u971:
  1712  05AF                     	goto	l1234
  1713  05AF  2DB6               u970:
  1714  05B0                     	line	32
  1715                           	
  1716                           l1232:	
  1717  05B0                     	comf	(___awmod@dividend),f
  1718  05B0  09F2               	comf	(___awmod@dividend+1),f
  1719  05B1  09F3               	incf	(___awmod@dividend),f
  1720  05B2  0AF2               	skipnz
  1721  05B3  1903               	incf	(___awmod@dividend+1),f
  1722  05B4  0AF3               	goto	l1234
  1723  05B5  2DB6               	
  1724                           l384:	
  1725  05B6                     	line	33
  1726                           	
  1727                           l1234:	
  1728  05B6                     	movf	(___awmod@dividend+1),w
  1729  05B6  0873               	movwf	(?___awmod+1)
  1730  05B7  00F1               	movf	(___awmod@dividend),w
  1731  05B8  0872               	movwf	(?___awmod)
  1732  05B9  00F0               	goto	l385
  1733  05BA  2DBB               	
  1734                           l1236:	
  1735  05BB                     	line	34
  1736                           	
  1737                           l385:	
  1738  05BB                     	return
  1739  05BB  0008               	opt stack 0
  1740                           GLOBAL	__end_of___awmod
  1741                           	__end_of___awmod:
  1742  05BC                     	signat	___awmod,8314
  1743                           	global	___awdiv
  1744                           
  1745 ;; *************** function ___awdiv *****************
  1746 ;; Defined at:
  1747 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  1748 ;; Parameters:    Size  Location     Type
  1749 ;;  divisor         2    0[COMMON] int 
  1750 ;;  dividend        2    2[COMMON] int 
  1751 ;; Auto vars:     Size  Location     Type
  1752 ;;  quotient        2    7[COMMON] int 
  1753 ;;  sign            1    6[COMMON] unsigned char 
  1754 ;;  counter         1    5[COMMON] unsigned char 
  1755 ;; Return value:  Size  Location     Type
  1756 ;;                  2    0[COMMON] int 
  1757 ;; Registers used:
  1758 ;;		wreg, status,2, status,0
  1759 ;; Tracked objects:
  1760 ;;		On entry : 0/0
  1761 ;;		On exit  : 0/0
  1762 ;;		Unchanged: 0/0
  1763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1764 ;;      Params:         4       0       0       0       0
  1765 ;;      Locals:         4       0       0       0       0
  1766 ;;      Temps:          1       0       0       0       0
  1767 ;;      Totals:         9       0       0       0       0
  1768 ;;Total ram usage:        9 bytes
  1769 ;; Hardware stack levels used:    1
  1770 ;; This function calls:
  1771 ;;		Nothing
  1772 ;; This function is called by:
  1773 ;;		_main
  1774 ;; This function uses a non-reentrant model
  1775 ;;
  1776                           psect	text2,local,class=CODE,delta=2,merge=1,group=1
  1777                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  1778                           	line	5
  1779                           global __ptext2
  1780                           __ptext2:	;psect for function ___awdiv
  1781  05BC                     psect	text2
  1782                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  1783                           	line	5
  1784                           	global	__size_of___awdiv
  1785                           	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  1786  0071                     	
  1787                           ___awdiv:	
  1788  05BC                     ;incstack = 0
  1789                           	opt	stack 7
  1790                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1791                           	line	13
  1792                           	
  1793                           l1156:	
  1794  05BC                     	clrf	(___awdiv@sign)
  1795  05BC  01F6               	line	14
  1796                           	
  1797                           l1158:	
  1798  05BD                     	btfss	(___awdiv@divisor+1),7
  1799  05BD  1FF1               	goto	u791
  1800  05BE  2DC0               	goto	u790
  1801  05BF  2DC1               u791:
  1802  05C0                     	goto	l1164
  1803  05C0  2DC9               u790:
  1804  05C1                     	line	15
  1805                           	
  1806                           l1160:	
  1807  05C1                     	comf	(___awdiv@divisor),f
  1808  05C1  09F0               	comf	(___awdiv@divisor+1),f
  1809  05C2  09F1               	incf	(___awdiv@divisor),f
  1810  05C3  0AF0               	skipnz
  1811  05C4  1903               	incf	(___awdiv@divisor+1),f
  1812  05C5  0AF1               	line	16
  1813                           	
  1814                           l1162:	
  1815  05C6                     	clrf	(___awdiv@sign)
  1816  05C6  01F6               	incf	(___awdiv@sign),f
  1817  05C7  0AF6               	goto	l1164
  1818  05C8  2DC9               	line	17
  1819                           	
  1820                           l362:	
  1821  05C9                     	line	18
  1822                           	
  1823                           l1164:	
  1824  05C9                     	btfss	(___awdiv@dividend+1),7
  1825  05C9  1FF3               	goto	u801
  1826  05CA  2DCC               	goto	u800
  1827  05CB  2DCD               u801:
  1828  05CC                     	goto	l1170
  1829  05CC  2DD7               u800:
  1830  05CD                     	line	19
  1831                           	
  1832                           l1166:	
  1833  05CD                     	comf	(___awdiv@dividend),f
  1834  05CD  09F2               	comf	(___awdiv@dividend+1),f
  1835  05CE  09F3               	incf	(___awdiv@dividend),f
  1836  05CF  0AF2               	skipnz
  1837  05D0  1903               	incf	(___awdiv@dividend+1),f
  1838  05D1  0AF3               	line	20
  1839                           	
  1840                           l1168:	
  1841  05D2                     	movlw	low(01h)
  1842  05D2  3001               	movwf	(??___awdiv+0)+0
  1843  05D3  00F4               	movf	(??___awdiv+0)+0,w
  1844  05D4  0874               	xorwf	(___awdiv@sign),f
  1845  05D5  06F6               	goto	l1170
  1846  05D6  2DD7               	line	21
  1847                           	
  1848                           l363:	
  1849  05D7                     	line	22
  1850                           	
  1851                           l1170:	
  1852  05D7                     	clrf	(___awdiv@quotient)
  1853  05D7  01F7               	clrf	(___awdiv@quotient+1)
  1854  05D8  01F8               	line	23
  1855                           	
  1856                           l1172:	
  1857  05D9                     	movf	((___awdiv@divisor)),w
  1858  05D9  0870               iorwf	((___awdiv@divisor+1)),w
  1859  05DA  0471               	btfsc	status,2
  1860  05DB  1903               	goto	u811
  1861  05DC  2DDE               	goto	u810
  1862  05DD  2DDF               u811:
  1863  05DE                     	goto	l1192
  1864  05DE  2E1C               u810:
  1865  05DF                     	line	24
  1866                           	
  1867                           l1174:	
  1868  05DF                     	clrf	(___awdiv@counter)
  1869  05DF  01F5               	incf	(___awdiv@counter),f
  1870  05E0  0AF5               	line	25
  1871                           	goto	l1180
  1872  05E1  2DEE               	
  1873                           l366:	
  1874  05E2                     	line	26
  1875                           	
  1876                           l1176:	
  1877  05E2                     	movlw	01h
  1878  05E2  3001               	
  1879                           u825:
  1880  05E3                     	clrc
  1881  05E3  1003               	rlf	(___awdiv@divisor),f
  1882  05E4  0DF0               	rlf	(___awdiv@divisor+1),f
  1883  05E5  0DF1               	addlw	-1
  1884  05E6  3EFF               	skipz
  1885  05E7  1D03               	goto	u825
  1886  05E8  2DE3               	line	27
  1887                           	
  1888                           l1178:	
  1889  05E9                     	movlw	low(01h)
  1890  05E9  3001               	movwf	(??___awdiv+0)+0
  1891  05EA  00F4               	movf	(??___awdiv+0)+0,w
  1892  05EB  0874               	addwf	(___awdiv@counter),f
  1893  05EC  07F5               	goto	l1180
  1894  05ED  2DEE               	line	28
  1895                           	
  1896                           l365:	
  1897  05EE                     	line	25
  1898                           	
  1899                           l1180:	
  1900  05EE                     	btfss	(___awdiv@divisor+1),(15)&7
  1901  05EE  1FF1               	goto	u831
  1902  05EF  2DF1               	goto	u830
  1903  05F0  2DF2               u831:
  1904  05F1                     	goto	l1176
  1905  05F1  2DE2               u830:
  1906  05F2                     	goto	l1182
  1907  05F2  2DF4               	
  1908                           l367:	
  1909  05F3                     	goto	l1182
  1910  05F3  2DF4               	line	29
  1911                           	
  1912                           l368:	
  1913  05F4                     	line	30
  1914                           	
  1915                           l1182:	
  1916  05F4                     	movlw	01h
  1917  05F4  3001               	
  1918                           u845:
  1919  05F5                     	clrc
  1920  05F5  1003               	rlf	(___awdiv@quotient),f
  1921  05F6  0DF7               	rlf	(___awdiv@quotient+1),f
  1922  05F7  0DF8               	addlw	-1
  1923  05F8  3EFF               	skipz
  1924  05F9  1D03               	goto	u845
  1925  05FA  2DF5               	line	31
  1926                           	movf	(___awdiv@divisor+1),w
  1927  05FB  0871               	subwf	(___awdiv@dividend+1),w
  1928  05FC  0273               	skipz
  1929  05FD  1D03               	goto	u855
  1930  05FE  2E01               	movf	(___awdiv@divisor),w
  1931  05FF  0870               	subwf	(___awdiv@dividend),w
  1932  0600  0272               u855:
  1933  0601                     	skipc
  1934  0601  1C03               	goto	u851
  1935  0602  2E04               	goto	u850
  1936  0603  2E05               u851:
  1937  0604                     	goto	l1188
  1938  0604  2E0D               u850:
  1939  0605                     	line	32
  1940                           	
  1941                           l1184:	
  1942  0605                     	movf	(___awdiv@divisor),w
  1943  0605  0870               	subwf	(___awdiv@dividend),f
  1944  0606  02F2               	movf	(___awdiv@divisor+1),w
  1945  0607  0871               	skipc
  1946  0608  1C03               	decf	(___awdiv@dividend+1),f
  1947  0609  03F3               	subwf	(___awdiv@dividend+1),f
  1948  060A  02F3               	line	33
  1949                           	
  1950                           l1186:	
  1951  060B                     	bsf	(___awdiv@quotient)+(0/8),(0)&7
  1952  060B  1477               	goto	l1188
  1953  060C  2E0D               	line	34
  1954                           	
  1955                           l369:	
  1956  060D                     	line	35
  1957                           	
  1958                           l1188:	
  1959  060D                     	movlw	01h
  1960  060D  3001               	
  1961                           u865:
  1962  060E                     	clrc
  1963  060E  1003               	rrf	(___awdiv@divisor+1),f
  1964  060F  0CF1               	rrf	(___awdiv@divisor),f
  1965  0610  0CF0               	addlw	-1
  1966  0611  3EFF               	skipz
  1967  0612  1D03               	goto	u865
  1968  0613  2E0E               	line	36
  1969                           	
  1970                           l1190:	
  1971  0614                     	movlw	01h
  1972  0614  3001               	subwf	(___awdiv@counter),f
  1973  0615  02F5               	btfss	status,2
  1974  0616  1D03               	goto	u871
  1975  0617  2E19               	goto	u870
  1976  0618  2E1A               u871:
  1977  0619                     	goto	l1182
  1978  0619  2DF4               u870:
  1979  061A                     	goto	l1192
  1980  061A  2E1C               	
  1981                           l370:	
  1982  061B                     	goto	l1192
  1983  061B  2E1C               	line	37
  1984                           	
  1985                           l364:	
  1986  061C                     	line	38
  1987                           	
  1988                           l1192:	
  1989  061C                     	movf	((___awdiv@sign)),w
  1990  061C  0876               	btfsc	status,2
  1991  061D  1903               	goto	u881
  1992  061E  2E20               	goto	u880
  1993  061F  2E21               u881:
  1994  0620                     	goto	l1196
  1995  0620  2E27               u880:
  1996  0621                     	line	39
  1997                           	
  1998                           l1194:	
  1999  0621                     	comf	(___awdiv@quotient),f
  2000  0621  09F7               	comf	(___awdiv@quotient+1),f
  2001  0622  09F8               	incf	(___awdiv@quotient),f
  2002  0623  0AF7               	skipnz
  2003  0624  1903               	incf	(___awdiv@quotient+1),f
  2004  0625  0AF8               	goto	l1196
  2005  0626  2E27               	
  2006                           l371:	
  2007  0627                     	line	40
  2008                           	
  2009                           l1196:	
  2010  0627                     	movf	(___awdiv@quotient+1),w
  2011  0627  0878               	movwf	(?___awdiv+1)
  2012  0628  00F1               	movf	(___awdiv@quotient),w
  2013  0629  0877               	movwf	(?___awdiv)
  2014  062A  00F0               	goto	l372
  2015  062B  2E2C               	
  2016                           l1198:	
  2017  062C                     	line	41
  2018                           	
  2019                           l372:	
  2020  062C                     	return
  2021  062C  0008               	opt stack 0
  2022                           GLOBAL	__end_of___awdiv
  2023                           	__end_of___awdiv:
  2024  062D                     	signat	___awdiv,8314
  2025                           	global	_Start_Signal
  2026                           
  2027 ;; *************** function _Start_Signal *****************
  2028 ;; Defined at:
  2029 ;;		line 132 in file "ROK6ZAD1.c"
  2030 ;; Parameters:    Size  Location     Type
  2031 ;;		None
  2032 ;; Auto vars:     Size  Location     Type
  2033 ;;		None
  2034 ;; Return value:  Size  Location     Type
  2035 ;;                  1    wreg      void 
  2036 ;; Registers used:
  2037 ;;		wreg
  2038 ;; Tracked objects:
  2039 ;;		On entry : 0/0
  2040 ;;		On exit  : 0/0
  2041 ;;		Unchanged: 0/0
  2042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2043 ;;      Params:         0       0       0       0       0
  2044 ;;      Locals:         0       0       0       0       0
  2045 ;;      Temps:          2       0       0       0       0
  2046 ;;      Totals:         2       0       0       0       0
  2047 ;;Total ram usage:        2 bytes
  2048 ;; Hardware stack levels used:    1
  2049 ;; This function calls:
  2050 ;;		Nothing
  2051 ;; This function is called by:
  2052 ;;		_main
  2053 ;; This function uses a non-reentrant model
  2054 ;;
  2055                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  2056                           	file	"ROK6ZAD1.c"
  2057                           	line	132
  2058                           global __ptext3
  2059                           __ptext3:	;psect for function _Start_Signal
  2060  033B                     psect	text3
  2061                           	file	"ROK6ZAD1.c"
  2062                           	line	132
  2063                           	global	__size_of_Start_Signal
  2064                           	__size_of_Start_Signal	equ	__end_of_Start_Signal-_Start_Signal
  2065  001B                     	
  2066                           _Start_Signal:	
  2067  033B                     ;incstack = 0
  2068                           	opt	stack 7
  2069                           ; Regs used in _Start_Signal: [wreg]
  2070                           	line	133
  2071                           	
  2072                           l1082:	
  2073  033B                     ;ROK6ZAD1.c: 133:   TRISB0 = 0;
  2074                           	bsf	status, 5	;RP0=1, select bank1
  2075  033B  1683               	bcf	status, 6	;RP1=0, select bank1
  2076  033C  1303               	bcf	(1072/8)^080h,(1072)&7	;volatile
  2077  033D  1006               	line	134
  2078                           ;ROK6ZAD1.c: 134:   RB0 = 0;
  2079                           	bcf	status, 5	;RP0=0, select bank0
  2080  033E  1283               	bcf	status, 6	;RP1=0, select bank0
  2081  033F  1303               	bcf	(48/8),(48)&7	;volatile
  2082  0340  1006               	line	136
  2083                           	
  2084                           l1084:	
  2085  0341                     ;ROK6ZAD1.c: 136:   _delay((unsigned long)((25)*(8000000/4000.0)));
  2086                           	opt asmopt_push
  2087                           opt asmopt_off
  2088                           movlw	65
  2089  0341  3041               movwf	((??_Start_Signal+0)+0+1),f
  2090  0342  00F1               	movlw	238
  2091  0343  30EE               movwf	((??_Start_Signal+0)+0),f
  2092  0344  00F0               	u1067:
  2093  0345                     decfsz	((??_Start_Signal+0)+0),f
  2094  0345  0BF0               	goto	u1067
  2095  0346  2B45               	decfsz	((??_Start_Signal+0)+0+1),f
  2096  0347  0BF1               	goto	u1067
  2097  0348  2B45               	nop
  2098  0349  0000               opt asmopt_pop
  2099                           
  2100                           	line	137
  2101                           	
  2102                           l1086:	
  2103  034A                     ;ROK6ZAD1.c: 137:   RB0 = 1;
  2104                           	bcf	status, 5	;RP0=0, select bank0
  2105  034A  1283               	bcf	status, 6	;RP1=0, select bank0
  2106  034B  1303               	bsf	(48/8),(48)&7	;volatile
  2107  034C  1406               	line	139
  2108                           ;ROK6ZAD1.c: 139:   _delay((unsigned long)((30)*(8000000/4000000.0)));
  2109                           	opt asmopt_push
  2110                           opt asmopt_off
  2111                           	movlw	19
  2112  034D  3013               movwf	((??_Start_Signal+0)+0),f
  2113  034E  00F0               	u1077:
  2114  034F                     decfsz	(??_Start_Signal+0)+0,f
  2115  034F  0BF0               	goto	u1077
  2116  0350  2B4F               	nop2
  2117  0351  2B52               opt asmopt_pop
  2118                           
  2119                           	line	140
  2120                           	
  2121                           l1088:	
  2122  0352                     ;ROK6ZAD1.c: 140:   TRISB0 = 1;
  2123                           	bsf	status, 5	;RP0=1, select bank1
  2124  0352  1683               	bcf	status, 6	;RP1=0, select bank1
  2125  0353  1303               	bsf	(1072/8)^080h,(1072)&7	;volatile
  2126  0354  1406               	line	141
  2127                           	
  2128                           l86:	
  2129  0355                     	return
  2130  0355  0008               	opt stack 0
  2131                           GLOBAL	__end_of_Start_Signal
  2132                           	__end_of_Start_Signal:
  2133  0356                     	signat	_Start_Signal,89
  2134                           	global	_Read_Data
  2135                           
  2136 ;; *************** function _Read_Data *****************
  2137 ;; Defined at:
  2138 ;;		line 169 in file "ROK6ZAD1.c"
  2139 ;; Parameters:    Size  Location     Type
  2140 ;;  dht_data        1    wreg     PTR unsigned char 
  2141 ;;		 -> KontrolnaSuma(1), T2(1), T1(1), V2(1), 
  2142 ;;		 -> V1(1), 
  2143 ;; Auto vars:     Size  Location     Type
  2144 ;;  dht_data        1    3[COMMON] PTR unsigned char 
  2145 ;;		 -> KontrolnaSuma(1), T2(1), T1(1), V2(1), 
  2146 ;;		 -> V1(1), 
  2147 ;;  i               1    2[COMMON] unsigned char 
  2148 ;; Return value:  Size  Location     Type
  2149 ;;		None               void
  2150 ;; Registers used:
  2151 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2152 ;; Tracked objects:
  2153 ;;		On entry : 0/0
  2154 ;;		On exit  : 0/0
  2155 ;;		Unchanged: 0/0
  2156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2157 ;;      Params:         0       0       0       0       0
  2158 ;;      Locals:         2       0       0       0       0
  2159 ;;      Temps:          2       0       0       0       0
  2160 ;;      Totals:         4       0       0       0       0
  2161 ;;Total ram usage:        4 bytes
  2162 ;; Hardware stack levels used:    1
  2163 ;; This function calls:
  2164 ;;		Nothing
  2165 ;; This function is called by:
  2166 ;;		_main
  2167 ;; This function uses a non-reentrant model
  2168 ;;
  2169                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  2170                           	line	169
  2171                           global __ptext4
  2172                           __ptext4:	;psect for function _Read_Data
  2173  04A2                     psect	text4
  2174                           	file	"ROK6ZAD1.c"
  2175                           	line	169
  2176                           	global	__size_of_Read_Data
  2177                           	__size_of_Read_Data	equ	__end_of_Read_Data-_Read_Data
  2178  005A                     	
  2179                           _Read_Data:	
  2180  04A2                     ;incstack = 0
  2181                           	opt	stack 7
  2182                           ; Regs used in _Read_Data: [wreg-fsr0h+status,2+status,0]
  2183                           ;Read_Data@dht_data stored from wreg
  2184                           	movwf	(Read_Data@dht_data)
  2185  04A2  00F3               	line	171
  2186                           	
  2187                           l1120:	
  2188  04A3                     ;ROK6ZAD1.c: 169: __bit Read_Data(unsigned char* dht_data);ROK6ZAD1.c: 170: {;ROK6ZAD1.c
                                 : 171:   *dht_data = 0;
  2189                           	movf	(Read_Data@dht_data),w
  2190  04A3  0873               	movwf	fsr0
  2191  04A4  0084               	bcf	status, 7	;select IRP bank0
  2192  04A5  1383               	clrf	indf
  2193  04A6  0180               	line	173
  2194                           	
  2195                           l1122:	
  2196  04A7                     ;ROK6ZAD1.c: 173:   for(char i = 0; i < 8; i++)
  2197                           	clrf	(Read_Data@i)
  2198  04A7  01F2               	
  2199                           l1124:	
  2200  04A8                     	movlw	low(08h)
  2201  04A8  3008               	subwf	(Read_Data@i),w
  2202  04A9  0272               	skipc
  2203  04AA  1C03               	goto	u711
  2204  04AB  2CAD               	goto	u710
  2205  04AC  2CAE               u711:
  2206  04AD                     	goto	l1128
  2207  04AD  2CB0               u710:
  2208  04AE                     	goto	l1152
  2209  04AE  2CF9               	
  2210                           l1126:	
  2211  04AF                     	goto	l1152
  2212  04AF  2CF9               	
  2213                           l106:	
  2214  04B0                     	line	175
  2215                           	
  2216                           l1128:	
  2217  04B0                     ;ROK6ZAD1.c: 174:   {;ROK6ZAD1.c: 175:     TMR1H = 0;
  2218                           	bcf	status, 5	;RP0=0, select bank0
  2219  04B0  1283               	bcf	status, 6	;RP1=0, select bank0
  2220  04B1  1303               	clrf	(15)	;volatile
  2221  04B2  018F               	line	176
  2222                           ;ROK6ZAD1.c: 176:     TMR1L = 0;
  2223                           	clrf	(14)	;volatile
  2224  04B3  018E               	line	178
  2225                           ;ROK6ZAD1.c: 178:     while(!RB0)
  2226                           	goto	l108
  2227  04B4  2CBE               	
  2228                           l109:	
  2229  04B5                     	line	179
  2230                           	
  2231                           l1130:	
  2232  04B5                     ;ROK6ZAD1.c: 179:       if(TMR1L > 100) {
  2233                           	movlw	low(065h)
  2234  04B5  3065               	subwf	(14),w	;volatile
  2235  04B6  020E               	skipc
  2236  04B7  1C03               	goto	u721
  2237  04B8  2CBA               	goto	u720
  2238  04B9  2CBB               u721:
  2239  04BA                     	goto	l108
  2240  04BA  2CBE               u720:
  2241  04BB                     	line	180
  2242                           	
  2243                           l1132:	
  2244  04BB                     ;ROK6ZAD1.c: 180:         return 1;
  2245                           	setc
  2246  04BB  1403               	
  2247                           	goto	l111
  2248  04BC  2CFB               	
  2249                           l1134:	
  2250  04BD                     	goto	l111
  2251  04BD  2CFB               	line	181
  2252                           ;ROK6ZAD1.c: 181:       }
  2253                           	
  2254                           l110:	
  2255  04BE                     	
  2256                           l108:	
  2257  04BE                     	line	178
  2258                           ;ROK6ZAD1.c: 178:     while(!RB0)
  2259                           	btfss	(48/8),(48)&7	;volatile
  2260  04BE  1C06               	goto	u731
  2261  04BF  2CC1               	goto	u730
  2262  04C0  2CC2               u731:
  2263  04C1                     	goto	l1130
  2264  04C1  2CB5               u730:
  2265  04C2                     	goto	l1136
  2266  04C2  2CC3               	
  2267                           l112:	
  2268  04C3                     	line	183
  2269                           	
  2270                           l1136:	
  2271  04C3                     ;ROK6ZAD1.c: 183:     TMR1H = 0;
  2272                           	clrf	(15)	;volatile
  2273  04C3  018F               	line	184
  2274                           ;ROK6ZAD1.c: 184:     TMR1L = 0;
  2275                           	clrf	(14)	;volatile
  2276  04C4  018E               	line	186
  2277                           ;ROK6ZAD1.c: 186:     while(RB0)
  2278                           	goto	l113
  2279  04C5  2CCF               	
  2280                           l114:	
  2281  04C6                     	line	187
  2282                           	
  2283                           l1138:	
  2284  04C6                     ;ROK6ZAD1.c: 187:       if(TMR1L > 100) {
  2285                           	movlw	low(065h)
  2286  04C6  3065               	subwf	(14),w	;volatile
  2287  04C7  020E               	skipc
  2288  04C8  1C03               	goto	u741
  2289  04C9  2CCB               	goto	u740
  2290  04CA  2CCC               u741:
  2291  04CB                     	goto	l113
  2292  04CB  2CCF               u740:
  2293  04CC                     	line	188
  2294                           	
  2295                           l1140:	
  2296  04CC                     ;ROK6ZAD1.c: 188:         return 1;
  2297                           	setc
  2298  04CC  1403               	
  2299                           	goto	l111
  2300  04CD  2CFB               	
  2301                           l1142:	
  2302  04CE                     	goto	l111
  2303  04CE  2CFB               	line	189
  2304                           ;ROK6ZAD1.c: 189:       }
  2305                           	
  2306                           l115:	
  2307  04CF                     	
  2308                           l113:	
  2309  04CF                     	line	186
  2310                           ;ROK6ZAD1.c: 186:     while(RB0)
  2311                           	btfsc	(48/8),(48)&7	;volatile
  2312  04CF  1806               	goto	u751
  2313  04D0  2CD2               	goto	u750
  2314  04D1  2CD3               u751:
  2315  04D2                     	goto	l1138
  2316  04D2  2CC6               u750:
  2317  04D3                     	goto	l1144
  2318  04D3  2CD4               	
  2319                           l116:	
  2320  04D4                     	line	191
  2321                           	
  2322                           l1144:	
  2323  04D4                     ;ROK6ZAD1.c: 191:      if(TMR1L > 50)
  2324                           	movlw	low(033h)
  2325  04D4  3033               	subwf	(14),w	;volatile
  2326  04D5  020E               	skipc
  2327  04D6  1C03               	goto	u761
  2328  04D7  2CD9               	goto	u760
  2329  04D8  2CDA               u761:
  2330  04D9                     	goto	l1148
  2331  04D9  2CEE               u760:
  2332  04DA                     	line	192
  2333                           	
  2334                           l1146:	
  2335  04DA                     ;ROK6ZAD1.c: 192:        *dht_data |= (1 << (7 - i));
  2336                           	movlw	low(01h)
  2337  04DA  3001               	movwf	(??_Read_Data+0)+0
  2338  04DB  00F0               	decf	(Read_Data@i),w
  2339  04DC  0372               	xorlw	0ffh
  2340  04DD  3AFF               	addlw	07h
  2341  04DE  3E07               	addlw	1
  2342  04DF  3E01               	goto	u774
  2343  04E0  2CE3               u775:
  2344  04E1                     	clrc
  2345  04E1  1003               	rlf	(??_Read_Data+0)+0,f
  2346  04E2  0DF0               u774:
  2347  04E3                     	addlw	-1
  2348  04E3  3EFF               	skipz
  2349  04E4  1D03               	goto	u775
  2350  04E5  2CE1               	movf	0+(??_Read_Data+0)+0,w
  2351  04E6  0870               	movwf	(??_Read_Data+1)+0
  2352  04E7  00F1               	movf	(Read_Data@dht_data),w
  2353  04E8  0873               	movwf	fsr0
  2354  04E9  0084               	movf	(??_Read_Data+1)+0,w
  2355  04EA  0871               	bcf	status, 7	;select IRP bank0
  2356  04EB  1383               	iorwf	indf,f
  2357  04EC  0480               	goto	l1148
  2358  04ED  2CEE               	
  2359                           l117:	
  2360  04EE                     	line	193
  2361                           	
  2362                           l1148:	
  2363  04EE                     ;ROK6ZAD1.c: 193:   }
  2364                           	movlw	low(01h)
  2365  04EE  3001               	movwf	(??_Read_Data+0)+0
  2366  04EF  00F0               	movf	(??_Read_Data+0)+0,w
  2367  04F0  0870               	addwf	(Read_Data@i),f
  2368  04F1  07F2               	
  2369                           l1150:	
  2370  04F2                     	movlw	low(08h)
  2371  04F2  3008               	subwf	(Read_Data@i),w
  2372  04F3  0272               	skipc
  2373  04F4  1C03               	goto	u781
  2374  04F5  2CF7               	goto	u780
  2375  04F6  2CF8               u781:
  2376  04F7                     	goto	l1128
  2377  04F7  2CB0               u780:
  2378  04F8                     	goto	l1152
  2379  04F8  2CF9               	
  2380                           l107:	
  2381  04F9                     	line	195
  2382                           	
  2383                           l1152:	
  2384  04F9                     ;ROK6ZAD1.c: 195:   return 0;
  2385                           	clrc
  2386  04F9  1003               	
  2387                           	goto	l111
  2388  04FA  2CFB               	
  2389                           l1154:	
  2390  04FB                     	line	196
  2391                           	
  2392                           l111:	
  2393  04FB                     	return
  2394  04FB  0008               	opt stack 0
  2395                           GLOBAL	__end_of_Read_Data
  2396                           	__end_of_Read_Data:
  2397  04FC                     	signat	_Read_Data,4216
  2398                           	global	_Lcd_Write_String
  2399                           
  2400 ;; *************** function _Lcd_Write_String *****************
  2401 ;; Defined at:
  2402 ;;		line 118 in file "ROK6ZAD1.c"
  2403 ;; Parameters:    Size  Location     Type
  2404 ;;  a               2    5[COMMON] PTR unsigned char 
  2405 ;;		 -> STR_5(12), STR_4(12), STR_3(9), STR_2(16), 
  2406 ;;		 -> Vlaznost(15), Temperatura(15), STR_1(10), 
  2407 ;; Auto vars:     Size  Location     Type
  2408 ;;  i               2   10[COMMON] int 
  2409 ;; Return value:  Size  Location     Type
  2410 ;;                  1    wreg      void 
  2411 ;; Registers used:
  2412 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2413 ;; Tracked objects:
  2414 ;;		On entry : 0/0
  2415 ;;		On exit  : 0/0
  2416 ;;		Unchanged: 0/0
  2417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2418 ;;      Params:         2       0       0       0       0
  2419 ;;      Locals:         2       0       0       0       0
  2420 ;;      Temps:          3       0       0       0       0
  2421 ;;      Totals:         7       0       0       0       0
  2422 ;;Total ram usage:        7 bytes
  2423 ;; Hardware stack levels used:    1
  2424 ;; Hardware stack levels required when called:    2
  2425 ;; This function calls:
  2426 ;;		_Lcd_Write_Char
  2427 ;; This function is called by:
  2428 ;;		_main
  2429 ;; This function uses a non-reentrant model
  2430 ;;
  2431                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  2432                           	line	118
  2433                           global __ptext5
  2434                           __ptext5:	;psect for function _Lcd_Write_String
  2435  040A                     psect	text5
  2436                           	file	"ROK6ZAD1.c"
  2437                           	line	118
  2438                           	global	__size_of_Lcd_Write_String
  2439                           	__size_of_Lcd_Write_String	equ	__end_of_Lcd_Write_String-_Lcd_Write_String
  2440  0044                     	
  2441                           _Lcd_Write_String:	
  2442  040A                     ;incstack = 0
  2443                           	opt	stack 5
  2444                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2445                           	line	120
  2446                           	
  2447                           l1074:	
  2448  040A                     ;ROK6ZAD1.c: 119:     int i;;ROK6ZAD1.c: 120:     for(i=0;a[i]!='\0';i++) {
  2449                           	clrf	(Lcd_Write_String@i)
  2450  040A  01FA               	clrf	(Lcd_Write_String@i+1)
  2451  040B  01FB               	goto	l1080
  2452  040C  2C30               	
  2453                           l67:	
  2454  040D                     	line	121
  2455                           	
  2456                           l1076:	
  2457  040D                     ;ROK6ZAD1.c: 121:         Lcd_Write_Char(a[i]);
  2458                           	movf	(Lcd_Write_String@i),w
  2459  040D  087A               	addwf	(Lcd_Write_String@a),w
  2460  040E  0775               	movwf	(??_Lcd_Write_String+1)+0
  2461  040F  00F8               	movf	(Lcd_Write_String@a+1),w
  2462  0410  0876               	movwf	(??_Lcd_Write_String+0)+0
  2463  0411  00F7               	skipnc
  2464  0412  1803               	incf	(??_Lcd_Write_String+0)+0,f
  2465  0413  0AF7               	btfss	(Lcd_Write_String@i),7
  2466  0414  1FFA               	goto	u620
  2467  0415  2C17               	decf	(??_Lcd_Write_String+0)+0,f
  2468  0416  03F7               u620:
  2469  0417                     	movf	(??_Lcd_Write_String+0)+0,w
  2470  0417  0877               	movwf	0+((??_Lcd_Write_String+1)+0)+1
  2471  0418  00F9               	movf	1+(??_Lcd_Write_String+1)+0,w
  2472  0419  0879               	bcf	status, 5	;RP0=0, select bank0
  2473  041A  1283               	bcf	status, 6	;RP1=0, select bank0
  2474  041B  1303               	movwf	btemp+1
  2475  041C  00FF               	movf	0+(??_Lcd_Write_String+1)+0,w
  2476  041D  0878               	movwf	fsr0
  2477  041E  0084               	fcall	stringtab
  2478  041F  120A  118A  2003  120A  118A  	fcall	_Lcd_Write_Char
  2479  0424  120A  118A  2397  120A  118A  	line	122
  2480                           	
  2481                           l1078:	
  2482  0429                     ;ROK6ZAD1.c: 122:     }
  2483                           	movlw	01h
  2484  0429  3001               	addwf	(Lcd_Write_String@i),f
  2485  042A  07FA               	skipnc
  2486  042B  1803               	incf	(Lcd_Write_String@i+1),f
  2487  042C  0AFB               	movlw	0
  2488  042D  3000               	addwf	(Lcd_Write_String@i+1),f
  2489  042E  07FB               	goto	l1080
  2490  042F  2C30               	
  2491                           l66:	
  2492  0430                     	
  2493                           l1080:	
  2494  0430                     	movf	(Lcd_Write_String@i),w
  2495  0430  087A               	addwf	(Lcd_Write_String@a),w
  2496  0431  0775               	movwf	(??_Lcd_Write_String+1)+0
  2497  0432  00F8               	movf	(Lcd_Write_String@a+1),w
  2498  0433  0876               	movwf	(??_Lcd_Write_String+0)+0
  2499  0434  00F7               	skipnc
  2500  0435  1803               	incf	(??_Lcd_Write_String+0)+0,f
  2501  0436  0AF7               	btfss	(Lcd_Write_String@i),7
  2502  0437  1FFA               	goto	u630
  2503  0438  2C3A               	decf	(??_Lcd_Write_String+0)+0,f
  2504  0439  03F7               u630:
  2505  043A                     	movf	(??_Lcd_Write_String+0)+0,w
  2506  043A  0877               	movwf	0+((??_Lcd_Write_String+1)+0)+1
  2507  043B  00F9               	movf	1+(??_Lcd_Write_String+1)+0,w
  2508  043C  0879               	bcf	status, 5	;RP0=0, select bank0
  2509  043D  1283               	bcf	status, 6	;RP1=0, select bank0
  2510  043E  1303               	movwf	btemp+1
  2511  043F  00FF               	movf	0+(??_Lcd_Write_String+1)+0,w
  2512  0440  0878               	movwf	fsr0
  2513  0441  0084               	fcall	stringtab
  2514  0442  120A  118A  2003  120A  118A  	xorlw	0
  2515  0447  3A00               	skipz
  2516  0448  1D03               	goto	u641
  2517  0449  2C4B               	goto	u640
  2518  044A  2C4C               u641:
  2519  044B                     	goto	l1076
  2520  044B  2C0D               u640:
  2521  044C                     	goto	l69
  2522  044C  2C4D               	
  2523                           l68:	
  2524  044D                     	line	123
  2525                           	
  2526                           l69:	
  2527  044D                     	return
  2528  044D  0008               	opt stack 0
  2529                           GLOBAL	__end_of_Lcd_Write_String
  2530                           	__end_of_Lcd_Write_String:
  2531  044E                     	signat	_Lcd_Write_String,4217
  2532                           	global	_Lcd_Write_Char
  2533                           
  2534 ;; *************** function _Lcd_Write_Char *****************
  2535 ;; Defined at:
  2536 ;;		line 103 in file "ROK6ZAD1.c"
  2537 ;; Parameters:    Size  Location     Type
  2538 ;;  a               1    wreg     unsigned char 
  2539 ;; Auto vars:     Size  Location     Type
  2540 ;;  a               1    4[COMMON] unsigned char 
  2541 ;;  y               1    3[COMMON] unsigned char 
  2542 ;;  temp            1    2[COMMON] unsigned char 
  2543 ;; Return value:  Size  Location     Type
  2544 ;;                  1    wreg      void 
  2545 ;; Registers used:
  2546 ;;		wreg, status,2, status,0, pclath, cstack
  2547 ;; Tracked objects:
  2548 ;;		On entry : 0/0
  2549 ;;		On exit  : 0/0
  2550 ;;		Unchanged: 0/0
  2551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2552 ;;      Params:         0       0       0       0       0
  2553 ;;      Locals:         3       0       0       0       0
  2554 ;;      Temps:          1       0       0       0       0
  2555 ;;      Totals:         4       0       0       0       0
  2556 ;;Total ram usage:        4 bytes
  2557 ;; Hardware stack levels used:    1
  2558 ;; Hardware stack levels required when called:    1
  2559 ;; This function calls:
  2560 ;;		_Lcd_Port
  2561 ;; This function is called by:
  2562 ;;		_Lcd_Write_String
  2563 ;; This function uses a non-reentrant model
  2564 ;;
  2565                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  2566                           	line	103
  2567                           global __ptext6
  2568                           __ptext6:	;psect for function _Lcd_Write_Char
  2569  0397                     psect	text6
  2570                           	file	"ROK6ZAD1.c"
  2571                           	line	103
  2572                           	global	__size_of_Lcd_Write_Char
  2573                           	__size_of_Lcd_Write_Char	equ	__end_of_Lcd_Write_Char-_Lcd_Write_Char
  2574  0039                     	
  2575                           _Lcd_Write_Char:	
  2576  0397                     ;incstack = 0
  2577                           	opt	stack 5
  2578                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2579                           ;Lcd_Write_Char@a stored from wreg
  2580                           	movwf	(Lcd_Write_Char@a)
  2581  0397  00F4               	line	105
  2582                           	
  2583                           l1022:	
  2584  0398                     ;ROK6ZAD1.c: 104:     char temp, y;;ROK6ZAD1.c: 105:     temp=a&0x0F;
  2585                           	movf	(Lcd_Write_Char@a),w
  2586  0398  0874               	andlw	0Fh
  2587  0399  390F               	movwf	(??_Lcd_Write_Char+0)+0
  2588  039A  00F1               	movf	(??_Lcd_Write_Char+0)+0,w
  2589  039B  0871               	movwf	(Lcd_Write_Char@temp)
  2590  039C  00F2               	line	106
  2591                           ;ROK6ZAD1.c: 106:     y=a&0xF0;
  2592                           	movf	(Lcd_Write_Char@a),w
  2593  039D  0874               	andlw	0F0h
  2594  039E  39F0               	movwf	(??_Lcd_Write_Char+0)+0
  2595  039F  00F1               	movf	(??_Lcd_Write_Char+0)+0,w
  2596  03A0  0871               	movwf	(Lcd_Write_Char@y)
  2597  03A1  00F3               	line	107
  2598                           	
  2599                           l1024:	
  2600  03A2                     ;ROK6ZAD1.c: 107:     RD2=1;
  2601                           	bcf	status, 5	;RP0=0, select bank0
  2602  03A2  1283               	bcf	status, 6	;RP1=0, select bank0
  2603  03A3  1303               	bsf	(66/8),(66)&7	;volatile
  2604  03A4  1508               	line	108
  2605                           	
  2606                           l1026:	
  2607  03A5                     ;ROK6ZAD1.c: 108:     Lcd_Port(y>>4);
  2608                           	movf	(Lcd_Write_Char@y),w
  2609  03A5  0873               	movwf	(??_Lcd_Write_Char+0)+0
  2610  03A6  00F1               	movlw	04h
  2611  03A7  3004               u575:
  2612  03A8                     	clrc
  2613  03A8  1003               	rrf	(??_Lcd_Write_Char+0)+0,f
  2614  03A9  0CF1               	addlw	-1
  2615  03AA  3EFF               	skipz
  2616  03AB  1D03               	goto	u575
  2617  03AC  2BA8               	movf	0+(??_Lcd_Write_Char+0)+0,w
  2618  03AD  0871               	fcall	_Lcd_Port
  2619  03AE  120A  118A  2374  120A  118A  	line	109
  2620                           	
  2621                           l1028:	
  2622  03B3                     ;ROK6ZAD1.c: 109:     RD3=1;
  2623                           	bcf	status, 5	;RP0=0, select bank0
  2624  03B3  1283               	bcf	status, 6	;RP1=0, select bank0
  2625  03B4  1303               	bsf	(67/8),(67)&7	;volatile
  2626  03B5  1588               	line	110
  2627                           	
  2628                           l1030:	
  2629  03B6                     ;ROK6ZAD1.c: 110:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2630                           	opt asmopt_push
  2631                           opt asmopt_off
  2632                           	movlw	26
  2633  03B6  301A               movwf	((??_Lcd_Write_Char+0)+0),f
  2634  03B7  00F1               	u1087:
  2635  03B8                     decfsz	(??_Lcd_Write_Char+0)+0,f
  2636  03B8  0BF1               	goto	u1087
  2637  03B9  2BB8               	nop
  2638  03BA  0000               opt asmopt_pop
  2639                           
  2640                           	line	111
  2641                           	
  2642                           l1032:	
  2643  03BB                     ;ROK6ZAD1.c: 111:     RD3=0;
  2644                           	bcf	status, 5	;RP0=0, select bank0
  2645  03BB  1283               	bcf	status, 6	;RP1=0, select bank0
  2646  03BC  1303               	bcf	(67/8),(67)&7	;volatile
  2647  03BD  1188               	line	112
  2648                           	
  2649                           l1034:	
  2650  03BE                     ;ROK6ZAD1.c: 112:     Lcd_Port(temp);
  2651                           	movf	(Lcd_Write_Char@temp),w
  2652  03BE  0872               	fcall	_Lcd_Port
  2653  03BF  120A  118A  2374  120A  118A  	line	113
  2654                           	
  2655                           l1036:	
  2656  03C4                     ;ROK6ZAD1.c: 113:     RD3=1;
  2657                           	bcf	status, 5	;RP0=0, select bank0
  2658  03C4  1283               	bcf	status, 6	;RP1=0, select bank0
  2659  03C5  1303               	bsf	(67/8),(67)&7	;volatile
  2660  03C6  1588               	line	114
  2661                           	
  2662                           l1038:	
  2663  03C7                     ;ROK6ZAD1.c: 114:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2664                           	opt asmopt_push
  2665                           opt asmopt_off
  2666                           	movlw	26
  2667  03C7  301A               movwf	((??_Lcd_Write_Char+0)+0),f
  2668  03C8  00F1               	u1097:
  2669  03C9                     decfsz	(??_Lcd_Write_Char+0)+0,f
  2670  03C9  0BF1               	goto	u1097
  2671  03CA  2BC9               	nop
  2672  03CB  0000               opt asmopt_pop
  2673                           
  2674                           	line	115
  2675                           	
  2676                           l1040:	
  2677  03CC                     ;ROK6ZAD1.c: 115:     RD3=0;
  2678                           	bcf	status, 5	;RP0=0, select bank0
  2679  03CC  1283               	bcf	status, 6	;RP1=0, select bank0
  2680  03CD  1303               	bcf	(67/8),(67)&7	;volatile
  2681  03CE  1188               	line	116
  2682                           	
  2683                           l63:	
  2684  03CF                     	return
  2685  03CF  0008               	opt stack 0
  2686                           GLOBAL	__end_of_Lcd_Write_Char
  2687                           	__end_of_Lcd_Write_Char:
  2688  03D0                     	signat	_Lcd_Write_Char,4217
  2689                           	global	_Lcd_Set_Cursor
  2690                           
  2691 ;; *************** function _Lcd_Set_Cursor *****************
  2692 ;; Defined at:
  2693 ;;		line 68 in file "ROK6ZAD1.c"
  2694 ;; Parameters:    Size  Location     Type
  2695 ;;  a               1    wreg     unsigned char 
  2696 ;;  b               1    4[COMMON] unsigned char 
  2697 ;; Auto vars:     Size  Location     Type
  2698 ;;  a               1    7[COMMON] unsigned char 
  2699 ;;  temp            1   10[COMMON] unsigned char 
  2700 ;;  y               1    9[COMMON] unsigned char 
  2701 ;;  z               1    8[COMMON] unsigned char 
  2702 ;; Return value:  Size  Location     Type
  2703 ;;                  1    wreg      void 
  2704 ;; Registers used:
  2705 ;;		wreg, status,2, status,0, pclath, cstack
  2706 ;; Tracked objects:
  2707 ;;		On entry : 0/0
  2708 ;;		On exit  : 0/0
  2709 ;;		Unchanged: 0/0
  2710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2711 ;;      Params:         1       0       0       0       0
  2712 ;;      Locals:         4       0       0       0       0
  2713 ;;      Temps:          2       0       0       0       0
  2714 ;;      Totals:         7       0       0       0       0
  2715 ;;Total ram usage:        7 bytes
  2716 ;; Hardware stack levels used:    1
  2717 ;; Hardware stack levels required when called:    2
  2718 ;; This function calls:
  2719 ;;		_Lcd_Cmd
  2720 ;; This function is called by:
  2721 ;;		_main
  2722 ;; This function uses a non-reentrant model
  2723 ;;
  2724                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  2725                           	line	68
  2726                           global __ptext7
  2727                           __ptext7:	;psect for function _Lcd_Set_Cursor
  2728  044E                     psect	text7
  2729                           	file	"ROK6ZAD1.c"
  2730                           	line	68
  2731                           	global	__size_of_Lcd_Set_Cursor
  2732                           	__size_of_Lcd_Set_Cursor	equ	__end_of_Lcd_Set_Cursor-_Lcd_Set_Cursor
  2733  0054                     	
  2734                           _Lcd_Set_Cursor:	
  2735  044E                     ;incstack = 0
  2736                           	opt	stack 5
  2737                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2738                           ;Lcd_Set_Cursor@a stored from wreg
  2739                           	movwf	(Lcd_Set_Cursor@a)
  2740  044E  00F7               	line	70
  2741                           	
  2742                           l1044:	
  2743  044F                     ;ROK6ZAD1.c: 69:     char temp, z, y;;ROK6ZAD1.c: 70:     if(a==1) {
  2744                           		decf	((Lcd_Set_Cursor@a)),w
  2745  044F  0377               	btfss	status,2
  2746  0450  1D03               	goto	u581
  2747  0451  2C53               	goto	u580
  2748  0452  2C54               u581:
  2749  0453                     	goto	l1054
  2750  0453  2C77               u580:
  2751  0454                     	line	71
  2752                           	
  2753                           l1046:	
  2754  0454                     ;ROK6ZAD1.c: 71:         temp=0x80+b-1;
  2755                           	movf	(Lcd_Set_Cursor@b),w
  2756  0454  0874               	addlw	07Fh
  2757  0455  3E7F               	movwf	(??_Lcd_Set_Cursor+0)+0
  2758  0456  00F5               	movf	(??_Lcd_Set_Cursor+0)+0,w
  2759  0457  0875               	movwf	(Lcd_Set_Cursor@temp)
  2760  0458  00FA               	line	72
  2761                           ;ROK6ZAD1.c: 72:         z=temp>>4;
  2762                           	movf	(Lcd_Set_Cursor@temp),w
  2763  0459  087A               	movwf	(??_Lcd_Set_Cursor+0)+0
  2764  045A  00F5               	movlw	04h
  2765  045B  3004               u595:
  2766  045C                     	clrc
  2767  045C  1003               	rrf	(??_Lcd_Set_Cursor+0)+0,f
  2768  045D  0CF5               	addlw	-1
  2769  045E  3EFF               	skipz
  2770  045F  1D03               	goto	u595
  2771  0460  2C5C               	movf	0+(??_Lcd_Set_Cursor+0)+0,w
  2772  0461  0875               	movwf	(??_Lcd_Set_Cursor+1)+0
  2773  0462  00F6               	movf	(??_Lcd_Set_Cursor+1)+0,w
  2774  0463  0876               	movwf	(Lcd_Set_Cursor@z)
  2775  0464  00F8               	line	73
  2776                           	
  2777                           l1048:	
  2778  0465                     ;ROK6ZAD1.c: 73:         y=temp&0x0F;
  2779                           	movf	(Lcd_Set_Cursor@temp),w
  2780  0465  087A               	andlw	0Fh
  2781  0466  390F               	movwf	(??_Lcd_Set_Cursor+0)+0
  2782  0467  00F5               	movf	(??_Lcd_Set_Cursor+0)+0,w
  2783  0468  0875               	movwf	(Lcd_Set_Cursor@y)
  2784  0469  00F9               	line	74
  2785                           	
  2786                           l1050:	
  2787  046A                     ;ROK6ZAD1.c: 74:         Lcd_Cmd(z);
  2788                           	movf	(Lcd_Set_Cursor@z),w
  2789  046A  0878               	fcall	_Lcd_Cmd
  2790  046B  120A  118A  2321  120A  118A  	line	75
  2791                           	
  2792                           l1052:	
  2793  0470                     ;ROK6ZAD1.c: 75:         Lcd_Cmd(y);
  2794                           	movf	(Lcd_Set_Cursor@y),w
  2795  0470  0879               	fcall	_Lcd_Cmd
  2796  0471  120A  118A  2321  120A  118A  	line	76
  2797                           ;ROK6ZAD1.c: 76:     }
  2798                           	goto	l57
  2799  0476  2CA1               	line	77
  2800                           ;ROK6ZAD1.c: 77:     else if(a==2) {
  2801                           	
  2802                           l54:	
  2803  0477                     	
  2804                           l1054:	
  2805  0477                     		movlw	2
  2806  0477  3002               	xorwf	((Lcd_Set_Cursor@a)),w
  2807  0478  0677               	btfss	status,2
  2808  0479  1D03               	goto	u601
  2809  047A  2C7C               	goto	u600
  2810  047B  2C7D               u601:
  2811  047C                     	goto	l57
  2812  047C  2CA1               u600:
  2813  047D                     	line	78
  2814                           	
  2815                           l1056:	
  2816  047D                     ;ROK6ZAD1.c: 78:         temp=0xC0+b-1;
  2817                           	movf	(Lcd_Set_Cursor@b),w
  2818  047D  0874               	addlw	0BFh
  2819  047E  3EBF               	movwf	(??_Lcd_Set_Cursor+0)+0
  2820  047F  00F5               	movf	(??_Lcd_Set_Cursor+0)+0,w
  2821  0480  0875               	movwf	(Lcd_Set_Cursor@temp)
  2822  0481  00FA               	line	79
  2823                           ;ROK6ZAD1.c: 79:         z=temp>>4;
  2824                           	movf	(Lcd_Set_Cursor@temp),w
  2825  0482  087A               	movwf	(??_Lcd_Set_Cursor+0)+0
  2826  0483  00F5               	movlw	04h
  2827  0484  3004               u615:
  2828  0485                     	clrc
  2829  0485  1003               	rrf	(??_Lcd_Set_Cursor+0)+0,f
  2830  0486  0CF5               	addlw	-1
  2831  0487  3EFF               	skipz
  2832  0488  1D03               	goto	u615
  2833  0489  2C85               	movf	0+(??_Lcd_Set_Cursor+0)+0,w
  2834  048A  0875               	movwf	(??_Lcd_Set_Cursor+1)+0
  2835  048B  00F6               	movf	(??_Lcd_Set_Cursor+1)+0,w
  2836  048C  0876               	movwf	(Lcd_Set_Cursor@z)
  2837  048D  00F8               	line	80
  2838                           	
  2839                           l1058:	
  2840  048E                     ;ROK6ZAD1.c: 80:         y=temp&0x0F;
  2841                           	movf	(Lcd_Set_Cursor@temp),w
  2842  048E  087A               	andlw	0Fh
  2843  048F  390F               	movwf	(??_Lcd_Set_Cursor+0)+0
  2844  0490  00F5               	movf	(??_Lcd_Set_Cursor+0)+0,w
  2845  0491  0875               	movwf	(Lcd_Set_Cursor@y)
  2846  0492  00F9               	line	81
  2847                           	
  2848                           l1060:	
  2849  0493                     ;ROK6ZAD1.c: 81:         Lcd_Cmd(z);
  2850                           	movf	(Lcd_Set_Cursor@z),w
  2851  0493  0878               	fcall	_Lcd_Cmd
  2852  0494  120A  118A  2321  120A  118A  	line	82
  2853                           	
  2854                           l1062:	
  2855  0499                     ;ROK6ZAD1.c: 82:         Lcd_Cmd(y);
  2856                           	movf	(Lcd_Set_Cursor@y),w
  2857  0499  0879               	fcall	_Lcd_Cmd
  2858  049A  120A  118A  2321  120A  118A  	goto	l57
  2859  049F  2CA1               	line	83
  2860                           ;ROK6ZAD1.c: 83:     }
  2861                           	
  2862                           l56:	
  2863  04A0                     	goto	l57
  2864  04A0  2CA1               	
  2865                           l55:	
  2866  04A1                     	line	84
  2867                           	
  2868                           l57:	
  2869  04A1                     	return
  2870  04A1  0008               	opt stack 0
  2871                           GLOBAL	__end_of_Lcd_Set_Cursor
  2872                           	__end_of_Lcd_Set_Cursor:
  2873  04A2                     	signat	_Lcd_Set_Cursor,8313
  2874                           	global	_Lcd_Init
  2875                           
  2876 ;; *************** function _Lcd_Init *****************
  2877 ;; Defined at:
  2878 ;;		line 86 in file "ROK6ZAD1.c"
  2879 ;; Parameters:    Size  Location     Type
  2880 ;;		None
  2881 ;; Auto vars:     Size  Location     Type
  2882 ;;		None
  2883 ;; Return value:  Size  Location     Type
  2884 ;;                  1    wreg      void 
  2885 ;; Registers used:
  2886 ;;		wreg, status,2, status,0, pclath, cstack
  2887 ;; Tracked objects:
  2888 ;;		On entry : 0/0
  2889 ;;		On exit  : 0/0
  2890 ;;		Unchanged: 0/0
  2891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2892 ;;      Params:         0       0       0       0       0
  2893 ;;      Locals:         0       0       0       0       0
  2894 ;;      Temps:          2       0       0       0       0
  2895 ;;      Totals:         2       0       0       0       0
  2896 ;;Total ram usage:        2 bytes
  2897 ;; Hardware stack levels used:    1
  2898 ;; Hardware stack levels required when called:    2
  2899 ;; This function calls:
  2900 ;;		_Lcd_Cmd
  2901 ;;		_Lcd_Port
  2902 ;; This function is called by:
  2903 ;;		_main
  2904 ;; This function uses a non-reentrant model
  2905 ;;
  2906                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  2907                           	line	86
  2908                           global __ptext8
  2909                           __ptext8:	;psect for function _Lcd_Init
  2910  04FC                     psect	text8
  2911                           	file	"ROK6ZAD1.c"
  2912                           	line	86
  2913                           	global	__size_of_Lcd_Init
  2914                           	__size_of_Lcd_Init	equ	__end_of_Lcd_Init-_Lcd_Init
  2915  005D                     	
  2916                           _Lcd_Init:	
  2917  04FC                     ;incstack = 0
  2918                           	opt	stack 5
  2919                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2920                           	line	87
  2921                           	
  2922                           l1064:	
  2923  04FC                     ;ROK6ZAD1.c: 87:     Lcd_Port(0x00);
  2924                           	movlw	low(0)
  2925  04FC  3000               	fcall	_Lcd_Port
  2926  04FD  120A  118A  2374  120A  118A  	line	88
  2927                           	
  2928                           l1066:	
  2929  0502                     ;ROK6ZAD1.c: 88:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2930                           	opt asmopt_push
  2931                           opt asmopt_off
  2932                           movlw	52
  2933  0502  3034               movwf	((??_Lcd_Init+0)+0+1),f
  2934  0503  00F5               	movlw	241
  2935  0504  30F1               movwf	((??_Lcd_Init+0)+0),f
  2936  0505  00F4               	u1107:
  2937  0506                     decfsz	((??_Lcd_Init+0)+0),f
  2938  0506  0BF4               	goto	u1107
  2939  0507  2D06               	decfsz	((??_Lcd_Init+0)+0+1),f
  2940  0508  0BF5               	goto	u1107
  2941  0509  2D06               	nop2
  2942  050A  2D0B               opt asmopt_pop
  2943                           
  2944                           	line	89
  2945                           	
  2946                           l1068:	
  2947  050B                     ;ROK6ZAD1.c: 89:     Lcd_Cmd(0x03);
  2948                           	movlw	low(03h)
  2949  050B  3003               	fcall	_Lcd_Cmd
  2950  050C  120A  118A  2321  120A  118A  	line	90
  2951                           ;ROK6ZAD1.c: 90:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2952                           	opt asmopt_push
  2953                           opt asmopt_off
  2954                           movlw	13
  2955  0511  300D               movwf	((??_Lcd_Init+0)+0+1),f
  2956  0512  00F5               	movlw	251
  2957  0513  30FB               movwf	((??_Lcd_Init+0)+0),f
  2958  0514  00F4               	u1117:
  2959  0515                     decfsz	((??_Lcd_Init+0)+0),f
  2960  0515  0BF4               	goto	u1117
  2961  0516  2D15               	decfsz	((??_Lcd_Init+0)+0+1),f
  2962  0517  0BF5               	goto	u1117
  2963  0518  2D15               	nop2
  2964  0519  2D1A               opt asmopt_pop
  2965                           
  2966                           	line	91
  2967                           	
  2968                           l1070:	
  2969  051A                     ;ROK6ZAD1.c: 91:     Lcd_Cmd(0x03);
  2970                           	movlw	low(03h)
  2971  051A  3003               	fcall	_Lcd_Cmd
  2972  051B  120A  118A  2321  120A  118A  	line	92
  2973                           	
  2974                           l1072:	
  2975  0520                     ;ROK6ZAD1.c: 92:     _delay((unsigned long)((11)*(8000000/4000.0)));
  2976                           	opt asmopt_push
  2977                           opt asmopt_off
  2978                           movlw	29
  2979  0520  301D               movwf	((??_Lcd_Init+0)+0+1),f
  2980  0521  00F5               	movlw	145
  2981  0522  3091               movwf	((??_Lcd_Init+0)+0),f
  2982  0523  00F4               	u1127:
  2983  0524                     decfsz	((??_Lcd_Init+0)+0),f
  2984  0524  0BF4               	goto	u1127
  2985  0525  2D24               	decfsz	((??_Lcd_Init+0)+0+1),f
  2986  0526  0BF5               	goto	u1127
  2987  0527  2D24               opt asmopt_pop
  2988                           
  2989                           	line	93
  2990                           ;ROK6ZAD1.c: 93:     Lcd_Cmd(0x03);
  2991                           	movlw	low(03h)
  2992  0528  3003               	fcall	_Lcd_Cmd
  2993  0529  120A  118A  2321  120A  118A  	line	94
  2994                           ;ROK6ZAD1.c: 94:     Lcd_Cmd(0x02);
  2995                           	movlw	low(02h)
  2996  052E  3002               	fcall	_Lcd_Cmd
  2997  052F  120A  118A  2321  120A  118A  	line	95
  2998                           ;ROK6ZAD1.c: 95:     Lcd_Cmd(0x02);
  2999                           	movlw	low(02h)
  3000  0534  3002               	fcall	_Lcd_Cmd
  3001  0535  120A  118A  2321  120A  118A  	line	96
  3002                           ;ROK6ZAD1.c: 96:     Lcd_Cmd(0x08);
  3003                           	movlw	low(08h)
  3004  053A  3008               	fcall	_Lcd_Cmd
  3005  053B  120A  118A  2321  120A  118A  	line	97
  3006                           ;ROK6ZAD1.c: 97:     Lcd_Cmd(0x00);
  3007                           	movlw	low(0)
  3008  0540  3000               	fcall	_Lcd_Cmd
  3009  0541  120A  118A  2321  120A  118A  	line	98
  3010                           ;ROK6ZAD1.c: 98:     Lcd_Cmd(0x0C);
  3011                           	movlw	low(0Ch)
  3012  0546  300C               	fcall	_Lcd_Cmd
  3013  0547  120A  118A  2321  120A  118A  	line	99
  3014                           ;ROK6ZAD1.c: 99:     Lcd_Cmd(0x00);
  3015                           	movlw	low(0)
  3016  054C  3000               	fcall	_Lcd_Cmd
  3017  054D  120A  118A  2321  120A  118A  	line	100
  3018                           ;ROK6ZAD1.c: 100:     Lcd_Cmd(0x06);
  3019                           	movlw	low(06h)
  3020  0552  3006               	fcall	_Lcd_Cmd
  3021  0553  120A  118A  2321  120A  118A  	line	101
  3022                           	
  3023                           l60:	
  3024  0558                     	return
  3025  0558  0008               	opt stack 0
  3026                           GLOBAL	__end_of_Lcd_Init
  3027                           	__end_of_Lcd_Init:
  3028  0559                     	signat	_Lcd_Init,89
  3029                           	global	_Lcd_Clear
  3030                           
  3031 ;; *************** function _Lcd_Clear *****************
  3032 ;; Defined at:
  3033 ;;		line 63 in file "ROK6ZAD1.c"
  3034 ;; Parameters:    Size  Location     Type
  3035 ;;		None
  3036 ;; Auto vars:     Size  Location     Type
  3037 ;;		None
  3038 ;; Return value:  Size  Location     Type
  3039 ;;                  2   50[None  ] int 
  3040 ;; Registers used:
  3041 ;;		wreg, status,2, status,0, pclath, cstack
  3042 ;; Tracked objects:
  3043 ;;		On entry : 0/0
  3044 ;;		On exit  : 0/0
  3045 ;;		Unchanged: 0/0
  3046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3047 ;;      Params:         0       0       0       0       0
  3048 ;;      Locals:         0       0       0       0       0
  3049 ;;      Temps:          0       0       0       0       0
  3050 ;;      Totals:         0       0       0       0       0
  3051 ;;Total ram usage:        0 bytes
  3052 ;; Hardware stack levels used:    1
  3053 ;; Hardware stack levels required when called:    2
  3054 ;; This function calls:
  3055 ;;		_Lcd_Cmd
  3056 ;; This function is called by:
  3057 ;;		_main
  3058 ;; This function uses a non-reentrant model
  3059 ;;
  3060                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  3061                           	line	63
  3062                           global __ptext9
  3063                           __ptext9:	;psect for function _Lcd_Clear
  3064  0301                     psect	text9
  3065                           	file	"ROK6ZAD1.c"
  3066                           	line	63
  3067                           	global	__size_of_Lcd_Clear
  3068                           	__size_of_Lcd_Clear	equ	__end_of_Lcd_Clear-_Lcd_Clear
  3069  000D                     	
  3070                           _Lcd_Clear:	
  3071  0301                     ;incstack = 0
  3072                           	opt	stack 5
  3073                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3074                           	line	64
  3075                           	
  3076                           l1042:	
  3077  0301                     ;ROK6ZAD1.c: 64:     Lcd_Cmd(0);
  3078                           	movlw	low(0)
  3079  0301  3000               	fcall	_Lcd_Cmd
  3080  0302  120A  118A  2321  120A  118A  	line	65
  3081                           ;ROK6ZAD1.c: 65:     Lcd_Cmd(1);
  3082                           	movlw	low(01h)
  3083  0307  3001               	fcall	_Lcd_Cmd
  3084  0308  120A  118A  2321  120A  118A  	line	66
  3085                           	
  3086                           l51:	
  3087  030D                     	return
  3088  030D  0008               	opt stack 0
  3089                           GLOBAL	__end_of_Lcd_Clear
  3090                           	__end_of_Lcd_Clear:
  3091  030E                     	signat	_Lcd_Clear,90
  3092                           	global	_Lcd_Cmd
  3093                           
  3094 ;; *************** function _Lcd_Cmd *****************
  3095 ;; Defined at:
  3096 ;;		line 56 in file "ROK6ZAD1.c"
  3097 ;; Parameters:    Size  Location     Type
  3098 ;;  a               1    wreg     unsigned char 
  3099 ;; Auto vars:     Size  Location     Type
  3100 ;;  a               1    3[COMMON] unsigned char 
  3101 ;; Return value:  Size  Location     Type
  3102 ;;                  1    wreg      void 
  3103 ;; Registers used:
  3104 ;;		wreg, status,2, status,0, pclath, cstack
  3105 ;; Tracked objects:
  3106 ;;		On entry : 0/0
  3107 ;;		On exit  : 0/0
  3108 ;;		Unchanged: 0/0
  3109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3110 ;;      Params:         0       0       0       0       0
  3111 ;;      Locals:         1       0       0       0       0
  3112 ;;      Temps:          2       0       0       0       0
  3113 ;;      Totals:         3       0       0       0       0
  3114 ;;Total ram usage:        3 bytes
  3115 ;; Hardware stack levels used:    1
  3116 ;; Hardware stack levels required when called:    1
  3117 ;; This function calls:
  3118 ;;		_Lcd_Port
  3119 ;; This function is called by:
  3120 ;;		_Lcd_Clear
  3121 ;;		_Lcd_Set_Cursor
  3122 ;;		_Lcd_Init
  3123 ;; This function uses a non-reentrant model
  3124 ;;
  3125                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  3126                           	line	56
  3127                           global __ptext10
  3128                           __ptext10:	;psect for function _Lcd_Cmd
  3129  0321                     psect	text10
  3130                           	file	"ROK6ZAD1.c"
  3131                           	line	56
  3132                           	global	__size_of_Lcd_Cmd
  3133                           	__size_of_Lcd_Cmd	equ	__end_of_Lcd_Cmd-_Lcd_Cmd
  3134  001A                     	
  3135                           _Lcd_Cmd:	
  3136  0321                     ;incstack = 0
  3137                           	opt	stack 5
  3138                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3139                           ;Lcd_Cmd@a stored from wreg
  3140                           	movwf	(Lcd_Cmd@a)
  3141  0321  00F3               	line	57
  3142                           	
  3143                           l1012:	
  3144  0322                     ;ROK6ZAD1.c: 57:     RD2=0;
  3145                           	bcf	status, 5	;RP0=0, select bank0
  3146  0322  1283               	bcf	status, 6	;RP1=0, select bank0
  3147  0323  1303               	bcf	(66/8),(66)&7	;volatile
  3148  0324  1108               	line	58
  3149                           	
  3150                           l1014:	
  3151  0325                     ;ROK6ZAD1.c: 58:     Lcd_Port(a);
  3152                           	movf	(Lcd_Cmd@a),w
  3153  0325  0873               	fcall	_Lcd_Port
  3154  0326  120A  118A  2374  120A  118A  	line	59
  3155                           	
  3156                           l1016:	
  3157  032B                     ;ROK6ZAD1.c: 59:     RD3=1;
  3158                           	bcf	status, 5	;RP0=0, select bank0
  3159  032B  1283               	bcf	status, 6	;RP1=0, select bank0
  3160  032C  1303               	bsf	(67/8),(67)&7	;volatile
  3161  032D  1588               	line	60
  3162                           	
  3163                           l1018:	
  3164  032E                     ;ROK6ZAD1.c: 60:     _delay((unsigned long)((4)*(8000000/4000.0)));
  3165                           	opt asmopt_push
  3166                           opt asmopt_off
  3167                           movlw	11
  3168  032E  300B               movwf	((??_Lcd_Cmd+0)+0+1),f
  3169  032F  00F2               	movlw	98
  3170  0330  3062               movwf	((??_Lcd_Cmd+0)+0),f
  3171  0331  00F1               	u1137:
  3172  0332                     decfsz	((??_Lcd_Cmd+0)+0),f
  3173  0332  0BF1               	goto	u1137
  3174  0333  2B32               	decfsz	((??_Lcd_Cmd+0)+0+1),f
  3175  0334  0BF2               	goto	u1137
  3176  0335  2B32               	nop
  3177  0336  0000               opt asmopt_pop
  3178                           
  3179                           	line	61
  3180                           	
  3181                           l1020:	
  3182  0337                     ;ROK6ZAD1.c: 61:     RD3=0;
  3183                           	bcf	status, 5	;RP0=0, select bank0
  3184  0337  1283               	bcf	status, 6	;RP1=0, select bank0
  3185  0338  1303               	bcf	(67/8),(67)&7	;volatile
  3186  0339  1188               	line	62
  3187                           	
  3188                           l48:	
  3189  033A                     	return
  3190  033A  0008               	opt stack 0
  3191                           GLOBAL	__end_of_Lcd_Cmd
  3192                           	__end_of_Lcd_Cmd:
  3193  033B                     	signat	_Lcd_Cmd,4217
  3194                           	global	_Lcd_Port
  3195                           
  3196 ;; *************** function _Lcd_Port *****************
  3197 ;; Defined at:
  3198 ;;		line 37 in file "ROK6ZAD1.c"
  3199 ;; Parameters:    Size  Location     Type
  3200 ;;  a               1    wreg     unsigned char 
  3201 ;; Auto vars:     Size  Location     Type
  3202 ;;  a               1    0[COMMON] unsigned char 
  3203 ;; Return value:  Size  Location     Type
  3204 ;;                  1    wreg      void 
  3205 ;; Registers used:
  3206 ;;		wreg
  3207 ;; Tracked objects:
  3208 ;;		On entry : 0/0
  3209 ;;		On exit  : 0/0
  3210 ;;		Unchanged: 0/0
  3211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3212 ;;      Params:         0       0       0       0       0
  3213 ;;      Locals:         1       0       0       0       0
  3214 ;;      Temps:          0       0       0       0       0
  3215 ;;      Totals:         1       0       0       0       0
  3216 ;;Total ram usage:        1 bytes
  3217 ;; Hardware stack levels used:    1
  3218 ;; This function calls:
  3219 ;;		Nothing
  3220 ;; This function is called by:
  3221 ;;		_Lcd_Cmd
  3222 ;;		_Lcd_Init
  3223 ;;		_Lcd_Write_Char
  3224 ;; This function uses a non-reentrant model
  3225 ;;
  3226                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  3227                           	line	37
  3228                           global __ptext11
  3229                           __ptext11:	;psect for function _Lcd_Port
  3230  0374                     psect	text11
  3231                           	file	"ROK6ZAD1.c"
  3232                           	line	37
  3233                           	global	__size_of_Lcd_Port
  3234                           	__size_of_Lcd_Port	equ	__end_of_Lcd_Port-_Lcd_Port
  3235  0023                     	
  3236                           _Lcd_Port:	
  3237  0374                     ;incstack = 0
  3238                           	opt	stack 5
  3239                           ; Regs used in _Lcd_Port: [wreg]
  3240                           ;Lcd_Port@a stored from wreg
  3241                           	movwf	(Lcd_Port@a)
  3242  0374  00F0               	line	38
  3243                           	
  3244                           l1002:	
  3245  0375                     ;ROK6ZAD1.c: 38:     if(a&1)
  3246                           	btfss	(Lcd_Port@a),(0)&7
  3247  0375  1C70               	goto	u531
  3248  0376  2B78               	goto	u530
  3249  0377  2B79               u531:
  3250  0378                     	goto	l37
  3251  0378  2B7D               u530:
  3252  0379                     	line	39
  3253                           	
  3254                           l1004:	
  3255  0379                     ;ROK6ZAD1.c: 39:         RD4=1;
  3256                           	bcf	status, 5	;RP0=0, select bank0
  3257  0379  1283               	bcf	status, 6	;RP1=0, select bank0
  3258  037A  1303               	bsf	(68/8),(68)&7	;volatile
  3259  037B  1608               	goto	l38
  3260  037C  2B80               	line	40
  3261                           ;ROK6ZAD1.c: 40:     else
  3262                           	
  3263                           l37:	
  3264  037D                     	line	41
  3265                           ;ROK6ZAD1.c: 41:         RD4=0;
  3266                           	bcf	status, 5	;RP0=0, select bank0
  3267  037D  1283               	bcf	status, 6	;RP1=0, select bank0
  3268  037E  1303               	bcf	(68/8),(68)&7	;volatile
  3269  037F  1208               	
  3270                           l38:	
  3271  0380                     	line	42
  3272                           ;ROK6ZAD1.c: 42:     if(a&2)
  3273                           	btfss	(Lcd_Port@a),(1)&7
  3274  0380  1CF0               	goto	u541
  3275  0381  2B83               	goto	u540
  3276  0382  2B84               u541:
  3277  0383                     	goto	l39
  3278  0383  2B86               u540:
  3279  0384                     	line	43
  3280                           	
  3281                           l1006:	
  3282  0384                     ;ROK6ZAD1.c: 43:         RD5=1;
  3283                           	bsf	(69/8),(69)&7	;volatile
  3284  0384  1688               	goto	l40
  3285  0385  2B87               	line	44
  3286                           ;ROK6ZAD1.c: 44:     else
  3287                           	
  3288                           l39:	
  3289  0386                     	line	45
  3290                           ;ROK6ZAD1.c: 45:         RD5=0;
  3291                           	bcf	(69/8),(69)&7	;volatile
  3292  0386  1288               	
  3293                           l40:	
  3294  0387                     	line	46
  3295                           ;ROK6ZAD1.c: 46:     if(a&4)
  3296                           	btfss	(Lcd_Port@a),(2)&7
  3297  0387  1D70               	goto	u551
  3298  0388  2B8A               	goto	u550
  3299  0389  2B8B               u551:
  3300  038A                     	goto	l41
  3301  038A  2B8D               u550:
  3302  038B                     	line	47
  3303                           	
  3304                           l1008:	
  3305  038B                     ;ROK6ZAD1.c: 47:         RD6=1;
  3306                           	bsf	(70/8),(70)&7	;volatile
  3307  038B  1708               	goto	l42
  3308  038C  2B8E               	line	48
  3309                           ;ROK6ZAD1.c: 48:     else
  3310                           	
  3311                           l41:	
  3312  038D                     	line	49
  3313                           ;ROK6ZAD1.c: 49:         RD6=0;
  3314                           	bcf	(70/8),(70)&7	;volatile
  3315  038D  1308               	
  3316                           l42:	
  3317  038E                     	line	50
  3318                           ;ROK6ZAD1.c: 50:     if(a&8)
  3319                           	btfss	(Lcd_Port@a),(3)&7
  3320  038E  1DF0               	goto	u561
  3321  038F  2B91               	goto	u560
  3322  0390  2B92               u561:
  3323  0391                     	goto	l43
  3324  0391  2B94               u560:
  3325  0392                     	line	51
  3326                           	
  3327                           l1010:	
  3328  0392                     ;ROK6ZAD1.c: 51:         RD7=1;
  3329                           	bsf	(71/8),(71)&7	;volatile
  3330  0392  1788               	goto	l45
  3331  0393  2B96               	line	52
  3332                           ;ROK6ZAD1.c: 52:     else
  3333                           	
  3334                           l43:	
  3335  0394                     	line	53
  3336                           ;ROK6ZAD1.c: 53:         RD7=0;
  3337                           	bcf	(71/8),(71)&7	;volatile
  3338  0394  1388               	goto	l45
  3339  0395  2B96               	
  3340                           l44:	
  3341  0396                     	line	54
  3342                           	
  3343                           l45:	
  3344  0396                     	return
  3345  0396  0008               	opt stack 0
  3346                           GLOBAL	__end_of_Lcd_Port
  3347                           	__end_of_Lcd_Port:
  3348  0397                     	signat	_Lcd_Port,4217
  3349                           	global	_Check_Response
  3350                           
  3351 ;; *************** function _Check_Response *****************
  3352 ;; Defined at:
  3353 ;;		line 144 in file "ROK6ZAD1.c"
  3354 ;; Parameters:    Size  Location     Type
  3355 ;;		None
  3356 ;; Auto vars:     Size  Location     Type
  3357 ;;		None
  3358 ;; Return value:  Size  Location     Type
  3359 ;;		None               void
  3360 ;; Registers used:
  3361 ;;		wreg, status,2, status,0
  3362 ;; Tracked objects:
  3363 ;;		On entry : 0/0
  3364 ;;		On exit  : 0/0
  3365 ;;		Unchanged: 0/0
  3366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3367 ;;      Params:         0       0       0       0       0
  3368 ;;      Locals:         0       0       0       0       0
  3369 ;;      Temps:          0       0       0       0       0
  3370 ;;      Totals:         0       0       0       0       0
  3371 ;;Total ram usage:        0 bytes
  3372 ;; Hardware stack levels used:    1
  3373 ;; This function calls:
  3374 ;;		Nothing
  3375 ;; This function is called by:
  3376 ;;		_main
  3377 ;; This function uses a non-reentrant model
  3378 ;;
  3379                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  3380                           	line	144
  3381                           global __ptext12
  3382                           __ptext12:	;psect for function _Check_Response
  3383  03D0                     psect	text12
  3384                           	file	"ROK6ZAD1.c"
  3385                           	line	144
  3386                           	global	__size_of_Check_Response
  3387                           	__size_of_Check_Response	equ	__end_of_Check_Response-_Check_Response
  3388  003A                     	
  3389                           _Check_Response:	
  3390  03D0                     ;incstack = 0
  3391                           	opt	stack 7
  3392                           ; Regs used in _Check_Response: [wreg+status,2+status,0]
  3393                           	line	145
  3394                           	
  3395                           l1090:	
  3396  03D0                     ;ROK6ZAD1.c: 145:   TMR1H = 0;
  3397                           	bcf	status, 5	;RP0=0, select bank0
  3398  03D0  1283               	bcf	status, 6	;RP1=0, select bank0
  3399  03D1  1303               	clrf	(15)	;volatile
  3400  03D2  018F               	line	146
  3401                           ;ROK6ZAD1.c: 146:   TMR1L = 0;
  3402                           	clrf	(14)	;volatile
  3403  03D3  018E               	line	147
  3404                           	
  3405                           l1092:	
  3406  03D4                     ;ROK6ZAD1.c: 147:   TMR1ON = 1;
  3407                           	bsf	(128/8),(128)&7	;volatile
  3408  03D4  1410               	line	148
  3409                           ;ROK6ZAD1.c: 148:   while(!RB0 && TMR1L < 100);
  3410                           	goto	l89
  3411  03D5  2BD6               	
  3412                           l90:	
  3413  03D6                     	
  3414                           l89:	
  3415  03D6                     	btfsc	(48/8),(48)&7	;volatile
  3416  03D6  1806               	goto	u651
  3417  03D7  2BD9               	goto	u650
  3418  03D8  2BDA               u651:
  3419  03D9                     	goto	l1096
  3420  03D9  2BE2               u650:
  3421  03DA                     	
  3422                           l1094:	
  3423  03DA                     	movlw	low(064h)
  3424  03DA  3064               	subwf	(14),w	;volatile
  3425  03DB  020E               	skipc
  3426  03DC  1C03               	goto	u661
  3427  03DD  2BDF               	goto	u660
  3428  03DE  2BE0               u661:
  3429  03DF                     	goto	l89
  3430  03DF  2BD6               u660:
  3431  03E0                     	goto	l1096
  3432  03E0  2BE2               	
  3433                           l92:	
  3434  03E1                     	goto	l1096
  3435  03E1  2BE2               	
  3436                           l93:	
  3437  03E2                     	line	150
  3438                           	
  3439                           l1096:	
  3440  03E2                     ;ROK6ZAD1.c: 150:   if(TMR1L > 99)
  3441                           	movlw	low(064h)
  3442  03E2  3064               	subwf	(14),w	;volatile
  3443  03E3  020E               	skipc
  3444  03E4  1C03               	goto	u671
  3445  03E5  2BE7               	goto	u670
  3446  03E6  2BE8               u671:
  3447  03E7                     	goto	l1104
  3448  03E7  2BEC               u670:
  3449  03E8                     	line	151
  3450                           	
  3451                           l1098:	
  3452  03E8                     ;ROK6ZAD1.c: 151:     return 0;
  3453                           	clrc
  3454  03E8  1003               	
  3455                           	goto	l95
  3456  03E9  2C09               	
  3457                           l1100:	
  3458  03EA                     	goto	l95
  3459  03EA  2C09               	
  3460                           l1102:	
  3461  03EB                     	goto	l95
  3462  03EB  2C09               	line	153
  3463                           ;ROK6ZAD1.c: 153:   else
  3464                           	
  3465                           l94:	
  3466  03EC                     	line	155
  3467                           	
  3468                           l1104:	
  3469  03EC                     ;ROK6ZAD1.c: 154:   {;ROK6ZAD1.c: 155:     TMR1H = 0;
  3470                           	clrf	(15)	;volatile
  3471  03EC  018F               	line	156
  3472                           ;ROK6ZAD1.c: 156:     TMR1L = 0;
  3473                           	clrf	(14)	;volatile
  3474  03ED  018E               	line	158
  3475                           ;ROK6ZAD1.c: 158:     while(RB0 && TMR1L < 100);
  3476                           	goto	l97
  3477  03EE  2BEF               	
  3478                           l98:	
  3479  03EF                     	
  3480                           l97:	
  3481  03EF                     	btfss	(48/8),(48)&7	;volatile
  3482  03EF  1C06               	goto	u681
  3483  03F0  2BF2               	goto	u680
  3484  03F1  2BF3               u681:
  3485  03F2                     	goto	l1108
  3486  03F2  2BFB               u680:
  3487  03F3                     	
  3488                           l1106:	
  3489  03F3                     	movlw	low(064h)
  3490  03F3  3064               	subwf	(14),w	;volatile
  3491  03F4  020E               	skipc
  3492  03F5  1C03               	goto	u691
  3493  03F6  2BF8               	goto	u690
  3494  03F7  2BF9               u691:
  3495  03F8                     	goto	l97
  3496  03F8  2BEF               u690:
  3497  03F9                     	goto	l1108
  3498  03F9  2BFB               	
  3499                           l100:	
  3500  03FA                     	goto	l1108
  3501  03FA  2BFB               	
  3502                           l101:	
  3503  03FB                     	line	160
  3504                           	
  3505                           l1108:	
  3506  03FB                     ;ROK6ZAD1.c: 160:     if(TMR1L > 99)
  3507                           	movlw	low(064h)
  3508  03FB  3064               	subwf	(14),w	;volatile
  3509  03FC  020E               	skipc
  3510  03FD  1C03               	goto	u701
  3511  03FE  2C00               	goto	u700
  3512  03FF  2C01               u701:
  3513  0400                     	goto	l1116
  3514  0400  2C05               u700:
  3515  0401                     	line	161
  3516                           	
  3517                           l1110:	
  3518  0401                     ;ROK6ZAD1.c: 161:       return 0;
  3519                           	clrc
  3520  0401  1003               	
  3521                           	goto	l95
  3522  0402  2C09               	
  3523                           l1112:	
  3524  0403                     	goto	l95
  3525  0403  2C09               	
  3526                           l1114:	
  3527  0404                     	goto	l95
  3528  0404  2C09               	line	163
  3529                           ;ROK6ZAD1.c: 163:     else
  3530                           	
  3531                           l102:	
  3532  0405                     	line	164
  3533                           	
  3534                           l1116:	
  3535  0405                     ;ROK6ZAD1.c: 164:       return 1;
  3536                           	setc
  3537  0405  1403               	
  3538                           	goto	l95
  3539  0406  2C09               	
  3540                           l1118:	
  3541  0407                     	goto	l95
  3542  0407  2C09               	
  3543                           l103:	
  3544  0408                     	goto	l95
  3545  0408  2C09               	line	165
  3546                           ;ROK6ZAD1.c: 165:   }
  3547                           	
  3548                           l96:	
  3549  0409                     	line	166
  3550                           	
  3551                           l95:	
  3552  0409                     	return
  3553  0409  0008               	opt stack 0
  3554                           GLOBAL	__end_of_Check_Response
  3555                           	__end_of_Check_Response:
  3556  040A                     	signat	_Check_Response,88
  3557                           global	___latbits
  3558                           ___latbits	equ	2
  3559  0002                     	global	btemp
  3560                           	btemp set 07Eh
  3561  007E                     
  3562                           	DABS	1,126,2	;btemp
  3563                           	global	wtemp0
  3564                           	wtemp0 set btemp+0
  3565  007E                     	end


Data Sizes:
    Strings     59
    Constant    0
    Data        30
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     10      43
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Read_Data@dht_data	PTR unsigned char  size(1) Largest target is 1
		 -> KontrolnaSuma(BANK0[1]), T2(BANK0[1]), T1(COMMON[1]), V2(BANK0[1]), 
		 -> V1(COMMON[1]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 16
		 -> STR_5(CODE[12]), STR_4(CODE[12]), STR_3(CODE[9]), STR_2(CODE[16]), 
		 -> Vlaznost(BANK0[15]), Temperatura(BANK0[15]), STR_1(CODE[10]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Write_String
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0    3805
                                              0 BANK0     10    10      0
                     _Check_Response
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                          _Read_Data
                       _Start_Signal
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     600
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     908
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _Start_Signal                                         2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Read_Data                                            4     4      0     277
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     800
                                              5 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     912
                                              4 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Check_Response                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Check_Response
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _Read_Data
   _Start_Signal
   ___awdiv
   ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      A      2B       5       53.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      39      12        0.0%
ABS                  0      0      39       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sat Jan 26 15:10:03 2019

                        pc 0002                __CFG_CP$OFF 0000                         l40 0387  
                       l41 038D                         l42 038E                         l43 0394  
                       l51 030D                         l44 0396                         l60 0558  
                       l45 0396                         l37 037D                         l38 0380  
                       l54 0477                         l39 0386                         l55 04A1  
                       l63 03CF                         l48 033A                         l56 04A0  
                       l57 04A1                         l90 03D6                         l66 0430  
                       l67 040D                         l92 03E1                         l68 044D  
                       l93 03E2                         l69 044D                         _T1 007D  
                       l94 03EC                         l86 0355                         _T2 004A  
                       l95 0409                         l96 0409                         l97 03EF  
                       l89 03D6                         _V1 007C                         l98 03EF  
                       _V2 0049               ___awdiv@sign 0076                         fsr 0004  
                      l100 03FA                        l101 03FB                        l102 0405  
                      l110 04BE                        l103 0408                        l111 04FB  
                      l112 04C3                        l113 04CF                        l114 04C6  
                      l106 04B0                        l130 07D3                        l122 064A  
                      l107 04F9                        l115 04CF                        l131 07E5  
                      l123 07AB                        l116 04D4                        l108 04BE  
                      l132 07E6                        l124 06A6                        l117 04EE  
                      l109 04B5                        l133 07E6                        l126 068B  
                      l127 07AA                        l128 0781                        l129 07A9  
                      l370 061B                        l362 05C9                        l371 0627  
                      l363 05D7                        l372 062C                        l364 061C  
                      l380 058A                        l365 05EE                        l381 058B  
                      l366 05E2                        l382 059C                        l367 05F3  
                      l383 05AA                        l375 0566                        l368 05F4  
                      l384 05B6                        l376 0570                        l369 060D  
                      l385 05BB                        l377 05AB                        l378 0585  
                      l379 0579                        _RB0 0030                        _RD2 0042  
                      _RD3 0043                        _RD4 0044                        _RD5 0045  
                      _RD6 0046                        _RD7 0047                        u600 047D  
                      u601 047C                        u530 0379               __CFG_CPD$OFF 0000  
                      u531 0378                        u700 0401                        u540 0384  
                      u620 0417                        u701 0400                        u541 0383  
                      u550 038B                        u630 043A                        u710 04AE  
                      u551 038A                        u615 0485                        u711 04AD  
                      u560 0392                        u640 044C                        u720 04BB  
                      u800 05CD                        u561 0391                        u641 044B  
                      u721 04BA                        u801 05CC                        u650 03DA  
                      u730 04C2                        u810 05DF                        u651 03D9  
                      u731 04C1                        u811 05DE                        u660 03E0  
                      u580 0454                        u740 04CC                        u900 056A  
                      u661 03DF                        u581 0453                        u741 04CB  
                      u901 0569                        u670 03E8                        u750 04D3  
                      u830 05F2                        u910 0576                        u671 03E7  
                      u575 03A8                        u751 04D2                        u831 05F1  
                      u911 0575                        u680 03F3                        u760 04DA  
                      u681 03F2                        u761 04D9                        u825 05E3  
                      u690 03F9                        u850 0605                        u930 0589  
                      u691 03F8                        u595 045C                        u851 0604  
                      u931 0588                        u780 04F8                        u940 0595  
                      u781 04F7                        u845 05F5                        u941 0594  
                      u925 057A                        u774 04E3                        u870 061A  
                      u790 05C1                        u775 04E1                        u871 0619  
                      u855 0601                        u791 05C0                        u880 0621  
                      u960 05A9                        u881 0620                        u865 060E  
                      u961 05A8                        u945 0591                        u970 05B0  
                      u890 055E                        u971 05AF                        u955 059D  
                      u891 055D                        u980 0658                        u981 0657  
                      u990 0662                        u991 0661           ??_Check_Response 0070  
                      fsr0 0004                        indf 0000               ___awmod@sign 0076  
             __CFG_FOSC$HS 0000               __CFG_LVP$OFF 0000                       l1010 0392  
                     l1002 0375                       l1100 03EA                       l1004 0379  
                     l1020 0337                       l1012 0322                       l1110 0401  
                     l1102 03EB                       l1006 0384                       l1014 0325  
                     l1030 03B6                       l1022 0398                       l1112 0403  
                     l1104 03EC                       l1008 038B                       l1016 032B  
                     l1040 03CC                       l1032 03BB                       l1024 03A2  
                     l1120 04A3                       l1200 0559                       l1114 0404  
                     l1106 03F3                       l1018 032E                       l1042 0301  
                     l1050 046A                       l1034 03BE                       l1026 03A5  
                     l1130 04B5                       l1122 04A7                       l1210 056A  
                     l1202 055A                       l1116 0405                       l1108 03FB  
                     l1060 0493                       l1052 0470                       l1044 044F  
                     l1036 03C4                       l1028 03B3                       l1140 04CC  
                     l1132 04BB                       l1124 04A8                       l1220 0585  
                     l1212 0570                       l1204 055E                       l1118 0407  
                     l1070 051A                       l1062 0499                       l1046 0454  
                     l1054 0477                       l1038 03C7                       l1150 04F2  
                     l1142 04CE                       l1134 04BD                       l1126 04AF  
                     l1222 058B                       l1214 0576                       l1230 05AB  
                     l1206 0563                       l1072 0520                       l1064 04FC  
                     l1056 047D                       l1048 0465                       l1080 0430  
                     l1144 04D4                       l1136 04C3                       l1152 04F9  
                     l1128 04B0                       l1160 05C1                       l1232 05B0  
                     l1224 0595                       l1216 0579                       l1208 0566  
                     l1240 0639                       l1090 03D0                       l1066 0502  
                     l1058 048E                       l1074 040A                       l1154 04FB  
                     l1146 04DA                       l1138 04C6                       l1082 033B  
                     l1170 05D7                       l1162 05C6                       l1234 05B6  
                     l1226 059C                       l1218 0580                       l1250 064A  
                     l1242 063D                       l1092 03D4                       l1068 050B  
                     l1076 040D                       l1148 04EE                       l1084 0341  
                     l1180 05EE                       l1172 05D9                       l1164 05C9  
                     l1156 05BC                       l1236 05BB                       l1228 05A3  
                     l1260 0676                       l1252 064F                       l1244 063E  
                     l1094 03DA                       l1078 0429                       l1086 034A  
                     l1190 0614                       l1182 05F4                       l1174 05DF  
                     l1166 05CD                       l1158 05BD                       l1270 06D0  
                     l1262 0680                       l1254 0658                       l1246 063F  
                     l1238 062D                       l1096 03E2                       l1088 0352  
                     l1184 0605                       l1176 05E2                       l1192 061C  
                     l1168 05D2                       l1280 0777                       l1272 075A  
                     l1256 0662                       l1264 068B                       l1248 0644  
                     l1098 03E8                       l1194 0621                       l1186 060B  
                     l1178 05E9                       l1290 07B8                       l1274 075E  
                     l1282 0781                       l1266 069C                       l1258 066C  
                     l1196 0627                       l1188 060D                       l1292 07C1  
                     l1284 078E                       l1276 0766                       l1268 06A6  
                     l1198 062C                       l1286 0797                       l1278 076F  
                     l1294 07D3                       l1296 07D6                       l1288 07AB  
                     STR_1 003B                       STR_2 0013                       STR_3 0045  
                     STR_4 002F                       STR_5 0023                       u1000 066C  
                     u1001 066B                       u1010 0676                       u1011 0675  
                     u1020 0680                       u1021 067F                       u1030 068A  
                     u1031 0689                       u1040 06D0                       u1041 06CF  
                     u1107 0506                       u1117 0515                       u1045 06CC  
                     u1127 0524                       u1137 0332                       u1057 07DE  
                     u1067 0345                       u1077 034F                       u1087 03B8  
                     u1097 03C9               __CFG_WRT$OFF 0000          ?_Lcd_Write_String 0075  
                     _main 062D                 Read_Data@i 0072                       btemp 007E  
            __CFG_BOREN$ON 0000                       start 0000         ??_Lcd_Write_String 0077  
          __end_of_Lcd_Cmd 033B                      ?_main 0070            __end_of___awdiv 062D  
            __CFG_WDTE$OFF 0000            __end_of___awmod 05BC            ___awdiv@divisor 0070  
                    _T1CON 0010            ___awdiv@counter 0075                      _TMR1H 000F  
                    _TMR1L 000E                      _PORTB 0006                      _PORTD 0008  
  __size_of_Lcd_Set_Cursor 0054                      _TRISB 0086                      _TRISD 0088  
                    pclath 000A                      status 0003                      wtemp0 007E  
         __end_of_Lcd_Init 0559           __end_of_Lcd_Port 0397            __initialization 07E9  
             __end_of_main 07E9                     ??_main 003E         __size_of_Lcd_Clear 000D  
         ___awdiv@dividend 0072                  ??_Lcd_Cmd 0071                     _TMR1ON 0080  
  __size_of_Lcd_Write_Char 0039                     _TRISB0 0430         __size_of_Read_Data 005A  
           __CFG_PWRTE$OFF 0000                  ??___awdiv 0074                  ??___awmod 0074  
         ___awdiv@quotient 0077            ___awmod@divisor 0070            ___awmod@counter 0075  
          Lcd_Set_Cursor@a 0077            Lcd_Set_Cursor@b 0074            Lcd_Set_Cursor@y 0079  
          Lcd_Set_Cursor@z 0078    __end_of__initialization 07FC          __end_of_Lcd_Clear 030E  
           __pcstackCOMMON 0070               __pidataBANK0 0356          __end_of_Read_Data 04FC  
           _Lcd_Set_Cursor 044E                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
               __pbssBANK0 0048                 __pmaintext 062D  __size_of_Lcd_Write_String 0044  
   __end_of_Lcd_Set_Cursor 04A2                 ??_Lcd_Init 0074                 ??_Lcd_Port 0070  
               __stringtab 0003             _Lcd_Write_Char 0397                    _Lcd_Cmd 0321  
                  ___awdiv 05BC                    ___awmod 0559                _Temperatura 002F  
          ?_Lcd_Set_Cursor 0074                    __ptext1 0559                    __ptext2 05BC  
                  __ptext3 033B                    __ptext4 04A2                    __ptext5 040A  
                  __ptext6 0397                    __ptext7 044E                    __ptext8 04FC  
                  __ptext9 0301           ___awmod@dividend 0072     __end_of_Lcd_Write_Char 03D0  
     end_of_initialization 07FC    __size_of_Check_Response 003A                  Lcd_Port@a 0070  
            _KontrolnaSuma 0048              ?_Start_Signal 0070            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 0075          Lcd_Write_String@i 007A                  _Lcd_Clear 0301  
         _Lcd_Write_String 040A             ??_Start_Signal 0070        start_initialization 07E9  
                _Read_Data 04A2          __size_of_Lcd_Init 005D          __size_of_Lcd_Port 0023  
               ?_Lcd_Clear 0070                 init_fetch0 030E                __pdataBANK0 0020  
          Lcd_Write_Char@a 0074            Lcd_Write_Char@y 0073                __pbssCOMMON 007C  
                ___latbits 0002              __pcstackBANK0 003E                 ?_Read_Data 0070  
           _Check_Response 03D0                   ?_Lcd_Cmd 0070           ??_Lcd_Set_Cursor 0075  
                 ?___awdiv 0070                   ?___awmod 0070                  __pstrings 0003  
   __end_of_Check_Response 040A       __end_of_Start_Signal 0356                   Lcd_Cmd@a 0073  
              ??_Lcd_Clear 0074                __stringbase 0012           ??_Lcd_Write_Char 0071  
              ??_Read_Data 0070                   _Lcd_Init 04FC                   _Lcd_Port 0374  
          ?_Check_Response 0070   __end_of_Lcd_Write_String 044E           __size_of_Lcd_Cmd 001A  
                 _Vlaznost 0020           __size_of___awdiv 0071           __size_of___awmod 0063  
       __end_of__stringtab 0013                   __ptext10 0321                   __ptext11 0374  
                 __ptext12 03D0              __size_of_main 01BC                   init_ram0 0312  
    __size_of_Start_Signal 001B         Lcd_Write_Char@temp 0072                  stringcode 000D  
       Lcd_Set_Cursor@temp 007A               _Start_Signal 033B          Read_Data@dht_data 0073  
                 stringdir 000D                   stringtab 0003  
