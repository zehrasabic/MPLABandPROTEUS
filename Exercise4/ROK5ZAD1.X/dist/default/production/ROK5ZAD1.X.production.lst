

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Thu Dec 27 00:37:18 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F877A Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 342 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 636 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 643 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 657 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 739 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 810 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 966 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1068 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1096 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1257 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1439 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1563 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1620 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1682 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1756 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   176                           SSPCON2 equ 091h ;# 
   177  0091                     # 1818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   178                           PR2 equ 092h ;# 
   179  0092                     # 1825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   180                           SSPADD equ 093h ;# 
   181  0093                     # 1832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   182                           SSPSTAT equ 094h ;# 
   183  0094                     # 2001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   184                           TXSTA equ 098h ;# 
   185  0098                     # 2082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   186                           SPBRG equ 099h ;# 
   187  0099                     # 2089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   188                           CMCON equ 09Ch ;# 
   189  009C                     # 2159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   190                           CVRCON equ 09Dh ;# 
   191  009D                     # 2224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   192                           ADRESL equ 09Eh ;# 
   193  009E                     # 2231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   194                           ADCON1 equ 09Fh ;# 
   195  009F                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   196                           EEDATA equ 010Ch ;# 
   197  010C                     # 2297 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   198                           EEADR equ 010Dh ;# 
   199  010D                     # 2304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   200                           EEDATH equ 010Eh ;# 
   201  010E                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   202                           EEADRH equ 010Fh ;# 
   203  010F                     # 2318 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   204                           EECON1 equ 018Ch ;# 
   205  018C                     # 2363 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   206                           EECON2 equ 018Dh ;# 
   207  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   208                           INDF equ 00h ;# 
   209  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   210                           TMR0 equ 01h ;# 
   211  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   212                           PCL equ 02h ;# 
   213  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   214                           STATUS equ 03h ;# 
   215  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   216                           FSR equ 04h ;# 
   217  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   218                           PORTA equ 05h ;# 
   219  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   220                           PORTB equ 06h ;# 
   221  0006                     # 280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   222                           PORTC equ 07h ;# 
   223  0007                     # 342 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   224                           PORTD equ 08h ;# 
   225  0008                     # 404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   226                           PORTE equ 09h ;# 
   227  0009                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   228                           PCLATH equ 0Ah ;# 
   229  000A                     # 456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   230                           INTCON equ 0Bh ;# 
   231  000B                     # 534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   232                           PIR1 equ 0Ch ;# 
   233  000C                     # 596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   234                           PIR2 equ 0Dh ;# 
   235  000D                     # 636 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   236                           TMR1 equ 0Eh ;# 
   237  000E                     # 643 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   238                           TMR1L equ 0Eh ;# 
   239  000E                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   240                           TMR1H equ 0Fh ;# 
   241  000F                     # 657 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   242                           T1CON equ 010h ;# 
   243  0010                     # 732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   244                           TMR2 equ 011h ;# 
   245  0011                     # 739 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   246                           T2CON equ 012h ;# 
   247  0012                     # 810 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   248                           SSPBUF equ 013h ;# 
   249  0013                     # 817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   250                           SSPCON equ 014h ;# 
   251  0014                     # 887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   252                           CCPR1 equ 015h ;# 
   253  0015                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   254                           CCPR1L equ 015h ;# 
   255  0015                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   256                           CCPR1H equ 016h ;# 
   257  0016                     # 908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   258                           CCP1CON equ 017h ;# 
   259  0017                     # 966 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   260                           RCSTA equ 018h ;# 
   261  0018                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   262                           TXREG equ 019h ;# 
   263  0019                     # 1068 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   264                           RCREG equ 01Ah ;# 
   265  001A                     # 1075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   266                           CCPR2 equ 01Bh ;# 
   267  001B                     # 1082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   268                           CCPR2L equ 01Bh ;# 
   269  001B                     # 1089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   270                           CCPR2H equ 01Ch ;# 
   271  001C                     # 1096 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   272                           CCP2CON equ 01Dh ;# 
   273  001D                     # 1154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   274                           ADRESH equ 01Eh ;# 
   275  001E                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   276                           ADCON0 equ 01Fh ;# 
   277  001F                     # 1257 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   278                           OPTION_REG equ 081h ;# 
   279  0081                     # 1327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   280                           TRISA equ 085h ;# 
   281  0085                     # 1377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   282                           TRISB equ 086h ;# 
   283  0086                     # 1439 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   284                           TRISC equ 087h ;# 
   285  0087                     # 1501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   286                           TRISD equ 088h ;# 
   287  0088                     # 1563 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   288                           TRISE equ 089h ;# 
   289  0089                     # 1620 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   290                           PIE1 equ 08Ch ;# 
   291  008C                     # 1682 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   292                           PIE2 equ 08Dh ;# 
   293  008D                     # 1722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   294                           PCON equ 08Eh ;# 
   295  008E                     # 1756 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   296                           SSPCON2 equ 091h ;# 
   297  0091                     # 1818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   298                           PR2 equ 092h ;# 
   299  0092                     # 1825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   300                           SSPADD equ 093h ;# 
   301  0093                     # 1832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   302                           SSPSTAT equ 094h ;# 
   303  0094                     # 2001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   304                           TXSTA equ 098h ;# 
   305  0098                     # 2082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   306                           SPBRG equ 099h ;# 
   307  0099                     # 2089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   308                           CMCON equ 09Ch ;# 
   309  009C                     # 2159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   310                           CVRCON equ 09Dh ;# 
   311  009D                     # 2224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   312                           ADRESL equ 09Eh ;# 
   313  009E                     # 2231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   314                           ADCON1 equ 09Fh ;# 
   315  009F                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   316                           EEDATA equ 010Ch ;# 
   317  010C                     # 2297 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   318                           EEADR equ 010Dh ;# 
   319  010D                     # 2304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   320                           EEDATH equ 010Eh ;# 
   321  010E                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   322                           EEADRH equ 010Fh ;# 
   323  010F                     # 2318 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   324                           EECON1 equ 018Ch ;# 
   325  018C                     # 2363 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   326                           EECON2 equ 018Dh ;# 
   327  018D                     	FNROOT	_main
   328                           	global	main@F851
   329                           psect	idataBANK0,class=CODE,space=0,delta=2,noexec
   330                           global __pidataBANK0
   331                           __pidataBANK0:
   332  0770                     	file	"ROK5ZAD1.c"
   333                           	line	22
   334                           
   335                           ;initializer for main@F851
   336                           	retlw	03Fh
   337  0770  343F               	retlw	06h
   338  0771  3406               	retlw	05Bh
   339  0772  345B               	retlw	04Fh
   340  0773  344F               	retlw	066h
   341  0774  3466               	retlw	06Dh
   342  0775  346D               	retlw	07Dh
   343  0776  347D               	retlw	07h
   344  0777  3407               	retlw	07Fh
   345  0778  347F               	retlw	06Fh
   346  0779  346F               	global	_PORTB
   347                           _PORTB	set	0x6
   348  0006                     	global	_RC0
   349                           _RC0	set	0x38
   350  0038                     	global	_TRISB
   351                           _TRISB	set	0x86
   352  0086                     	global	_TRISC0
   353                           _TRISC0	set	0x438
   354  0438                     ; #config settings
   355                           global __CFG_FOSC$HS
   356                           __CFG_FOSC$HS equ 0x0
   357  0000                     global __CFG_WDTE$OFF
   358                           __CFG_WDTE$OFF equ 0x0
   359  0000                     global __CFG_PWRTE$OFF
   360                           __CFG_PWRTE$OFF equ 0x0
   361  0000                     global __CFG_BOREN$ON
   362                           __CFG_BOREN$ON equ 0x0
   363  0000                     global __CFG_LVP$OFF
   364                           __CFG_LVP$OFF equ 0x0
   365  0000                     global __CFG_CPD$OFF
   366                           __CFG_CPD$OFF equ 0x0
   367  0000                     global __CFG_WRT$OFF
   368                           __CFG_WRT$OFF equ 0x0
   369  0000                     global __CFG_CP$OFF
   370                           __CFG_CP$OFF equ 0x0
   371  0000                     	file	"C:\Users\sabic\AppData\Local\Temp\s7r0."
   372                           	line	#
   373                           psect cinit,class=CODE,delta=2
   374                           global start_initialization
   375                           start_initialization:
   376  07EE                     
   377                           global __initialization
   378                           __initialization:
   379  07EE                     psect	dataBANK0,class=BANK0,space=1,noexec
   380                           global __pdataBANK0
   381                           __pdataBANK0:
   382  002B                     	file	"ROK5ZAD1.c"
   383                           	line	22
   384                           main@F851:
   385  002B                            ds      10
   386  002B                     
   387                           	file	"C:\Users\sabic\AppData\Local\Temp\s7r0."
   388                           	line	#
   389                           global btemp
   390                           psect inittext,class=CODE,delta=2
   391                           global init_fetch0,btemp
   392                           ;	Called with low address in FSR and high address in W
   393                           init_fetch0:
   394  077A                     	movf btemp,w
   395  077A  087E               	movwf pclath
   396  077B  008A               	movf btemp+1,w
   397  077C  087F               	movwf pc
   398  077D  0082               global init_ram0
   399                           ;Called with:
   400                           ;	high address of idata address in btemp 
   401                           ;	low address of idata address in btemp+1 
   402                           ;	low address of data in FSR
   403                           ;	high address + 1 of data in btemp-1
   404                           init_ram0:
   405  077E                     	fcall init_fetch0
   406  077E  120A  118A  277A  120A  118A  	movwf indf,f
   407  0783  0080               	incf fsr,f
   408  0784  0A84               	movf fsr,w
   409  0785  0804               	xorwf btemp-1,w
   410  0786  067D               	btfsc status,2
   411  0787  1903               	retlw 0
   412  0788  3400               	incf btemp+1,f
   413  0789  0AFF               	btfsc status,2
   414  078A  1903               	incf btemp,f
   415  078B  0AFE               	goto init_ram0
   416  078C  2F7E               ; Initialize objects allocated to BANK0
   417                           psect cinit,class=CODE,delta=2,merge=1
   418                           global init_ram0, __pidataBANK0
   419                           	bcf	status, 7	;select IRP bank0
   420  07EE  1383               	movlw low(__pdataBANK0+10)
   421  07EF  3035               	movwf btemp-1,f
   422  07F0  00FD               	movlw high(__pidataBANK0)
   423  07F1  3007               	movwf btemp,f
   424  07F2  00FE               	movlw low(__pidataBANK0)
   425  07F3  3070               	movwf btemp+1,f
   426  07F4  00FF               	movlw low(__pdataBANK0)
   427  07F5  302B               	movwf fsr,f
   428  07F6  0084               	fcall init_ram0
   429  07F7  120A  118A  277E  120A  118A  psect cinit,class=CODE,delta=2,merge=1
   430                           global end_of_initialization,__end_of__initialization
   431                           
   432                           ;End of C runtime variable initialization code
   433                           
   434                           end_of_initialization:
   435  07FC                     __end_of__initialization:
   436  07FC                     clrf status
   437  07FC  0183               ljmp _main	;jump to C main() function
   438  07FD  120A  118A  2F8D   psect	cstackCOMMON,class=COMMON,space=1,noexec
   439                           global __pcstackCOMMON
   440                           __pcstackCOMMON:
   441  0070                     ?_main:	; 1 bytes @ 0x0
   442  0070                     ??_main:	; 1 bytes @ 0x0
   443  0070                     	ds	4
   444  0070                     psect	cstackBANK0,class=BANK0,space=1,noexec
   445                           global __pcstackBANK0
   446                           __pcstackBANK0:
   447  0020                     	global	main@DISPLEJ
   448                           main@DISPLEJ:	; 10 bytes @ 0x0
   449  0020                     	ds	10
   450  0020                     	global	main@broj
   451                           main@broj:	; 1 bytes @ 0xA
   452  002A                     	ds	1
   453  002A                     ;!
   454                           ;!Data Sizes:
   455                           ;!    Strings     0
   456                           ;!    Constant    0
   457                           ;!    Data        10
   458                           ;!    BSS         0
   459                           ;!    Persistent  0
   460                           ;!    Stack       0
   461                           ;!
   462                           ;!Auto Spaces:
   463                           ;!    Space          Size  Autos    Used
   464                           ;!    COMMON           14      4       4
   465                           ;!    BANK0            80     11      21
   466                           ;!    BANK1            80      0       0
   467                           ;!    BANK3            96      0       0
   468                           ;!    BANK2            96      0       0
   469                           
   470                           ;!
   471                           ;!Pointer List with Targets:
   472                           ;!
   473                           ;!    None.
   474                           
   475                           
   476                           ;!
   477                           ;!Critical Paths under _main in COMMON
   478                           ;!
   479                           ;!    None.
   480                           ;!
   481                           ;!Critical Paths under _main in BANK0
   482                           ;!
   483                           ;!    None.
   484                           ;!
   485                           ;!Critical Paths under _main in BANK1
   486                           ;!
   487                           ;!    None.
   488                           ;!
   489                           ;!Critical Paths under _main in BANK3
   490                           ;!
   491                           ;!    None.
   492                           ;!
   493                           ;!Critical Paths under _main in BANK2
   494                           ;!
   495                           ;!    None.
   496                           
   497 ;;
   498 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   499 ;;
   500                           
   501                           ;!
   502                           ;!Call Graph Tables:
   503                           ;!
   504                           ;! ---------------------------------------------------------------------------------
   505                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   506                           ;! ---------------------------------------------------------------------------------
   507                           ;! (0) _main                                                15    15      0     116
   508                           ;!                                              0 COMMON     4     4      0
   509                           ;!                                              0 BANK0     11    11      0
   510                           ;! ---------------------------------------------------------------------------------
   511                           ;! Estimated maximum stack depth 0
   512                           ;! ---------------------------------------------------------------------------------
   513                           ;!
   514                           ;! Call Graph Graphs:
   515                           ;!
   516                           ;! _main (ROOT)
   517                           ;!
   518                           
   519                           ;! Address spaces:
   520                           
   521                           ;!Name               Size   Autos  Total    Cost      Usage
   522                           ;!BANK3               60      0       0       9        0.0%
   523                           ;!BITBANK3            60      0       0       8        0.0%
   524                           ;!SFR3                 0      0       0       4        0.0%
   525                           ;!BITSFR3              0      0       0       4        0.0%
   526                           ;!BANK2               60      0       0      11        0.0%
   527                           ;!BITBANK2            60      0       0      10        0.0%
   528                           ;!SFR2                 0      0       0       5        0.0%
   529                           ;!BITSFR2              0      0       0       5        0.0%
   530                           ;!BANK1               50      0       0       7        0.0%
   531                           ;!BITBANK1            50      0       0       6        0.0%
   532                           ;!SFR1                 0      0       0       2        0.0%
   533                           ;!BITSFR1              0      0       0       2        0.0%
   534                           ;!BANK0               50      B      15       5       26.3%
   535                           ;!BITBANK0            50      0       0       4        0.0%
   536                           ;!SFR0                 0      0       0       1        0.0%
   537                           ;!BITSFR0              0      0       0       1        0.0%
   538                           ;!COMMON               E      4       4       1       28.6%
   539                           ;!BITCOMMON            E      0       0       0        0.0%
   540                           ;!CODE                 0      0       0       0        0.0%
   541                           ;!DATA                 0      0      19      12        0.0%
   542                           ;!ABS                  0      0      19       3        0.0%
   543                           ;!NULL                 0      0       0       0        0.0%
   544                           ;!STACK                0      0       0       2        0.0%
   545                           ;!EEDATA             100      0       0       0        0.0%
   546                           
   547                           	global	_main
   548                           
   549 ;; *************** function _main *****************
   550 ;; Defined at:
   551 ;;		line 22 in file "ROK5ZAD1.c"
   552 ;; Parameters:    Size  Location     Type
   553 ;;		None
   554 ;; Auto vars:     Size  Location     Type
   555 ;;  DISPLEJ        10    0[BANK0 ] unsigned char [10]
   556 ;;  broj            1   10[BANK0 ] unsigned char 
   557 ;; Return value:  Size  Location     Type
   558 ;;                  1    wreg      void 
   559 ;; Registers used:
   560 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   561 ;; Tracked objects:
   562 ;;		On entry : B00/0
   563 ;;		On exit  : 0/0
   564 ;;		Unchanged: 0/0
   565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   566 ;;      Params:         0       0       0       0       0
   567 ;;      Locals:         0      11       0       0       0
   568 ;;      Temps:          4       0       0       0       0
   569 ;;      Totals:         4      11       0       0       0
   570 ;;Total ram usage:       15 bytes
   571 ;; This function calls:
   572 ;;		Nothing
   573 ;; This function is called by:
   574 ;;		Startup code after reset
   575 ;; This function uses a non-reentrant model
   576 ;;
   577                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
   578                           	file	"ROK5ZAD1.c"
   579                           	line	22
   580                           global __pmaintext
   581                           __pmaintext:	;psect for function _main
   582  078D                     psect	maintext
   583                           	file	"ROK5ZAD1.c"
   584                           	line	22
   585                           	global	__size_of_main
   586                           	__size_of_main	equ	__end_of_main-_main
   587  0061                     	
   588                           _main:	
   589  078D                     ;incstack = 0
   590                           	opt	stack 8
   591                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0]
   592                           	line	23
   593                           	
   594                           l625:	
   595  078D                     ;ROK5ZAD1.c: 23:     char DISPLEJ[10]={0x3F,0x06,0x5B,0x4F,0x66,0x6D, 0x7D, 0x07,0x7F,0x
                                 6F};
   596                           	movlw	(main@DISPLEJ)&0ffh
   597  078D  3020               	movwf	fsr0
   598  078E  0084               	movlw	low(main@F851)
   599  078F  302B               	movwf	(??_main+0)+0
   600  0790  00F0               	movf	fsr0,w
   601  0791  0804               	movwf	((??_main+0)+0+1)
   602  0792  00F1               	movlw	10
   603  0793  300A               	movwf	((??_main+0)+0+2)
   604  0794  00F2               u50:
   605  0795                     	movf	(??_main+0)+0,w
   606  0795  0870               	movwf	fsr0
   607  0796  0084               	bcf	status, 7	;select IRP bank0
   608  0797  1383               	
   609                           	movf	indf,w
   610  0798  0800               	movwf	((??_main+0)+0+3)
   611  0799  00F3               	incf	(??_main+0)+0,f
   612  079A  0AF0               	movf	((??_main+0)+0+1),w
   613  079B  0871               	movwf	fsr0
   614  079C  0084               	
   615                           	movf	((??_main+0)+0+3),w
   616  079D  0873               	movwf	indf
   617  079E  0080               	incf	((??_main+0)+0+1),f
   618  079F  0AF1               	decfsz	((??_main+0)+0+2),f
   619  07A0  0BF2               	goto	u50
   620  07A1  2F95               	
   621                           	line	24
   622                           	
   623                           l627:	
   624  07A2                     ;ROK5ZAD1.c: 24:     char broj=0;
   625                           	bcf	status, 5	;RP0=0, select bank0
   626  07A2  1283               	bcf	status, 6	;RP1=0, select bank0
   627  07A3  1303               	clrf	(main@broj)
   628  07A4  01AA               	line	25
   629                           	
   630                           l629:	
   631  07A5                     ;ROK5ZAD1.c: 25:     PORTB=0;
   632                           	clrf	(6)	;volatile
   633  07A5  0186               	line	26
   634                           	
   635                           l631:	
   636  07A6                     ;ROK5ZAD1.c: 26:     TRISB=0;
   637                           	bsf	status, 5	;RP0=1, select bank1
   638  07A6  1683               	bcf	status, 6	;RP1=0, select bank1
   639  07A7  1303               	clrf	(134)^080h	;volatile
   640  07A8  0186               	line	27
   641                           	
   642                           l633:	
   643  07A9                     ;ROK5ZAD1.c: 27:     TRISC0=1;
   644                           	bsf	(1080/8)^080h,(1080)&7	;volatile
   645  07A9  1407               	goto	l635
   646  07AA  2FAB               	line	29
   647                           ;ROK5ZAD1.c: 29:     while(1) {
   648                           	
   649                           l17:	
   650  07AB                     	line	30
   651                           	
   652                           l635:	
   653  07AB                     ;ROK5ZAD1.c: 30:         if(RC0) {
   654                           	bcf	status, 5	;RP0=0, select bank0
   655  07AB  1283               	btfss	(56/8),(56)&7	;volatile
   656  07AC  1C07               	goto	u61
   657  07AD  2FAF               	goto	u60
   658  07AE  2FB0               u61:
   659  07AF                     	goto	l651
   660  07AF  2FE2               u60:
   661  07B0                     	line	31
   662                           	
   663                           l637:	
   664  07B0                     ;ROK5ZAD1.c: 31:             _delay((unsigned long)((5)*(16000000/4000.0)));
   665                           	opt asmopt_push
   666                           opt asmopt_off
   667                           movlw	26
   668  07B0  301A               movwf	((??_main+0)+0+1),f
   669  07B1  00F1               	movlw	248
   670  07B2  30F8               movwf	((??_main+0)+0),f
   671  07B3  00F0               	u97:
   672  07B4                     decfsz	((??_main+0)+0),f
   673  07B4  0BF0               	goto	u97
   674  07B5  2FB4               	decfsz	((??_main+0)+0+1),f
   675  07B6  0BF1               	goto	u97
   676  07B7  2FB4               	nop
   677  07B8  0000               opt asmopt_pop
   678                           
   679                           	line	32
   680                           	
   681                           l639:	
   682  07B9                     ;ROK5ZAD1.c: 32:             if(RC0) {
   683                           	bcf	status, 5	;RP0=0, select bank0
   684  07B9  1283               	bcf	status, 6	;RP1=0, select bank0
   685  07BA  1303               	btfss	(56/8),(56)&7	;volatile
   686  07BB  1C07               	goto	u71
   687  07BC  2FBE               	goto	u70
   688  07BD  2FBF               u71:
   689  07BE                     	goto	l635
   690  07BE  2FAB               u70:
   691  07BF                     	line	33
   692                           	
   693                           l641:	
   694  07BF                     ;ROK5ZAD1.c: 33:                 PORTB=DISPLEJ[broj];
   695                           	movf	(main@broj),w
   696  07BF  082A               	addlw	low(main@DISPLEJ|((0x0)<<8))&0ffh
   697  07C0  3E20               	movwf	fsr0
   698  07C1  0084               	bcf	status, 7	;select IRP bank0
   699  07C2  1383               	movf	indf,w
   700  07C3  0800               	movwf	(6)	;volatile
   701  07C4  0086               	line	34
   702                           	
   703                           l643:	
   704  07C5                     ;ROK5ZAD1.c: 34:                 _delay((unsigned long)((250)*(16000000/4000.0)));
   705                           	opt asmopt_push
   706                           opt asmopt_off
   707                           movlw  6
   708  07C5  3006               movwf	((??_main+0)+0+2),f
   709  07C6  00F2               movlw	19
   710  07C7  3013               movwf	((??_main+0)+0+1),f
   711  07C8  00F1               	movlw	173
   712  07C9  30AD               movwf	((??_main+0)+0),f
   713  07CA  00F0               	u107:
   714  07CB                     decfsz	((??_main+0)+0),f
   715  07CB  0BF0               	goto	u107
   716  07CC  2FCB               	decfsz	((??_main+0)+0+1),f
   717  07CD  0BF1               	goto	u107
   718  07CE  2FCB               	decfsz	((??_main+0)+0+2),f
   719  07CF  0BF2               	goto	u107
   720  07D0  2FCB               	nop2
   721  07D1  2FD2               opt asmopt_pop
   722                           
   723                           	line	35
   724                           	
   725                           l645:	
   726  07D2                     ;ROK5ZAD1.c: 35:                 broj++;
   727                           	movlw	low(01h)
   728  07D2  3001               	movwf	(??_main+0)+0
   729  07D3  00F0               	movf	(??_main+0)+0,w
   730  07D4  0870               	bcf	status, 5	;RP0=0, select bank0
   731  07D5  1283               	bcf	status, 6	;RP1=0, select bank0
   732  07D6  1303               	addwf	(main@broj),f
   733  07D7  07AA               	line	36
   734                           	
   735                           l647:	
   736  07D8                     ;ROK5ZAD1.c: 36:                 if(broj>9){
   737                           	movlw	low(0Ah)
   738  07D8  300A               	subwf	(main@broj),w
   739  07D9  022A               	skipc
   740  07DA  1C03               	goto	u81
   741  07DB  2FDD               	goto	u80
   742  07DC  2FDE               u81:
   743  07DD                     	goto	l635
   744  07DD  2FAB               u80:
   745  07DE                     	line	37
   746                           	
   747                           l649:	
   748  07DE                     ;ROK5ZAD1.c: 37:                     broj=0;
   749                           	clrf	(main@broj)
   750  07DE  01AA               	goto	l635
   751  07DF  2FAB               	line	38
   752                           ;ROK5ZAD1.c: 38:                 }
   753                           	
   754                           l20:	
   755  07E0                     	goto	l635
   756  07E0  2FAB               	line	39
   757                           ;ROK5ZAD1.c: 39:             }
   758                           	
   759                           l19:	
   760  07E1                     	line	40
   761                           ;ROK5ZAD1.c: 40:         }
   762                           	goto	l635
   763  07E1  2FAB               	line	41
   764                           ;ROK5ZAD1.c: 41:         else{
   765                           	
   766                           l18:	
   767  07E2                     	line	42
   768                           	
   769                           l651:	
   770  07E2                     ;ROK5ZAD1.c: 42:             PORTB=DISPLEJ[broj];
   771                           	movf	(main@broj),w
   772  07E2  082A               	addlw	low(main@DISPLEJ|((0x0)<<8))&0ffh
   773  07E3  3E20               	movwf	fsr0
   774  07E4  0084               	bcf	status, 7	;select IRP bank0
   775  07E5  1383               	movf	indf,w
   776  07E6  0800               	movwf	(6)	;volatile
   777  07E7  0086               	goto	l635
   778  07E8  2FAB               	line	43
   779                           ;ROK5ZAD1.c: 43:         }
   780                           	
   781                           l21:	
   782  07E9                     	goto	l635
   783  07E9  2FAB               	line	44
   784                           ;ROK5ZAD1.c: 44:     }
   785                           	
   786                           l22:	
   787  07EA                     	goto	l635
   788  07EA  2FAB               	
   789                           l23:	
   790  07EB                     	line	46
   791                           	
   792                           l24:	
   793  07EB                     	global	start
   794                           	ljmp	start
   795  07EB  120A  118A  2800   	opt stack 0
   796                           GLOBAL	__end_of_main
   797                           	__end_of_main:
   798  07EE                     	signat	_main,89
   799                           global	___latbits
   800                           ___latbits	equ	2
   801  0002                     	global	btemp
   802                           	btemp set 07Eh
   803  007E                     
   804                           	DABS	1,126,2	;btemp
   805                           	global	wtemp0
   806                           	wtemp0 set btemp+0
   807  007E                     	end


Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       4
    BANK0            80     11      21
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                15    15      0     116
                                              0 COMMON     4     4      0
                                              0 BANK0     11    11      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      B      15       5       26.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      4       4       1       28.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      19      12        0.0%
ABS                  0      0      19       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Thu Dec 27 00:37:18 2018

                      pc 0002              __CFG_CP$OFF 0000                       l20 07E0  
                     l21 07E9                       l22 07EA                       l23 07EB  
                     l24 07EB                       l17 07AB                       l18 07E2  
                     l19 07E1                       u50 0795                       u60 07B0  
                     u61 07AF                       u70 07BF                       u71 07BE  
                     u80 07DE                       u81 07DD                       u97 07B4  
                     fsr 0004                      l631 07A6                      l641 07BF  
                    l633 07A9                      l625 078D                      l643 07C5  
                    l651 07E2                      l635 07AB                      l627 07A2  
                    l645 07D2                      l637 07B0                      l629 07A5  
                    l647 07D8                      l639 07B9                      l649 07DE  
                    _RC0 0038                      u107 07CB             __CFG_CPD$OFF 0000  
                    fsr0 0004                      indf 0000             __CFG_FOSC$HS 0000  
           __CFG_LVP$OFF 0000             __CFG_WRT$OFF 0000                     _main 078D  
                   btemp 007E            __CFG_BOREN$ON 0000                     start 0000  
                  ?_main 0070            __CFG_WDTE$OFF 0000                    _PORTB 0006  
                  _TRISB 0086                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07EE             __end_of_main 07EE  
                 ??_main 0070                   _TRISC0 0438           __CFG_PWRTE$OFF 0000  
__end_of__initialization 07FC           __pcstackCOMMON 0070             __pidataBANK0 0770  
             __pmaintext 078D     end_of_initialization 07FC      start_initialization 07EE  
             init_fetch0 077A              __pdataBANK0 002B                ___latbits 0002  
          __pcstackBANK0 0020            __size_of_main 0061                 main@F851 002B  
               main@broj 002A                 init_ram0 077E              main@DISPLEJ 0020  
