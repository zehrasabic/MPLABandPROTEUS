

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sat Jan 05 23:10:36 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F877A Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 342 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 636 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 643 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 657 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 739 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 810 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 966 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1068 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1096 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1257 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1439 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1563 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1620 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1682 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1756 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   176                           SSPCON2 equ 091h ;# 
   177  0091                     # 1818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   178                           PR2 equ 092h ;# 
   179  0092                     # 1825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   180                           SSPADD equ 093h ;# 
   181  0093                     # 1832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   182                           SSPSTAT equ 094h ;# 
   183  0094                     # 2001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   184                           TXSTA equ 098h ;# 
   185  0098                     # 2082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   186                           SPBRG equ 099h ;# 
   187  0099                     # 2089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   188                           CMCON equ 09Ch ;# 
   189  009C                     # 2159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   190                           CVRCON equ 09Dh ;# 
   191  009D                     # 2224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   192                           ADRESL equ 09Eh ;# 
   193  009E                     # 2231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   194                           ADCON1 equ 09Fh ;# 
   195  009F                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   196                           EEDATA equ 010Ch ;# 
   197  010C                     # 2297 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   198                           EEADR equ 010Dh ;# 
   199  010D                     # 2304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   200                           EEDATH equ 010Eh ;# 
   201  010E                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   202                           EEADRH equ 010Fh ;# 
   203  010F                     # 2318 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   204                           EECON1 equ 018Ch ;# 
   205  018C                     # 2363 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   206                           EECON2 equ 018Dh ;# 
   207  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   208                           INDF equ 00h ;# 
   209  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   210                           TMR0 equ 01h ;# 
   211  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   212                           PCL equ 02h ;# 
   213  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   214                           STATUS equ 03h ;# 
   215  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   216                           FSR equ 04h ;# 
   217  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   218                           PORTA equ 05h ;# 
   219  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   220                           PORTB equ 06h ;# 
   221  0006                     # 280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   222                           PORTC equ 07h ;# 
   223  0007                     # 342 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   224                           PORTD equ 08h ;# 
   225  0008                     # 404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   226                           PORTE equ 09h ;# 
   227  0009                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   228                           PCLATH equ 0Ah ;# 
   229  000A                     # 456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   230                           INTCON equ 0Bh ;# 
   231  000B                     # 534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   232                           PIR1 equ 0Ch ;# 
   233  000C                     # 596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   234                           PIR2 equ 0Dh ;# 
   235  000D                     # 636 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   236                           TMR1 equ 0Eh ;# 
   237  000E                     # 643 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   238                           TMR1L equ 0Eh ;# 
   239  000E                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   240                           TMR1H equ 0Fh ;# 
   241  000F                     # 657 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   242                           T1CON equ 010h ;# 
   243  0010                     # 732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   244                           TMR2 equ 011h ;# 
   245  0011                     # 739 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   246                           T2CON equ 012h ;# 
   247  0012                     # 810 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   248                           SSPBUF equ 013h ;# 
   249  0013                     # 817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   250                           SSPCON equ 014h ;# 
   251  0014                     # 887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   252                           CCPR1 equ 015h ;# 
   253  0015                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   254                           CCPR1L equ 015h ;# 
   255  0015                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   256                           CCPR1H equ 016h ;# 
   257  0016                     # 908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   258                           CCP1CON equ 017h ;# 
   259  0017                     # 966 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   260                           RCSTA equ 018h ;# 
   261  0018                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   262                           TXREG equ 019h ;# 
   263  0019                     # 1068 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   264                           RCREG equ 01Ah ;# 
   265  001A                     # 1075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   266                           CCPR2 equ 01Bh ;# 
   267  001B                     # 1082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   268                           CCPR2L equ 01Bh ;# 
   269  001B                     # 1089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   270                           CCPR2H equ 01Ch ;# 
   271  001C                     # 1096 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   272                           CCP2CON equ 01Dh ;# 
   273  001D                     # 1154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   274                           ADRESH equ 01Eh ;# 
   275  001E                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   276                           ADCON0 equ 01Fh ;# 
   277  001F                     # 1257 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   278                           OPTION_REG equ 081h ;# 
   279  0081                     # 1327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   280                           TRISA equ 085h ;# 
   281  0085                     # 1377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   282                           TRISB equ 086h ;# 
   283  0086                     # 1439 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   284                           TRISC equ 087h ;# 
   285  0087                     # 1501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   286                           TRISD equ 088h ;# 
   287  0088                     # 1563 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   288                           TRISE equ 089h ;# 
   289  0089                     # 1620 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   290                           PIE1 equ 08Ch ;# 
   291  008C                     # 1682 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   292                           PIE2 equ 08Dh ;# 
   293  008D                     # 1722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   294                           PCON equ 08Eh ;# 
   295  008E                     # 1756 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   296                           SSPCON2 equ 091h ;# 
   297  0091                     # 1818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   298                           PR2 equ 092h ;# 
   299  0092                     # 1825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   300                           SSPADD equ 093h ;# 
   301  0093                     # 1832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   302                           SSPSTAT equ 094h ;# 
   303  0094                     # 2001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   304                           TXSTA equ 098h ;# 
   305  0098                     # 2082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   306                           SPBRG equ 099h ;# 
   307  0099                     # 2089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   308                           CMCON equ 09Ch ;# 
   309  009C                     # 2159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   310                           CVRCON equ 09Dh ;# 
   311  009D                     # 2224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   312                           ADRESL equ 09Eh ;# 
   313  009E                     # 2231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   314                           ADCON1 equ 09Fh ;# 
   315  009F                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   316                           EEDATA equ 010Ch ;# 
   317  010C                     # 2297 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   318                           EEADR equ 010Dh ;# 
   319  010D                     # 2304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   320                           EEDATH equ 010Eh ;# 
   321  010E                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   322                           EEADRH equ 010Fh ;# 
   323  010F                     # 2318 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   324                           EECON1 equ 018Ch ;# 
   325  018C                     # 2363 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   326                           EECON2 equ 018Dh ;# 
   327  018D                     	FNCALL	_main,_ADC_Initialize
   328                           	FNCALL	_main,_ADC_Read
   329                           	FNCALL	_main,_Lcd_Clear
   330                           	FNCALL	_main,_Lcd_Init
   331                           	FNCALL	_main,_Lcd_Set_Cursor
   332                           	FNCALL	_main,_Lcd_Write_Char
   333                           	FNCALL	_main,_Lcd_Write_String
   334                           	FNCALL	_main,_ServoRotiraj0
   335                           	FNCALL	_main,_ServoRotiraj180
   336                           	FNCALL	_main,_UART_Get_Char
   337                           	FNCALL	_main,_UART_Init
   338                           	FNCALL	_main,_UART_Send_Char
   339                           	FNCALL	_main,___awdiv
   340                           	FNCALL	_main,___awmod
   341                           	FNCALL	_main,___fldiv
   342                           	FNCALL	_main,___flmul
   343                           	FNCALL	_main,___fltol
   344                           	FNCALL	_main,___xxtofl
   345                           	FNCALL	_main,_printf
   346                           	FNCALL	_printf,___lwdiv
   347                           	FNCALL	_printf,___lwmod
   348                           	FNCALL	_printf,_putch
   349                           	FNCALL	_putch,_UART_Send_Char
   350                           	FNCALL	___flmul,__Umul8_16
   351                           	FNCALL	_Lcd_Write_String,_Lcd_Write_Char
   352                           	FNCALL	_Lcd_Write_Char,_Lcd_Port
   353                           	FNCALL	_Lcd_Set_Cursor,_Lcd_Cmd
   354                           	FNCALL	_Lcd_Init,_Lcd_Cmd
   355                           	FNCALL	_Lcd_Init,_Lcd_Port
   356                           	FNCALL	_Lcd_Clear,_Lcd_Cmd
   357                           	FNCALL	_Lcd_Cmd,_Lcd_Port
   358                           	FNROOT	_main
   359                           	global	_dpowers
   360                           psect	stringtext,class=STRCODE,delta=2,reloc=256,noexec
   361                           global __pstringtext
   362                           __pstringtext:
   363  1000                     stringtab:
   364  1000                     	global    __stringtab
   365                           __stringtab:
   366  1000                     ;	String table - string pointers are 2 bytes each
   367                           	btfsc	(btemp+1),7
   368  1000  1BFF               	ljmp	stringcode
   369  1001  280A               	bcf	status,7
   370  1002  1383               	btfsc	(btemp+1),0
   371  1003  187F               	bsf	status,7
   372  1004  1783               	movf	indf,w
   373  1005  0800               	incf fsr
   374  1006  0A84               skipnz
   375  1007  1903               incf btemp+1
   376  1008  0AFF               	return
   377  1009  0008               stringcode:
   378  100A                     	movf btemp+1,w
   379  100A  087F               andlw 7Fh
   380  100B  397F               movwf	pclath
   381  100C  008A               	movf	fsr,w
   382  100D  0804               incf fsr
   383  100E  0A84               skipnz
   384  100F  1903               incf btemp+1
   385  1010  0AFF               	movwf pc
   386  1011  0082               	global __stringbase
   387                           __stringbase:
   388  1012                     	global    __end_of__stringtab
   389                           __end_of__stringtab:
   390  1012                     	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
   391                           	line	358
   392                           _dpowers:
   393  1012                     	retlw	01h
   394  1012  3401               	retlw	0
   395  1013  3400               
   396                           	retlw	0Ah
   397  1014  340A               	retlw	0
   398  1015  3400               
   399                           	retlw	064h
   400  1016  3464               	retlw	0
   401  1017  3400               
   402                           	retlw	0E8h
   403  1018  34E8               	retlw	03h
   404  1019  3403               
   405                           	retlw	010h
   406  101A  3410               	retlw	027h
   407  101B  3427               
   408                           	global __end_of_dpowers
   409                           __end_of_dpowers:
   410  101C                     	global	_dpowers
   411                           	global	_PORTB
   412                           _PORTB	set	0x6
   413  0006                     	global	_PORTD
   414                           _PORTD	set	0x8
   415  0008                     	global	_ADRESH
   416                           _ADRESH	set	0x1E
   417  001E                     	global	_ADCON0
   418                           _ADCON0	set	0x1F
   419  001F                     	global	_RCREG
   420                           _RCREG	set	0x1A
   421  001A                     	global	_TXREG
   422                           _TXREG	set	0x19
   423  0019                     	global	_RB2
   424                           _RB2	set	0x32
   425  0032                     	global	_RB1
   426                           _RB1	set	0x31
   427  0031                     	global	_RB0
   428                           _RB0	set	0x30
   429  0030                     	global	_GO_nDONE
   430                           _GO_nDONE	set	0xFA
   431  00FA                     	global	_RCIF
   432                           _RCIF	set	0x65
   433  0065                     	global	_OERR
   434                           _OERR	set	0xC1
   435  00C1                     	global	_TXIF
   436                           _TXIF	set	0x64
   437  0064                     	global	_RX9
   438                           _RX9	set	0xC6
   439  00C6                     	global	_CREN
   440                           _CREN	set	0xC4
   441  00C4                     	global	_SPEN
   442                           _SPEN	set	0xC7
   443  00C7                     	global	_RD3
   444                           _RD3	set	0x43
   445  0043                     	global	_RD2
   446                           _RD2	set	0x42
   447  0042                     	global	_RD7
   448                           _RD7	set	0x47
   449  0047                     	global	_RD6
   450                           _RD6	set	0x46
   451  0046                     	global	_RD5
   452                           _RD5	set	0x45
   453  0045                     	global	_RD4
   454                           _RD4	set	0x44
   455  0044                     	global	_TRISB
   456                           _TRISB	set	0x86
   457  0086                     	global	_TRISD
   458                           _TRISD	set	0x88
   459  0088                     	global	_ADRESL
   460                           _ADRESL	set	0x9E
   461  009E                     	global	_ADCON1
   462                           _ADCON1	set	0x9F
   463  009F                     	global	_SPBRG
   464                           _SPBRG	set	0x99
   465  0099                     	global	_TX9
   466                           _TX9	set	0x4C6
   467  04C6                     	global	_TXEN
   468                           _TXEN	set	0x4C5
   469  04C5                     	global	_SYNC
   470                           _SYNC	set	0x4C4
   471  04C4                     	global	_BRGH
   472                           _BRGH	set	0x4C2
   473  04C2                     	global	_TRISC7
   474                           _TRISC7	set	0x43F
   475  043F                     	global	_TRISC6
   476                           _TRISC6	set	0x43E
   477  043E                     	
   478                           STR_1:	
   479  101C                     	retlw	42	;'*'
   480  101C  342A               	retlw	42	;'*'
   481  101D  342A               	retlw	42	;'*'
   482  101E  342A               	retlw	68	;'D'
   483  101F  3444               	retlw	111	;'o'
   484  1020  346F               	retlw	98	;'b'
   485  1021  3462               	retlw	114	;'r'
   486  1022  3472               	retlw	111	;'o'
   487  1023  346F               	retlw	100	;'d'
   488  1024  3464               	retlw	111	;'o'
   489  1025  346F               	retlw	115	;'s'
   490  1026  3473               	retlw	108	;'l'
   491  1027  346C               	retlw	105	;'i'
   492  1028  3469               	retlw	33	;'!'
   493  1029  3421               	retlw	32	;' '
   494  102A  3420               	retlw	79	;'O'
   495  102B  344F               	retlw	118	;'v'
   496  102C  3476               	retlw	111	;'o'
   497  102D  346F               	retlw	32	;' '
   498  102E  3420               	retlw	106	;'j'
   499  102F  346A               	retlw	101	;'e'
   500  1030  3465               	retlw	32	;' '
   501  1031  3420               	retlw	100	;'d'
   502  1032  3464               	retlw	114	;'r'
   503  1033  3472               	retlw	117	;'u'
   504  1034  3475               	retlw	103	;'g'
   505  1035  3467               	retlw	105	;'i'
   506  1036  3469               	retlw	32	;' '
   507  1037  3420               	retlw	122	;'z'
   508  1038  347A               	retlw	97	;'a'
   509  1039  3461               	retlw	100	;'d'
   510  103A  3464               	retlw	97	;'a'
   511  103B  3461               	retlw	116	;'t'
   512  103C  3474               	retlw	97	;'a'
   513  103D  3461               	retlw	107	;'k'
   514  103E  346B               	retlw	32	;' '
   515  103F  3420               	retlw	110	;'n'
   516  1040  346E               	retlw	97	;'a'
   517  1041  3461               	retlw	32	;' '
   518  1042  3420               	retlw	105	;'i'
   519  1043  3469               	retlw	115	;'s'
   520  1044  3473               	retlw	112	;'p'
   521  1045  3470               	retlw	105	;'i'
   522  1046  3469               	retlw	116	;'t'
   523  1047  3474               	retlw	117	;'u'
   524  1048  3475               	retlw	46	;'.'
   525  1049  342E               	retlw	32	;' '
   526  104A  3420               	retlw	90	;'Z'
   527  104B  345A               	retlw	101	;'e'
   528  104C  3465               	retlw	104	;'h'
   529  104D  3468               	retlw	114	;'r'
   530  104E  3472               	retlw	97	;'a'
   531  104F  3461               	retlw	32	;' '
   532  1050  3420               	retlw	83	;'S'
   533  1051  3453               	retlw	97	;'a'
   534  1052  3461               	retlw	98	;'b'
   535  1053  3462               	retlw	105	;'i'
   536  1054  3469               	retlw	99	;'c'
   537  1055  3463               	retlw	44	;','
   538  1056  342C               	retlw	32	;' '
   539  1057  3420               	retlw	56	;'8'
   540  1058  3438               	retlw	57	;'9'
   541  1059  3439               	retlw	48	;'0'
   542  105A  3430               	retlw	32	;' '
   543  105B  3420               	retlw	42	;'*'
   544  105C  342A               	retlw	42	;'*'
   545  105D  342A               	retlw	42	;'*'
   546  105E  342A               	retlw	0
   547  105F  3400               psect	stringtext
   548                           	
   549                           STR_5:	
   550  1060                     	retlw	13
   551  1060  340D               	retlw	79	;'O'
   552  1061  344F               	retlw	80	;'P'
   553  1062  3450               	retlw	67	;'C'
   554  1063  3443               	retlw	73	;'I'
   555  1064  3449               	retlw	74	;'J'
   556  1065  344A               	retlw	65	;'A'
   557  1066  3441               	retlw	52	;'4'
   558  1067  3434               	retlw	58	;':'
   559  1068  343A               	retlw	32	;' '
   560  1069  3420               	retlw	79	;'O'
   561  106A  344F               	retlw	107	;'k'
   562  106B  346B               	retlw	114	;'r'
   563  106C  3472               	retlw	101	;'e'
   564  106D  3465               	retlw	116	;'t'
   565  106E  3474               	retlw	97	;'a'
   566  106F  3461               	retlw	110	;'n'
   567  1070  346E               	retlw	106	;'j'
   568  1071  346A               	retlw	101	;'e'
   569  1072  3465               	retlw	32	;' '
   570  1073  3420               	retlw	115	;'s'
   571  1074  3473               	retlw	101	;'e'
   572  1075  3465               	retlw	114	;'r'
   573  1076  3472               	retlw	118	;'v'
   574  1077  3476               	retlw	111	;'o'
   575  1078  346F               	retlw	109	;'m'
   576  1079  346D               	retlw	111	;'o'
   577  107A  346F               	retlw	116	;'t'
   578  107B  3474               	retlw	111	;'o'
   579  107C  346F               	retlw	114	;'r'
   580  107D  3472               	retlw	97	;'a'
   581  107E  3461               	retlw	32	;' '
   582  107F  3420               	retlw	117	;'u'
   583  1080  3475               	retlw	32	;' '
   584  1081  3420               	retlw	111	;'o'
   585  1082  346F               	retlw	98	;'b'
   586  1083  3462               	retlw	106	;'j'
   587  1084  346A               	retlw	101	;'e'
   588  1085  3465               	retlw	32	;' '
   589  1086  3420               	retlw	115	;'s'
   590  1087  3473               	retlw	116	;'t'
   591  1088  3474               	retlw	114	;'r'
   592  1089  3472               	retlw	97	;'a'
   593  108A  3461               	retlw	110	;'n'
   594  108B  346E               	retlw	101	;'e'
   595  108C  3465               	retlw	32	;' '
   596  108D  3420               	retlw	51	;'3'
   597  108E  3433               	retlw	32	;' '
   598  108F  3420               	retlw	112	;'p'
   599  1090  3470               	retlw	117	;'u'
   600  1091  3475               	retlw	116	;'t'
   601  1092  3474               	retlw	97	;'a'
   602  1093  3461               	retlw	0
   603  1094  3400               psect	stringtext
   604                           	
   605                           STR_7:	
   606  1095                     	retlw	13
   607  1095  340D               	retlw	77	;'M'
   608  1096  344D               	retlw	111	;'o'
   609  1097  346F               	retlw	108	;'l'
   610  1098  346C               	retlw	105	;'i'
   611  1099  3469               	retlw	109	;'m'
   612  109A  346D               	retlw	111	;'o'
   613  109B  346F               	retlw	32	;' '
   614  109C  3420               	retlw	118	;'v'
   615  109D  3476               	retlw	97	;'a'
   616  109E  3461               	retlw	115	;'s'
   617  109F  3473               	retlw	32	;' '
   618  10A0  3420               	retlw	111	;'o'
   619  10A1  346F               	retlw	100	;'d'
   620  10A2  3464               	retlw	97	;'a'
   621  10A3  3461               	retlw	98	;'b'
   622  10A4  3462               	retlw	101	;'e'
   623  10A5  3465               	retlw	114	;'r'
   624  10A6  3472               	retlw	105	;'i'
   625  10A7  3469               	retlw	116	;'t'
   626  10A8  3474               	retlw	101	;'e'
   627  10A9  3465               	retlw	32	;' '
   628  10AA  3420               	retlw	111	;'o'
   629  10AB  346F               	retlw	112	;'p'
   630  10AC  3470               	retlw	99	;'c'
   631  10AD  3463               	retlw	105	;'i'
   632  10AE  3469               	retlw	106	;'j'
   633  10AF  346A               	retlw	117	;'u'
   634  10B0  3475               	retlw	32	;' '
   635  10B1  3420               	retlw	49	;'1'
   636  10B2  3431               	retlw	44	;','
   637  10B3  342C               	retlw	32	;' '
   638  10B4  3420               	retlw	50	;'2'
   639  10B5  3432               	retlw	44	;','
   640  10B6  342C               	retlw	32	;' '
   641  10B7  3420               	retlw	51	;'3'
   642  10B8  3433               	retlw	32	;' '
   643  10B9  3420               	retlw	105	;'i'
   644  10BA  3469               	retlw	108	;'l'
   645  10BB  346C               	retlw	105	;'i'
   646  10BC  3469               	retlw	32	;' '
   647  10BD  3420               	retlw	52	;'4'
   648  10BE  3434               	retlw	58	;':'
   649  10BF  343A               	retlw	32	;' '
   650  10C0  3420               	retlw	0
   651  10C1  3400               psect	stringtext
   652                           	
   653                           STR_4:	
   654  10C2                     	retlw	13
   655  10C2  340D               	retlw	79	;'O'
   656  10C3  344F               	retlw	80	;'P'
   657  10C4  3450               	retlw	67	;'C'
   658  10C5  3443               	retlw	73	;'I'
   659  10C6  3449               	retlw	74	;'J'
   660  10C7  344A               	retlw	65	;'A'
   661  10C8  3441               	retlw	51	;'3'
   662  10C9  3433               	retlw	58	;':'
   663  10CA  343A               	retlw	32	;' '
   664  10CB  3420               	retlw	73	;'I'
   665  10CC  3449               	retlw	115	;'s'
   666  10CD  3473               	retlw	112	;'p'
   667  10CE  3470               	retlw	105	;'i'
   668  10CF  3469               	retlw	115	;'s'
   669  10D0  3473               	retlw	32	;' '
   670  10D1  3420               	retlw	112	;'p'
   671  10D2  3470               	retlw	111	;'o'
   672  10D3  346F               	retlw	114	;'r'
   673  10D4  3472               	retlw	117	;'u'
   674  10D5  3475               	retlw	107	;'k'
   675  10D6  346B               	retlw	101	;'e'
   676  10D7  3465               	retlw	32	;' '
   677  10D8  3420               	retlw	110	;'n'
   678  10D9  346E               	retlw	97	;'a'
   679  10DA  3461               	retlw	32	;' '
   680  10DB  3420               	retlw	76	;'L'
   681  10DC  344C               	retlw	67	;'C'
   682  10DD  3443               	retlw	68	;'D'
   683  10DE  3444               	retlw	32	;' '
   684  10DF  3420               	retlw	100	;'d'
   685  10E0  3464               	retlw	105	;'i'
   686  10E1  3469               	retlw	115	;'s'
   687  10E2  3473               	retlw	112	;'p'
   688  10E3  3470               	retlw	108	;'l'
   689  10E4  346C               	retlw	101	;'e'
   690  10E5  3465               	retlw	106	;'j'
   691  10E6  346A               	retlw	117	;'u'
   692  10E7  3475               	retlw	32	;' '
   693  10E8  3420               	retlw	0
   694  10E9  3400               psect	stringtext
   695                           	
   696                           STR_2:	
   697  10EA                     	retlw	13
   698  10EA  340D               	retlw	79	;'O'
   699  10EB  344F               	retlw	80	;'P'
   700  10EC  3450               	retlw	67	;'C'
   701  10ED  3443               	retlw	73	;'I'
   702  10EE  3449               	retlw	74	;'J'
   703  10EF  344A               	retlw	65	;'A'
   704  10F0  3441               	retlw	49	;'1'
   705  10F1  3431               	retlw	58	;':'
   706  10F2  343A               	retlw	32	;' '
   707  10F3  3420               	retlw	73	;'I'
   708  10F4  3449               	retlw	115	;'s'
   709  10F5  3473               	retlw	112	;'p'
   710  10F6  3470               	retlw	105	;'i'
   711  10F7  3469               	retlw	115	;'s'
   712  10F8  3473               	retlw	32	;' '
   713  10F9  3420               	retlw	116	;'t'
   714  10FA  3474               	retlw	114	;'r'
   715  10FB  3472               	retlw	101	;'e'
   716  10FC  3465               	retlw	110	;'n'
   717  10FD  346E               	retlw	117	;'u'
   718  10FE  3475               	retlw	116	;'t'
   719  10FF  3474               	retlw	110	;'n'
   720  1100  346E               	retlw	101	;'e'
   721  1101  3465               	retlw	32	;' '
   722  1102  3420               	retlw	116	;'t'
   723  1103  3474               	retlw	101	;'e'
   724  1104  3465               	retlw	109	;'m'
   725  1105  346D               	retlw	112	;'p'
   726  1106  3470               	retlw	101	;'e'
   727  1107  3465               	retlw	114	;'r'
   728  1108  3472               	retlw	97	;'a'
   729  1109  3461               	retlw	116	;'t'
   730  110A  3474               	retlw	117	;'u'
   731  110B  3475               	retlw	114	;'r'
   732  110C  3472               	retlw	101	;'e'
   733  110D  3465               	retlw	0
   734  110E  3400               psect	stringtext
   735                           	
   736                           STR_3:	
   737  110F                     	retlw	13
   738  110F  340D               	retlw	79	;'O'
   739  1110  344F               	retlw	80	;'P'
   740  1111  3450               	retlw	67	;'C'
   741  1112  3443               	retlw	73	;'I'
   742  1113  3449               	retlw	74	;'J'
   743  1114  344A               	retlw	65	;'A'
   744  1115  3441               	retlw	50	;'2'
   745  1116  3432               	retlw	58	;':'
   746  1117  343A               	retlw	32	;' '
   747  1118  3420               	retlw	73	;'I'
   748  1119  3449               	retlw	115	;'s'
   749  111A  3473               	retlw	112	;'p'
   750  111B  3470               	retlw	105	;'i'
   751  111C  3469               	retlw	115	;'s'
   752  111D  3473               	retlw	32	;' '
   753  111E  3420               	retlw	116	;'t'
   754  111F  3474               	retlw	114	;'r'
   755  1120  3472               	retlw	101	;'e'
   756  1121  3465               	retlw	110	;'n'
   757  1122  346E               	retlw	117	;'u'
   758  1123  3475               	retlw	116	;'t'
   759  1124  3474               	retlw	110	;'n'
   760  1125  346E               	retlw	111	;'o'
   761  1126  346F               	retlw	103	;'g'
   762  1127  3467               	retlw	32	;' '
   763  1128  3420               	retlw	118	;'v'
   764  1129  3476               	retlw	114	;'r'
   765  112A  3472               	retlw	101	;'e'
   766  112B  3465               	retlw	109	;'m'
   767  112C  346D               	retlw	101	;'e'
   768  112D  3465               	retlw	110	;'n'
   769  112E  346E               	retlw	97	;'a'
   770  112F  3461               	retlw	0
   771  1130  3400               psect	stringtext
   772                           	
   773                           STR_24:	
   774  1131                     	retlw	97	;'a'
   775  1131  3461               	retlw	32	;' '
   776  1132  3420               	retlw	122	;'z'
   777  1133  347A               	retlw	97	;'a'
   778  1134  3461               	retlw	116	;'t'
   779  1135  3474               	retlw	105	;'i'
   780  1136  3469               	retlw	109	;'m'
   781  1137  346D               	retlw	32	;' '
   782  1138  3420               	retlw	117	;'u'
   783  1139  3475               	retlw	32	;' '
   784  113A  3420               	retlw	100	;'d'
   785  113B  3464               	retlw	114	;'r'
   786  113C  3472               	retlw	117	;'u'
   787  113D  3475               	retlw	103	;'g'
   788  113E  3467               	retlw	117	;'u'
   789  113F  3475               	retlw	32	;' '
   790  1140  3420               	retlw	115	;'s'
   791  1141  3473               	retlw	116	;'t'
   792  1142  3474               	retlw	114	;'r'
   793  1143  3472               	retlw	97	;'a'
   794  1144  3461               	retlw	110	;'n'
   795  1145  346E               	retlw	117	;'u'
   796  1146  3475               	retlw	32	;' '
   797  1147  3420               	retlw	51	;'3'
   798  1148  3433               	retlw	32	;' '
   799  1149  3420               	retlw	112	;'p'
   800  114A  3470               	retlw	117	;'u'
   801  114B  3475               	retlw	116	;'t'
   802  114C  3474               	retlw	97	;'a'
   803  114D  3461               	retlw	33	;'!'
   804  114E  3421               	retlw	0
   805  114F  3400               psect	stringtext
   806                           	
   807                           STR_23:	
   808  1150                     	retlw	82	;'R'
   809  1150  3452               	retlw	111	;'o'
   810  1151  346F               	retlw	116	;'t'
   811  1152  3474               	retlw	105	;'i'
   812  1153  3469               	retlw	114	;'r'
   813  1154  3472               	retlw	97	;'a'
   814  1155  3461               	retlw	110	;'n'
   815  1156  346E               	retlw	106	;'j'
   816  1157  346A               	retlw	101	;'e'
   817  1158  3465               	retlw	32	;' '
   818  1159  3420               	retlw	115	;'s'
   819  115A  3473               	retlw	101	;'e'
   820  115B  3465               	retlw	114	;'r'
   821  115C  3472               	retlw	118	;'v'
   822  115D  3476               	retlw	111	;'o'
   823  115E  346F               	retlw	109	;'m'
   824  115F  346D               	retlw	111	;'o'
   825  1160  346F               	retlw	116	;'t'
   826  1161  3474               	retlw	111	;'o'
   827  1162  346F               	retlw	114	;'r'
   828  1163  3472               	retlw	97	;'a'
   829  1164  3461               	retlw	32	;' '
   830  1165  3420               	retlw	117	;'u'
   831  1166  3475               	retlw	32	;' '
   832  1167  3420               	retlw	106	;'j'
   833  1168  346A               	retlw	101	;'e'
   834  1169  3465               	retlw	100	;'d'
   835  116A  3464               	retlw	110	;'n'
   836  116B  346E               	retlw	117	;'u'
   837  116C  3475               	retlw	44	;','
   838  116D  342C               	retlw	0
   839  116E  3400               psect	stringtext
   840                           	
   841                           STR_20:	
   842  116F                     	retlw	13
   843  116F  340D               	retlw	73	;'I'
   844  1170  3449               	retlw	122	;'z'
   845  1171  347A               	retlw	97	;'a'
   846  1172  3461               	retlw	98	;'b'
   847  1173  3462               	retlw	114	;'r'
   848  1174  3472               	retlw	97	;'a'
   849  1175  3461               	retlw	108	;'l'
   850  1176  346C               	retlw	105	;'i'
   851  1177  3469               	retlw	32	;' '
   852  1178  3420               	retlw	115	;'s'
   853  1179  3473               	retlw	116	;'t'
   854  117A  3474               	retlw	101	;'e'
   855  117B  3465               	retlw	32	;' '
   856  117C  3420               	retlw	111	;'o'
   857  117D  346F               	retlw	112	;'p'
   858  117E  3470               	retlw	99	;'c'
   859  117F  3463               	retlw	105	;'i'
   860  1180  3469               	retlw	106	;'j'
   861  1181  346A               	retlw	117	;'u'
   862  1182  3475               	retlw	32	;' '
   863  1183  3420               	retlw	51	;'3'
   864  1184  3433               	retlw	46	;'.'
   865  1185  342E               	retlw	13
   866  1186  340D               	retlw	13
   867  1187  340D               	retlw	0
   868  1188  3400               psect	stringtext
   869                           	
   870                           STR_22:	
   871  1189                     	retlw	110	;'n'
   872  1189  346E               	retlw	97	;'a'
   873  118A  3461               	retlw	32	;' '
   874  118B  3420               	retlw	118	;'v'
   875  118C  3476               	retlw	105	;'i'
   876  118D  3469               	retlw	114	;'r'
   877  118E  3472               	retlw	116	;'t'
   878  118F  3474               	retlw	117	;'u'
   879  1190  3475               	retlw	97	;'a'
   880  1191  3461               	retlw	108	;'l'
   881  1192  346C               	retlw	110	;'n'
   882  1193  346E               	retlw	111	;'o'
   883  1194  346F               	retlw	109	;'m'
   884  1195  346D               	retlw	32	;' '
   885  1196  3420               	retlw	116	;'t'
   886  1197  3474               	retlw	101	;'e'
   887  1198  3465               	retlw	114	;'r'
   888  1199  3472               	retlw	109	;'m'
   889  119A  346D               	retlw	105	;'i'
   890  119B  3469               	retlw	110	;'n'
   891  119C  346E               	retlw	97	;'a'
   892  119D  3461               	retlw	108	;'l'
   893  119E  346C               	retlw	117	;'u'
   894  119F  3475               	retlw	33	;'!'
   895  11A0  3421               	retlw	0
   896  11A1  3400               psect	stringtext
   897                           	
   898                           STR_9:	
   899  11A2                     	retlw	13
   900  11A2  340D               	retlw	13
   901  11A3  340D               	retlw	73	;'I'
   902  11A4  3449               	retlw	122	;'z'
   903  11A5  347A               	retlw	97	;'a'
   904  11A6  3461               	retlw	98	;'b'
   905  11A7  3462               	retlw	114	;'r'
   906  11A8  3472               	retlw	97	;'a'
   907  11A9  3461               	retlw	108	;'l'
   908  11AA  346C               	retlw	105	;'i'
   909  11AB  3469               	retlw	32	;' '
   910  11AC  3420               	retlw	115	;'s'
   911  11AD  3473               	retlw	116	;'t'
   912  11AE  3474               	retlw	101	;'e'
   913  11AF  3465               	retlw	32	;' '
   914  11B0  3420               	retlw	111	;'o'
   915  11B1  346F               	retlw	112	;'p'
   916  11B2  3470               	retlw	99	;'c'
   917  11B3  3463               	retlw	105	;'i'
   918  11B4  3469               	retlw	106	;'j'
   919  11B5  346A               	retlw	117	;'u'
   920  11B6  3475               	retlw	32	;' '
   921  11B7  3420               	retlw	51	;'3'
   922  11B8  3433               	retlw	46	;'.'
   923  11B9  342E               	retlw	0
   924  11BA  3400               psect	stringtext
   925                           	
   926                           STR_10:	
   927  11BB                     	retlw	13
   928  11BB  340D               	retlw	13
   929  11BC  340D               	retlw	84	;'T'
   930  11BD  3454               	retlw	101	;'e'
   931  11BE  3465               	retlw	109	;'m'
   932  11BF  346D               	retlw	112	;'p'
   933  11C0  3470               	retlw	101	;'e'
   934  11C1  3465               	retlw	114	;'r'
   935  11C2  3472               	retlw	97	;'a'
   936  11C3  3461               	retlw	116	;'t'
   937  11C4  3474               	retlw	117	;'u'
   938  11C5  3475               	retlw	114	;'r'
   939  11C6  3472               	retlw	97	;'a'
   940  11C7  3461               	retlw	58	;':'
   941  11C8  343A               	retlw	32	;' '
   942  11C9  3420               	retlw	0
   943  11CA  3400               psect	stringtext
   944                           	
   945                           STR_21:	
   946  11CB                     	retlw	79	;'O'
   947  11CB  344F               	retlw	118	;'v'
   948  11CC  3476               	retlw	111	;'o'
   949  11CD  346F               	retlw	32	;' '
   950  11CE  3420               	retlw	106	;'j'
   951  11CF  346A               	retlw	101	;'e'
   952  11D0  3465               	retlw	32	;' '
   953  11D1  3420               	retlw	111	;'o'
   954  11D2  346F               	retlw	112	;'p'
   955  11D3  3470               	retlw	99	;'c'
   956  11D4  3463               	retlw	105	;'i'
   957  11D5  3469               	retlw	106	;'j'
   958  11D6  346A               	retlw	97	;'a'
   959  11D7  3461               	retlw	32	;' '
   960  11D8  3420               	retlw	51	;'3'
   961  11D9  3433               	retlw	0
   962  11DA  3400               psect	stringtext
   963                           	
   964                           STR_17:	
   965  11DB                     	retlw	84	;'T'
   966  11DB  3454               	retlw	101	;'e'
   967  11DC  3465               	retlw	109	;'m'
   968  11DD  346D               	retlw	112	;'p'
   969  11DE  3470               	retlw	101	;'e'
   970  11DF  3465               	retlw	114	;'r'
   971  11E0  3472               	retlw	97	;'a'
   972  11E1  3461               	retlw	116	;'t'
   973  11E2  3474               	retlw	117	;'u'
   974  11E3  3475               	retlw	114	;'r'
   975  11E4  3472               	retlw	97	;'a'
   976  11E5  3461               	retlw	0
   977  11E6  3400               psect	stringtext
   978                           	
   979                           STR_6:	
   980  11E7                     	retlw	13
   981  11E7  340D               	retlw	42	;'*'
   982  11E8  342A               	retlw	42	;'*'
   983  11E9  342A               	retlw	42	;'*'
   984  11EA  342A               	retlw	42	;'*'
   985  11EB  342A               	retlw	42	;'*'
   986  11EC  342A               	retlw	42	;'*'
   987  11ED  342A               	retlw	0
   988  11EE  3400               psect	stringtext
   989                           	
   990                           STR_11:	
   991  11EF                     	retlw	37	;'%'
   992  11EF  3425               	retlw	105	;'i'
   993  11F0  3469               	retlw	0
   994  11F1  3400               psect	stringtext
   995                           	
   996                           STR_19:	
   997  11F2                     	retlw	67	;'C'
   998  11F2  3443               	retlw	0
   999  11F3  3400               psect	stringtext
  1000                           STR_12	equ	STR_11+0
  1001  11EF                     STR_14	equ	STR_11+0
  1002  11EF                     STR_15	equ	STR_11+0
  1003  11EF                     STR_13	equ	STR_9+23
  1004  11B9                     STR_18	equ	STR_9+23
  1005  11B9                     STR_8	equ	STR_6+0
  1006  11E7                     STR_16	equ	STR_20+23
  1007  1186                     ; #config settings
  1008                           global __CFG_FOSC$HS
  1009                           __CFG_FOSC$HS equ 0x0
  1010  0000                     global __CFG_WDTE$OFF
  1011                           __CFG_WDTE$OFF equ 0x0
  1012  0000                     global __CFG_PWRTE$OFF
  1013                           __CFG_PWRTE$OFF equ 0x0
  1014  0000                     global __CFG_BOREN$ON
  1015                           __CFG_BOREN$ON equ 0x0
  1016  0000                     global __CFG_LVP$OFF
  1017                           __CFG_LVP$OFF equ 0x0
  1018  0000                     global __CFG_CPD$OFF
  1019                           __CFG_CPD$OFF equ 0x0
  1020  0000                     global __CFG_WRT$OFF
  1021                           __CFG_WRT$OFF equ 0x0
  1022  0000                     global __CFG_CP$OFF
  1023                           __CFG_CP$OFF equ 0x0
  1024  0000                     	file	"C:\Users\sabic\AppData\Local\Temp\sd9k."
  1025                           	line	#
  1026                           psect cinit,class=CODE,delta=2
  1027                           global start_initialization
  1028                           start_initialization:
  1029  07FC                     
  1030                           global __initialization
  1031                           __initialization:
  1032  07FC                     psect cinit,class=CODE,delta=2,merge=1
  1033                           global end_of_initialization,__end_of__initialization
  1034                           
  1035                           ;End of C runtime variable initialization code
  1036                           
  1037                           end_of_initialization:
  1038  07FC                     __end_of__initialization:
  1039  07FC                     clrf status
  1040  07FC  0183               ljmp _main	;jump to C main() function
  1041  07FD  120A  118A  293A   psect	cstackCOMMON,class=COMMON,space=1,noexec
  1042                           global __pcstackCOMMON
  1043                           __pcstackCOMMON:
  1044  0070                     ?_Lcd_Port:	; 1 bytes @ 0x0
  1045  0070                     ??_Lcd_Port:	; 1 bytes @ 0x0
  1046  0070                     ?_Lcd_Cmd:	; 1 bytes @ 0x0
  1047  0070                     ?_Lcd_Init:	; 1 bytes @ 0x0
  1048  0070                     ?_Lcd_Write_Char:	; 1 bytes @ 0x0
  1049  0070                     ?_UART_Init:	; 1 bytes @ 0x0
  1050  0070                     ??_UART_Init:	; 1 bytes @ 0x0
  1051  0070                     ?_UART_Send_Char:	; 1 bytes @ 0x0
  1052  0070                     ??_UART_Send_Char:	; 1 bytes @ 0x0
  1053  0070                     ?_UART_Get_Char:	; 1 bytes @ 0x0
  1054  0070                     ??_UART_Get_Char:	; 1 bytes @ 0x0
  1055  0070                     ?_putch:	; 1 bytes @ 0x0
  1056  0070                     ?_ADC_Initialize:	; 1 bytes @ 0x0
  1057  0070                     ??_ADC_Initialize:	; 1 bytes @ 0x0
  1058  0070                     ?_ServoRotiraj0:	; 1 bytes @ 0x0
  1059  0070                     ??_ServoRotiraj0:	; 1 bytes @ 0x0
  1060  0070                     ?_ServoRotiraj180:	; 1 bytes @ 0x0
  1061  0070                     ??_ServoRotiraj180:	; 1 bytes @ 0x0
  1062  0070                     ?_main:	; 1 bytes @ 0x0
  1063  0070                     	global	?__Umul8_16
  1064                           ?__Umul8_16:	; 2 bytes @ 0x0
  1065  0070                     ?_Lcd_Clear:	; 2 bytes @ 0x0
  1066  0070                     	global	?_ADC_Read
  1067                           ?_ADC_Read:	; 2 bytes @ 0x0
  1068  0070                     	global	?___awdiv
  1069                           ?___awdiv:	; 2 bytes @ 0x0
  1070  0070                     	global	?___lwdiv
  1071                           ?___lwdiv:	; 2 bytes @ 0x0
  1072  0070                     	global	?___fldiv
  1073                           ?___fldiv:	; 4 bytes @ 0x0
  1074  0070                     	global	Lcd_Port@a
  1075                           Lcd_Port@a:	; 1 bytes @ 0x0
  1076  0070                     	global	UART_Send_Char@a
  1077                           UART_Send_Char@a:	; 1 bytes @ 0x0
  1078  0070                     	global	__Umul8_16@multiplicand
  1079                           __Umul8_16@multiplicand:	; 1 bytes @ 0x0
  1080  0070                     	global	___awdiv@divisor
  1081                           ___awdiv@divisor:	; 2 bytes @ 0x0
  1082  0070                     	global	___lwdiv@divisor
  1083                           ___lwdiv@divisor:	; 2 bytes @ 0x0
  1084  0070                     	global	___fldiv@a
  1085                           ___fldiv@a:	; 4 bytes @ 0x0
  1086  0070                     	ds	1
  1087  0070                     ??_Lcd_Cmd:	; 1 bytes @ 0x1
  1088  0071                     ??_Lcd_Write_Char:	; 1 bytes @ 0x1
  1089  0071                     ??_putch:	; 1 bytes @ 0x1
  1090  0071                     	global	putch@a
  1091                           putch@a:	; 1 bytes @ 0x1
  1092  0071                     	ds	1
  1093  0071                     ??__Umul8_16:	; 1 bytes @ 0x2
  1094  0072                     ??_ADC_Read:	; 1 bytes @ 0x2
  1095  0072                     	global	Lcd_Write_Char@temp
  1096                           Lcd_Write_Char@temp:	; 1 bytes @ 0x2
  1097  0072                     	global	ServoRotiraj0@i
  1098                           ServoRotiraj0@i:	; 2 bytes @ 0x2
  1099  0072                     	global	ServoRotiraj180@i
  1100                           ServoRotiraj180@i:	; 2 bytes @ 0x2
  1101  0072                     	global	___awdiv@dividend
  1102                           ___awdiv@dividend:	; 2 bytes @ 0x2
  1103  0072                     	global	___lwdiv@dividend
  1104                           ___lwdiv@dividend:	; 2 bytes @ 0x2
  1105  0072                     	ds	1
  1106  0072                     	global	Lcd_Cmd@a
  1107                           Lcd_Cmd@a:	; 1 bytes @ 0x3
  1108  0073                     	global	Lcd_Write_Char@y
  1109                           Lcd_Write_Char@y:	; 1 bytes @ 0x3
  1110  0073                     	ds	1
  1111  0073                     ??_Lcd_Clear:	; 1 bytes @ 0x4
  1112  0074                     ?_Lcd_Set_Cursor:	; 1 bytes @ 0x4
  1113  0074                     ??_Lcd_Init:	; 1 bytes @ 0x4
  1114  0074                     ??___awdiv:	; 1 bytes @ 0x4
  1115  0074                     ??___lwdiv:	; 1 bytes @ 0x4
  1116  0074                     	global	Lcd_Set_Cursor@b
  1117                           Lcd_Set_Cursor@b:	; 1 bytes @ 0x4
  1118  0074                     	global	Lcd_Write_Char@a
  1119                           Lcd_Write_Char@a:	; 1 bytes @ 0x4
  1120  0074                     	global	ADC_Read@channel
  1121                           ADC_Read@channel:	; 1 bytes @ 0x4
  1122  0074                     	global	__Umul8_16@product
  1123                           __Umul8_16@product:	; 2 bytes @ 0x4
  1124  0074                     	global	___fldiv@b
  1125                           ___fldiv@b:	; 4 bytes @ 0x4
  1126  0074                     	ds	1
  1127  0074                     ??_Lcd_Set_Cursor:	; 1 bytes @ 0x5
  1128  0075                     ?_Lcd_Write_String:	; 1 bytes @ 0x5
  1129  0075                     	global	?___xxtofl
  1130                           ?___xxtofl:	; 4 bytes @ 0x5
  1131  0075                     	global	___awdiv@counter
  1132                           ___awdiv@counter:	; 1 bytes @ 0x5
  1133  0075                     	global	Lcd_Write_String@a
  1134                           Lcd_Write_String@a:	; 2 bytes @ 0x5
  1135  0075                     	global	___lwdiv@quotient
  1136                           ___lwdiv@quotient:	; 2 bytes @ 0x5
  1137  0075                     	global	___xxtofl@val
  1138                           ___xxtofl@val:	; 4 bytes @ 0x5
  1139  0075                     	ds	1
  1140  0075                     	global	___awdiv@sign
  1141                           ___awdiv@sign:	; 1 bytes @ 0x6
  1142  0076                     	global	__Umul8_16@word_mpld
  1143                           __Umul8_16@word_mpld:	; 2 bytes @ 0x6
  1144  0076                     	ds	1
  1145  0076                     ??_Lcd_Write_String:	; 1 bytes @ 0x7
  1146  0077                     	global	Lcd_Set_Cursor@a
  1147                           Lcd_Set_Cursor@a:	; 1 bytes @ 0x7
  1148  0077                     	global	___lwdiv@counter
  1149                           ___lwdiv@counter:	; 1 bytes @ 0x7
  1150  0077                     	global	___awdiv@quotient
  1151                           ___awdiv@quotient:	; 2 bytes @ 0x7
  1152  0077                     	ds	1
  1153  0077                     ??___fldiv:	; 1 bytes @ 0x8
  1154  0078                     	global	?___lwmod
  1155                           ?___lwmod:	; 2 bytes @ 0x8
  1156  0078                     	global	Lcd_Set_Cursor@z
  1157                           Lcd_Set_Cursor@z:	; 1 bytes @ 0x8
  1158  0078                     	global	__Umul8_16@multiplier
  1159                           __Umul8_16@multiplier:	; 1 bytes @ 0x8
  1160  0078                     	global	___lwmod@divisor
  1161                           ___lwmod@divisor:	; 2 bytes @ 0x8
  1162  0078                     	ds	1
  1163  0078                     ??___flmul:	; 1 bytes @ 0x9
  1164  0079                     ??___xxtofl:	; 1 bytes @ 0x9
  1165  0079                     	global	?___awmod
  1166                           ?___awmod:	; 2 bytes @ 0x9
  1167  0079                     	global	Lcd_Set_Cursor@y
  1168                           Lcd_Set_Cursor@y:	; 1 bytes @ 0x9
  1169  0079                     	global	___awmod@divisor
  1170                           ___awmod@divisor:	; 2 bytes @ 0x9
  1171  0079                     	ds	1
  1172  0079                     	global	Lcd_Set_Cursor@temp
  1173                           Lcd_Set_Cursor@temp:	; 1 bytes @ 0xA
  1174  007A                     	global	Lcd_Write_String@i
  1175                           Lcd_Write_String@i:	; 2 bytes @ 0xA
  1176  007A                     	global	___lwmod@dividend
  1177                           ___lwmod@dividend:	; 2 bytes @ 0xA
  1178  007A                     	ds	1
  1179  007A                     	global	___awmod@dividend
  1180                           ___awmod@dividend:	; 2 bytes @ 0xB
  1181  007B                     	ds	1
  1182  007B                     ??___lwmod:	; 1 bytes @ 0xC
  1183  007C                     	ds	1
  1184  007C                     ??___awmod:	; 1 bytes @ 0xD
  1185  007D                     	global	___lwmod@counter
  1186                           ___lwmod@counter:	; 1 bytes @ 0xD
  1187  007D                     	ds	1
  1188  007D                     psect	cstackBANK0,class=BANK0,space=1,noexec
  1189                           global __pcstackBANK0
  1190                           __pcstackBANK0:
  1191  0020                     	global	?_printf
  1192                           ?_printf:	; 2 bytes @ 0x0
  1193  0020                     	global	?___flmul
  1194                           ?___flmul:	; 4 bytes @ 0x0
  1195  0020                     	global	___awmod@counter
  1196                           ___awmod@counter:	; 1 bytes @ 0x0
  1197  0020                     	global	___xxtofl@sign
  1198                           ___xxtofl@sign:	; 1 bytes @ 0x0
  1199  0020                     	global	printf@f
  1200                           printf@f:	; 2 bytes @ 0x0
  1201  0020                     	global	___fldiv@rem
  1202                           ___fldiv@rem:	; 4 bytes @ 0x0
  1203  0020                     	global	___flmul@b
  1204                           ___flmul@b:	; 4 bytes @ 0x0
  1205  0020                     	ds	1
  1206  0020                     	global	___awmod@sign
  1207                           ___awmod@sign:	; 1 bytes @ 0x1
  1208  0021                     	global	___xxtofl@exp
  1209                           ___xxtofl@exp:	; 1 bytes @ 0x1
  1210  0021                     	ds	1
  1211  0021                     	global	___xxtofl@arg
  1212                           ___xxtofl@arg:	; 4 bytes @ 0x2
  1213  0022                     	ds	2
  1214  0022                     ??_printf:	; 1 bytes @ 0x4
  1215  0024                     	global	___fldiv@sign
  1216                           ___fldiv@sign:	; 1 bytes @ 0x4
  1217  0024                     	global	___flmul@a
  1218                           ___flmul@a:	; 4 bytes @ 0x4
  1219  0024                     	ds	1
  1220  0024                     	global	___fldiv@new_exp
  1221                           ___fldiv@new_exp:	; 2 bytes @ 0x5
  1222  0025                     	ds	2
  1223  0025                     	global	___fldiv@grs
  1224                           ___fldiv@grs:	; 4 bytes @ 0x7
  1225  0027                     	ds	1
  1226  0027                     	global	printf@ap
  1227                           printf@ap:	; 1 bytes @ 0x8
  1228  0028                     	global	___flmul@sign
  1229                           ___flmul@sign:	; 1 bytes @ 0x8
  1230  0028                     	ds	1
  1231  0028                     	global	printf@flag
  1232                           printf@flag:	; 1 bytes @ 0x9
  1233  0029                     	global	___flmul@grs
  1234                           ___flmul@grs:	; 4 bytes @ 0x9
  1235  0029                     	ds	1
  1236  0029                     	global	printf@prec
  1237                           printf@prec:	; 1 bytes @ 0xA
  1238  002A                     	ds	1
  1239  002A                     	global	___fldiv@bexp
  1240                           ___fldiv@bexp:	; 1 bytes @ 0xB
  1241  002B                     	global	printf@val
  1242                           printf@val:	; 2 bytes @ 0xB
  1243  002B                     	ds	1
  1244  002B                     	global	___fldiv@aexp
  1245                           ___fldiv@aexp:	; 1 bytes @ 0xC
  1246  002C                     	ds	1
  1247  002C                     	global	printf@c
  1248                           printf@c:	; 1 bytes @ 0xD
  1249  002D                     	global	___flmul@aexp
  1250                           ___flmul@aexp:	; 1 bytes @ 0xD
  1251  002D                     	ds	1
  1252  002D                     	global	___flmul@bexp
  1253                           ___flmul@bexp:	; 1 bytes @ 0xE
  1254  002E                     	ds	1
  1255  002E                     	global	___flmul@prod
  1256                           ___flmul@prod:	; 4 bytes @ 0xF
  1257  002F                     	ds	4
  1258  002F                     	global	___flmul@temp
  1259                           ___flmul@temp:	; 2 bytes @ 0x13
  1260  0033                     	ds	2
  1261  0033                     	global	?___fltol
  1262                           ?___fltol:	; 4 bytes @ 0x15
  1263  0035                     	global	___fltol@f1
  1264                           ___fltol@f1:	; 4 bytes @ 0x15
  1265  0035                     	ds	4
  1266  0035                     ??___fltol:	; 1 bytes @ 0x19
  1267  0039                     	ds	5
  1268  0039                     	global	___fltol@sign1
  1269                           ___fltol@sign1:	; 1 bytes @ 0x1E
  1270  003E                     	ds	1
  1271  003E                     	global	___fltol@exp1
  1272                           ___fltol@exp1:	; 1 bytes @ 0x1F
  1273  003F                     	ds	1
  1274  003F                     ??_main:	; 1 bytes @ 0x20
  1275  0040                     	ds	4
  1276  0040                     	global	main@adc
  1277                           main@adc:	; 4 bytes @ 0x24
  1278  0044                     	ds	4
  1279  0044                     	global	main@volt
  1280                           main@volt:	; 4 bytes @ 0x28
  1281  0048                     	ds	4
  1282  0048                     	global	main@temp
  1283                           main@temp:	; 4 bytes @ 0x2C
  1284  004C                     	ds	4
  1285  004C                     	global	main@c1
  1286                           main@c1:	; 2 bytes @ 0x30
  1287  0050                     	ds	2
  1288  0050                     	global	main@c2
  1289                           main@c2:	; 2 bytes @ 0x32
  1290  0052                     	ds	2
  1291  0052                     	global	main@c3
  1292                           main@c3:	; 2 bytes @ 0x34
  1293  0054                     	ds	2
  1294  0054                     	global	main@c4
  1295                           main@c4:	; 2 bytes @ 0x36
  1296  0056                     	ds	2
  1297  0056                     	global	main@i
  1298                           main@i:	; 2 bytes @ 0x38
  1299  0058                     	ds	2
  1300  0058                     	global	main@opcija
  1301                           main@opcija:	; 2 bytes @ 0x3A
  1302  005A                     	ds	2
  1303  005A                     	global	main@temp1
  1304                           main@temp1:	; 2 bytes @ 0x3C
  1305  005C                     	ds	2
  1306  005C                     ;!
  1307                           ;!Data Sizes:
  1308                           ;!    Strings     472
  1309                           ;!    Constant    10
  1310                           ;!    Data        0
  1311                           ;!    BSS         0
  1312                           ;!    Persistent  0
  1313                           ;!    Stack       0
  1314                           ;!
  1315                           ;!Auto Spaces:
  1316                           ;!    Space          Size  Autos    Used
  1317                           ;!    COMMON           14     14      14
  1318                           ;!    BANK0            80     62      62
  1319                           ;!    BANK1            80      0       0
  1320                           ;!    BANK3            96      0       0
  1321                           ;!    BANK2            96      0       0
  1322                           
  1323                           ;!
  1324                           ;!Pointer List with Targets:
  1325                           ;!
  1326                           ;!    printf@f	PTR const unsigned char  size(2) Largest target is 68
  1327                           ;!		 -> STR_20(CODE[26]), STR_16(CODE[3]), STR_15(CODE[3]), STR_14(CODE[3]), 
  1328                           ;!		 -> STR_13(CODE[2]), STR_12(CODE[3]), STR_11(CODE[3]), STR_10(CODE[16]), 
  1329                           ;!		 -> STR_9(CODE[25]), STR_8(CODE[8]), STR_7(CODE[45]), STR_6(CODE[8]), 
  1330                           ;!		 -> STR_5(CODE[53]), STR_4(CODE[40]), STR_3(CODE[34]), STR_2(CODE[37]), 
  1331                           ;!		 -> STR_1(CODE[68]), 
  1332                           ;!
  1333                           ;!    printf@ap	PTR void [1] size(1) Largest target is 2
  1334                           ;!		 -> ?_printf(BANK0[2]), 
  1335                           ;!
  1336                           ;!    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 31
  1337                           ;!		 -> STR_24(CODE[31]), STR_23(CODE[31]), STR_22(CODE[25]), STR_21(CODE[16]), 
  1338                           ;!		 -> STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[12]), 
  1339                           ;!
  1340                           
  1341                           
  1342                           ;!
  1343                           ;!Critical Paths under _main in COMMON
  1344                           ;!
  1345                           ;!    _main->___awmod
  1346                           ;!    _main->___flmul
  1347                           ;!    _printf->___lwmod
  1348                           ;!    _putch->_UART_Send_Char
  1349                           ;!    ___lwmod->___lwdiv
  1350                           ;!    ___xxtofl->_ADC_Read
  1351                           ;!    ___fltol->___flmul
  1352                           ;!    ___flmul->__Umul8_16
  1353                           ;!    ___awmod->___awdiv
  1354                           ;!    _Lcd_Write_String->_Lcd_Write_Char
  1355                           ;!    _Lcd_Write_Char->_Lcd_Port
  1356                           ;!    _Lcd_Set_Cursor->_Lcd_Cmd
  1357                           ;!    _Lcd_Init->_Lcd_Cmd
  1358                           ;!    _Lcd_Clear->_Lcd_Cmd
  1359                           ;!    _Lcd_Cmd->_Lcd_Port
  1360                           ;!
  1361                           ;!Critical Paths under _main in BANK0
  1362                           ;!
  1363                           ;!    _main->___fltol
  1364                           ;!    ___fltol->___flmul
  1365                           ;!
  1366                           ;!Critical Paths under _main in BANK1
  1367                           ;!
  1368                           ;!    None.
  1369                           ;!
  1370                           ;!Critical Paths under _main in BANK3
  1371                           ;!
  1372                           ;!    None.
  1373                           ;!
  1374                           ;!Critical Paths under _main in BANK2
  1375                           ;!
  1376                           ;!    None.
  1377                           
  1378 ;;
  1379 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1380 ;;
  1381                           
  1382                           ;!
  1383                           ;!Call Graph Tables:
  1384                           ;!
  1385                           ;! ---------------------------------------------------------------------------------
  1386                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1387                           ;! ---------------------------------------------------------------------------------
  1388                           ;! (0) _main                                                30    30      0   11261
  1389                           ;!                                             32 BANK0     30    30      0
  1390                           ;!                     _ADC_Initialize
  1391                           ;!                           _ADC_Read
  1392                           ;!                          _Lcd_Clear
  1393                           ;!                           _Lcd_Init
  1394                           ;!                     _Lcd_Set_Cursor
  1395                           ;!                     _Lcd_Write_Char
  1396                           ;!                   _Lcd_Write_String
  1397                           ;!                      _ServoRotiraj0
  1398                           ;!                    _ServoRotiraj180
  1399                           ;!                      _UART_Get_Char
  1400                           ;!                          _UART_Init
  1401                           ;!                     _UART_Send_Char
  1402                           ;!                            ___awdiv
  1403                           ;!                            ___awmod
  1404                           ;!                            ___fldiv
  1405                           ;!                            ___flmul
  1406                           ;!                            ___fltol
  1407                           ;!                           ___xxtofl
  1408                           ;!                             _printf
  1409                           ;! ---------------------------------------------------------------------------------
  1410                           ;! (1) _printf                                              22    18      4    2347
  1411                           ;!                                              0 BANK0     14    10      4
  1412                           ;!                            ___lwdiv
  1413                           ;!                            ___lwmod
  1414                           ;!                              _putch
  1415                           ;! ---------------------------------------------------------------------------------
  1416                           ;! (2) _putch                                                1     1      0      44
  1417                           ;!                                              1 COMMON     1     1      0
  1418                           ;!                     _UART_Send_Char
  1419                           ;! ---------------------------------------------------------------------------------
  1420                           ;! (3) _UART_Send_Char                                       1     1      0      22
  1421                           ;!                                              0 COMMON     1     1      0
  1422                           ;! ---------------------------------------------------------------------------------
  1423                           ;! (2) ___lwmod                                              6     2      4     311
  1424                           ;!                                              8 COMMON     6     2      4
  1425                           ;!                            ___lwdiv (ARG)
  1426                           ;! ---------------------------------------------------------------------------------
  1427                           ;! (2) ___lwdiv                                              8     4      4     314
  1428                           ;!                                              0 COMMON     8     4      4
  1429                           ;! ---------------------------------------------------------------------------------
  1430                           ;! (1) ___xxtofl                                            14    10      4     398
  1431                           ;!                                              5 COMMON     8     4      4
  1432                           ;!                                              0 BANK0      6     6      0
  1433                           ;!                           _ADC_Read (ARG)
  1434                           ;! ---------------------------------------------------------------------------------
  1435                           ;! (1) ___fltol                                             11     7      4     305
  1436                           ;!                                             21 BANK0     11     7      4
  1437                           ;!                            ___flmul (ARG)
  1438                           ;! ---------------------------------------------------------------------------------
  1439                           ;! (1) ___flmul                                             26    18      8    2569
  1440                           ;!                                              9 COMMON     5     5      0
  1441                           ;!                                              0 BANK0     21    13      8
  1442                           ;!                          __Umul8_16
  1443                           ;! ---------------------------------------------------------------------------------
  1444                           ;! (2) __Umul8_16                                            9     7      2     799
  1445                           ;!                                              0 COMMON     9     7      2
  1446                           ;! ---------------------------------------------------------------------------------
  1447                           ;! (1) ___fldiv                                             26    18      8    1273
  1448                           ;!                                              0 COMMON    13     5      8
  1449                           ;!                                              0 BANK0     13    13      0
  1450                           ;! ---------------------------------------------------------------------------------
  1451                           ;! (1) ___awmod                                              7     3      4     904
  1452                           ;!                                              9 COMMON     5     1      4
  1453                           ;!                                              0 BANK0      2     2      0
  1454                           ;!                            ___awdiv (ARG)
  1455                           ;! ---------------------------------------------------------------------------------
  1456                           ;! (1) ___awdiv                                              9     5      4     756
  1457                           ;!                                              0 COMMON     9     5      4
  1458                           ;! ---------------------------------------------------------------------------------
  1459                           ;! (1) _UART_Init                                            0     0      0       0
  1460                           ;! ---------------------------------------------------------------------------------
  1461                           ;! (1) _UART_Get_Char                                        0     0      0       0
  1462                           ;! ---------------------------------------------------------------------------------
  1463                           ;! (1) _ServoRotiraj180                                      4     4      0      46
  1464                           ;!                                              0 COMMON     4     4      0
  1465                           ;! ---------------------------------------------------------------------------------
  1466                           ;! (1) _ServoRotiraj0                                        4     4      0      46
  1467                           ;!                                              0 COMMON     4     4      0
  1468                           ;! ---------------------------------------------------------------------------------
  1469                           ;! (1) _Lcd_Write_String                                     7     5      2     800
  1470                           ;!                                              5 COMMON     7     5      2
  1471                           ;!                     _Lcd_Write_Char
  1472                           ;! ---------------------------------------------------------------------------------
  1473                           ;! (2) _Lcd_Write_Char                                       4     4      0     178
  1474                           ;!                                              1 COMMON     4     4      0
  1475                           ;!                           _Lcd_Port
  1476                           ;! ---------------------------------------------------------------------------------
  1477                           ;! (1) _Lcd_Set_Cursor                                       7     6      1     836
  1478                           ;!                                              4 COMMON     7     6      1
  1479                           ;!                            _Lcd_Cmd
  1480                           ;! ---------------------------------------------------------------------------------
  1481                           ;! (1) _Lcd_Init                                             2     2      0     198
  1482                           ;!                                              4 COMMON     2     2      0
  1483                           ;!                            _Lcd_Cmd
  1484                           ;!                           _Lcd_Port
  1485                           ;! ---------------------------------------------------------------------------------
  1486                           ;! (1) _Lcd_Clear                                            0     0      0     110
  1487                           ;!                            _Lcd_Cmd
  1488                           ;! ---------------------------------------------------------------------------------
  1489                           ;! (2) _Lcd_Cmd                                              3     3      0     110
  1490                           ;!                                              1 COMMON     3     3      0
  1491                           ;!                           _Lcd_Port
  1492                           ;! ---------------------------------------------------------------------------------
  1493                           ;! (3) _Lcd_Port                                             1     1      0      88
  1494                           ;!                                              0 COMMON     1     1      0
  1495                           ;! ---------------------------------------------------------------------------------
  1496                           ;! (1) _ADC_Read                                             5     3      2      22
  1497                           ;!                                              0 COMMON     5     3      2
  1498                           ;! ---------------------------------------------------------------------------------
  1499                           ;! (1) _ADC_Initialize                                       0     0      0       0
  1500                           ;! ---------------------------------------------------------------------------------
  1501                           ;! Estimated maximum stack depth 3
  1502                           ;! ---------------------------------------------------------------------------------
  1503                           ;!
  1504                           ;! Call Graph Graphs:
  1505                           ;!
  1506                           ;! _main (ROOT)
  1507                           ;!   _ADC_Initialize
  1508                           ;!   _ADC_Read
  1509                           ;!   _Lcd_Clear
  1510                           ;!     _Lcd_Cmd
  1511                           ;!       _Lcd_Port
  1512                           ;!   _Lcd_Init
  1513                           ;!     _Lcd_Cmd
  1514                           ;!       _Lcd_Port
  1515                           ;!     _Lcd_Port
  1516                           ;!   _Lcd_Set_Cursor
  1517                           ;!     _Lcd_Cmd
  1518                           ;!       _Lcd_Port
  1519                           ;!   _Lcd_Write_Char
  1520                           ;!     _Lcd_Port
  1521                           ;!   _Lcd_Write_String
  1522                           ;!     _Lcd_Write_Char
  1523                           ;!       _Lcd_Port
  1524                           ;!   _ServoRotiraj0
  1525                           ;!   _ServoRotiraj180
  1526                           ;!   _UART_Get_Char
  1527                           ;!   _UART_Init
  1528                           ;!   _UART_Send_Char
  1529                           ;!   ___awdiv
  1530                           ;!   ___awmod
  1531                           ;!     ___awdiv (ARG)
  1532                           ;!   ___fldiv
  1533                           ;!   ___flmul
  1534                           ;!     __Umul8_16
  1535                           ;!   ___fltol
  1536                           ;!     ___flmul (ARG)
  1537                           ;!       __Umul8_16
  1538                           ;!   ___xxtofl
  1539                           ;!     _ADC_Read (ARG)
  1540                           ;!   _printf
  1541                           ;!     ___lwdiv
  1542                           ;!     ___lwmod
  1543                           ;!       ___lwdiv (ARG)
  1544                           ;!     _putch
  1545                           ;!       _UART_Send_Char
  1546                           ;!
  1547                           
  1548                           ;! Address spaces:
  1549                           
  1550                           ;!Name               Size   Autos  Total    Cost      Usage
  1551                           ;!BITCOMMON            E      0       0       0        0.0%
  1552                           ;!EEDATA             100      0       0       0        0.0%
  1553                           ;!NULL                 0      0       0       0        0.0%
  1554                           ;!CODE                 0      0       0       0        0.0%
  1555                           ;!COMMON               E      E       E       1      100.0%
  1556                           ;!BITSFR0              0      0       0       1        0.0%
  1557                           ;!SFR0                 0      0       0       1        0.0%
  1558                           ;!BITSFR1              0      0       0       2        0.0%
  1559                           ;!SFR1                 0      0       0       2        0.0%
  1560                           ;!STACK                0      0       0       2        0.0%
  1561                           ;!ABS                  0      0       0       3        0.0%
  1562                           ;!BITBANK0            50      0       0       4        0.0%
  1563                           ;!BITSFR3              0      0       0       4        0.0%
  1564                           ;!SFR3                 0      0       0       4        0.0%
  1565                           ;!BANK0               50     3E      3E       5       77.5%
  1566                           ;!BITSFR2              0      0       0       5        0.0%
  1567                           ;!SFR2                 0      0       0       5        0.0%
  1568                           ;!BITBANK1            50      0       0       6        0.0%
  1569                           ;!BANK1               50      0       0       7        0.0%
  1570                           ;!BITBANK3            60      0       0       8        0.0%
  1571                           ;!BANK3               60      0       0       9        0.0%
  1572                           ;!BITBANK2            60      0       0      10        0.0%
  1573                           ;!BANK2               60      0       0      11        0.0%
  1574                           ;!DATA                 0      0       0      12        0.0%
  1575                           
  1576                           	global	_main
  1577                           
  1578 ;; *************** function _main *****************
  1579 ;; Defined at:
  1580 ;;		line 217 in file "ROK3ZAD2.c"
  1581 ;; Parameters:    Size  Location     Type
  1582 ;;		None
  1583 ;; Auto vars:     Size  Location     Type
  1584 ;;  i               2   56[BANK0 ] int 
  1585 ;;  temp            4   44[BANK0 ] float 
  1586 ;;  volt            4   40[BANK0 ] float 
  1587 ;;  adc             4   36[BANK0 ] float 
  1588 ;;  temp1           2   60[BANK0 ] int 
  1589 ;;  opcija          2   58[BANK0 ] int 
  1590 ;;  c4              2   54[BANK0 ] int 
  1591 ;;  c3              2   52[BANK0 ] int 
  1592 ;;  c2              2   50[BANK0 ] int 
  1593 ;;  c1              2   48[BANK0 ] int 
  1594 ;; Return value:  Size  Location     Type
  1595 ;;                  1    wreg      void 
  1596 ;; Registers used:
  1597 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1598 ;; Tracked objects:
  1599 ;;		On entry : B00/0
  1600 ;;		On exit  : 0/0
  1601 ;;		Unchanged: 0/0
  1602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1603 ;;      Params:         0       0       0       0       0
  1604 ;;      Locals:         0      26       0       0       0
  1605 ;;      Temps:          0       4       0       0       0
  1606 ;;      Totals:         0      30       0       0       0
  1607 ;;Total ram usage:       30 bytes
  1608 ;; Hardware stack levels required when called:    3
  1609 ;; This function calls:
  1610 ;;		_ADC_Initialize
  1611 ;;		_ADC_Read
  1612 ;;		_Lcd_Clear
  1613 ;;		_Lcd_Init
  1614 ;;		_Lcd_Set_Cursor
  1615 ;;		_Lcd_Write_Char
  1616 ;;		_Lcd_Write_String
  1617 ;;		_ServoRotiraj0
  1618 ;;		_ServoRotiraj180
  1619 ;;		_UART_Get_Char
  1620 ;;		_UART_Init
  1621 ;;		_UART_Send_Char
  1622 ;;		___awdiv
  1623 ;;		___awmod
  1624 ;;		___fldiv
  1625 ;;		___flmul
  1626 ;;		___fltol
  1627 ;;		___xxtofl
  1628 ;;		_printf
  1629 ;; This function is called by:
  1630 ;;		Startup code after reset
  1631 ;; This function uses a non-reentrant model
  1632 ;;
  1633                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  1634                           	file	"ROK3ZAD2.c"
  1635                           	line	217
  1636                           global __pmaintext
  1637                           __pmaintext:	;psect for function _main
  1638  013A                     psect	maintext
  1639                           	file	"ROK3ZAD2.c"
  1640                           	line	217
  1641                           	global	__size_of_main
  1642                           	__size_of_main	equ	__end_of_main-_main
  1643  034D                     	
  1644                           _main:	
  1645  013A                     ;incstack = 0
  1646                           	opt	stack 5
  1647                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1648                           	line	218
  1649                           	
  1650                           l2372:	
  1651  013A                     ;ROK3ZAD2.c: 218:     PORTD=0;
  1652                           	bcf	status, 5	;RP0=0, select bank0
  1653  013A  1283               	bcf	status, 6	;RP1=0, select bank0
  1654  013B  1303               	clrf	(8)	;volatile
  1655  013C  0188               	line	219
  1656                           ;ROK3ZAD2.c: 219:     TRISD=0;
  1657                           	bsf	status, 5	;RP0=1, select bank1
  1658  013D  1683               	bcf	status, 6	;RP1=0, select bank1
  1659  013E  1303               	clrf	(136)^080h	;volatile
  1660  013F  0188               	line	220
  1661                           ;ROK3ZAD2.c: 220:     PORTB=0;
  1662                           	bcf	status, 5	;RP0=0, select bank0
  1663  0140  1283               	bcf	status, 6	;RP1=0, select bank0
  1664  0141  1303               	clrf	(6)	;volatile
  1665  0142  0186               	line	221
  1666                           ;ROK3ZAD2.c: 221:     TRISB=0;
  1667                           	bsf	status, 5	;RP0=1, select bank1
  1668  0143  1683               	bcf	status, 6	;RP1=0, select bank1
  1669  0144  1303               	clrf	(134)^080h	;volatile
  1670  0145  0186               	line	222
  1671                           	
  1672                           l2374:	
  1673  0146                     ;ROK3ZAD2.c: 222:     Lcd_Init();
  1674                           	fcall	_Lcd_Init
  1675  0146  120A  158A  235D  120A  118A  	line	223
  1676                           	
  1677                           l2376:	
  1678  014B                     ;ROK3ZAD2.c: 223:     Lcd_Clear();
  1679                           	fcall	_Lcd_Clear
  1680  014B  120A  158A  20F6  120A  118A  	line	224
  1681                           	
  1682                           l2378:	
  1683  0150                     ;ROK3ZAD2.c: 224:     UART_Init();
  1684                           	fcall	_UART_Init
  1685  0150  120A  158A  2115  120A  118A  	line	228
  1686                           	
  1687                           l2380:	
  1688  0155                     ;ROK3ZAD2.c: 225:     float adc;;ROK3ZAD2.c: 226:     float volt, temp;;ROK3ZAD2.c: 227:
                                      int c1, c2, c3, c4, temp1;;ROK3ZAD2.c: 228:     ADC_Initialize();
  1689                           	fcall	_ADC_Initialize
  1690  0155  120A  158A  20E1  120A  118A  	goto	l2382
  1691  015A  295B               	line	231
  1692                           ;ROK3ZAD2.c: 230:     int opcija;;ROK3ZAD2.c: 231:     do {
  1693                           	
  1694                           l153:	
  1695  015B                     	line	232
  1696                           	
  1697                           l2382:	
  1698  015B                     ;ROK3ZAD2.c: 232:         printf("***Dobrodosli! Ovo je drugi zadatak na ispitu. Zehra S
                                 abic, 890 ***");
  1699                           	movlw	low(((STR_1)|8000h))
  1700  015B  301C               	bcf	status, 5	;RP0=0, select bank0
  1701  015C  1283               	bcf	status, 6	;RP1=0, select bank0
  1702  015D  1303               	movwf	(printf@f)
  1703  015E  00A0               	movlw	high(((STR_1)|8000h))
  1704  015F  3090               	movwf	((printf@f))+1
  1705  0160  00A1               	fcall	_printf
  1706  0161  120A  118A  2033  120A  118A  	line	233
  1707                           	
  1708                           l2384:	
  1709  0166                     ;ROK3ZAD2.c: 233:         printf("\rOPCIJA1: Ispis trenutne temperature");
  1710                           	movlw	low(((STR_2)|8000h))
  1711  0166  30EA               	bcf	status, 5	;RP0=0, select bank0
  1712  0167  1283               	bcf	status, 6	;RP1=0, select bank0
  1713  0168  1303               	movwf	(printf@f)
  1714  0169  00A0               	movlw	high(((STR_2)|8000h))
  1715  016A  3090               	movwf	((printf@f))+1
  1716  016B  00A1               	fcall	_printf
  1717  016C  120A  118A  2033  120A  118A  	line	234
  1718                           	
  1719                           l2386:	
  1720  0171                     ;ROK3ZAD2.c: 234:         printf("\rOPCIJA2: Ispis trenutnog vremena");
  1721                           	movlw	low(((STR_3)|8000h))
  1722  0171  300F               	bcf	status, 5	;RP0=0, select bank0
  1723  0172  1283               	bcf	status, 6	;RP1=0, select bank0
  1724  0173  1303               	movwf	(printf@f)
  1725  0174  00A0               	movlw	high(((STR_3)|8000h))
  1726  0175  3091               	movwf	((printf@f))+1
  1727  0176  00A1               	fcall	_printf
  1728  0177  120A  118A  2033  120A  118A  	line	235
  1729                           	
  1730                           l2388:	
  1731  017C                     ;ROK3ZAD2.c: 235:         printf("\rOPCIJA3: Ispis poruke na LCD displeju ");
  1732                           	movlw	low(((STR_4)|8000h))
  1733  017C  30C2               	bcf	status, 5	;RP0=0, select bank0
  1734  017D  1283               	bcf	status, 6	;RP1=0, select bank0
  1735  017E  1303               	movwf	(printf@f)
  1736  017F  00A0               	movlw	high(((STR_4)|8000h))
  1737  0180  3090               	movwf	((printf@f))+1
  1738  0181  00A1               	fcall	_printf
  1739  0182  120A  118A  2033  120A  118A  	line	236
  1740                           	
  1741                           l2390:	
  1742  0187                     ;ROK3ZAD2.c: 236:         printf("\rOPCIJA4: Okretanje servomotora u obje strane 3 puta"
                                 );
  1743                           	movlw	low(((STR_5)|8000h))
  1744  0187  3060               	bcf	status, 5	;RP0=0, select bank0
  1745  0188  1283               	bcf	status, 6	;RP1=0, select bank0
  1746  0189  1303               	movwf	(printf@f)
  1747  018A  00A0               	movlw	high(((STR_5)|8000h))
  1748  018B  3090               	movwf	((printf@f))+1
  1749  018C  00A1               	fcall	_printf
  1750  018D  120A  118A  2033  120A  118A  	line	237
  1751                           	
  1752                           l2392:	
  1753  0192                     ;ROK3ZAD2.c: 237:         printf("\r******");
  1754                           	movlw	low(((STR_6)|8000h))
  1755  0192  30E7               	bcf	status, 5	;RP0=0, select bank0
  1756  0193  1283               	bcf	status, 6	;RP1=0, select bank0
  1757  0194  1303               	movwf	(printf@f)
  1758  0195  00A0               	movlw	high(((STR_6)|8000h))
  1759  0196  3091               	movwf	((printf@f))+1
  1760  0197  00A1               	fcall	_printf
  1761  0198  120A  118A  2033  120A  118A  	line	238
  1762                           	
  1763                           l2394:	
  1764  019D                     ;ROK3ZAD2.c: 238:         printf("\rMolimo vas odaberite opciju 1, 2, 3 ili 4: ");
  1765                           	movlw	low(((STR_7)|8000h))
  1766  019D  3095               	bcf	status, 5	;RP0=0, select bank0
  1767  019E  1283               	bcf	status, 6	;RP1=0, select bank0
  1768  019F  1303               	movwf	(printf@f)
  1769  01A0  00A0               	movlw	high(((STR_7)|8000h))
  1770  01A1  3090               	movwf	((printf@f))+1
  1771  01A2  00A1               	fcall	_printf
  1772  01A3  120A  118A  2033  120A  118A  	line	239
  1773                           	
  1774                           l2396:	
  1775  01A8                     ;ROK3ZAD2.c: 239:         opcija=UART_Get_Char();
  1776                           	fcall	_UART_Get_Char
  1777  01A8  120A  158A  2103  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  1778  01AD  1283               	bcf	status, 6	;RP1=0, select bank0
  1779  01AE  1303               	movwf	(??_main+0)+0
  1780  01AF  00C0               	clrf	(??_main+0)+0+1
  1781  01B0  01C1               	movf	0+(??_main+0)+0,w
  1782  01B1  0840               	movwf	(main@opcija)
  1783  01B2  00DA               	movf	1+(??_main+0)+0,w
  1784  01B3  0841               	movwf	(main@opcija+1)
  1785  01B4  00DB               	line	240
  1786                           	
  1787                           l2398:	
  1788  01B5                     ;ROK3ZAD2.c: 240:         UART_Send_Char(opcija);
  1789                           	movf	(main@opcija),w
  1790  01B5  085A               	fcall	_UART_Send_Char
  1791  01B6  120A  158A  20EA  120A  118A  	line	241
  1792                           	
  1793                           l2400:	
  1794  01BB                     ;ROK3ZAD2.c: 241:         printf("\r******");
  1795                           	movlw	low(((STR_8)|8000h))
  1796  01BB  30E7               	bcf	status, 5	;RP0=0, select bank0
  1797  01BC  1283               	bcf	status, 6	;RP1=0, select bank0
  1798  01BD  1303               	movwf	(printf@f)
  1799  01BE  00A0               	movlw	high(((STR_8)|8000h))
  1800  01BF  3091               	movwf	((printf@f))+1
  1801  01C0  00A1               	fcall	_printf
  1802  01C1  120A  118A  2033  120A  118A  	line	242
  1803                           ;ROK3ZAD2.c: 242:         switch(opcija) {
  1804                           	goto	l2504
  1805  01C6  2C66               	line	243
  1806                           ;ROK3ZAD2.c: 243:             case '1':
  1807                           	
  1808                           l155:	
  1809  01C7                     	line	244
  1810                           	
  1811                           l2402:	
  1812  01C7                     ;ROK3ZAD2.c: 244:                 printf("\r\rIzabrali ste opciju 3.");
  1813                           	movlw	low(((STR_9)|8000h))
  1814  01C7  30A2               	bcf	status, 5	;RP0=0, select bank0
  1815  01C8  1283               	bcf	status, 6	;RP1=0, select bank0
  1816  01C9  1303               	movwf	(printf@f)
  1817  01CA  00A0               	movlw	high(((STR_9)|8000h))
  1818  01CB  3091               	movwf	((printf@f))+1
  1819  01CC  00A1               	fcall	_printf
  1820  01CD  120A  118A  2033  120A  118A  	line	245
  1821                           	
  1822                           l2404:	
  1823  01D2                     ;ROK3ZAD2.c: 245:                 adc = (ADC_Read(4));
  1824                           	movlw	low(04h)
  1825  01D2  3004               	fcall	_ADC_Read
  1826  01D3  120A  118A  2005  120A  118A  	movf	(0+(?_ADC_Read)),w
  1827  01D8  0870               	bcf	status, 5	;RP0=0, select bank0
  1828  01D9  1283               	bcf	status, 6	;RP1=0, select bank0
  1829  01DA  1303               	movwf	((??_main+0)+0)
  1830  01DB  00C0               	movf	(1+(?_ADC_Read)),w
  1831  01DC  0871               	movwf	((??_main+0)+0+1)
  1832  01DD  00C1               	clrf	((??_main+0)+0+2)
  1833  01DE  01C2               	clrf	((??_main+0)+0+3)
  1834  01DF  01C3               	movf	3+(??_main+0)+0,w
  1835  01E0  0843               	movwf	(___xxtofl@val+3)
  1836  01E1  00F8               	movf	2+(??_main+0)+0,w
  1837  01E2  0842               	movwf	(___xxtofl@val+2)
  1838  01E3  00F7               	movf	1+(??_main+0)+0,w
  1839  01E4  0841               	movwf	(___xxtofl@val+1)
  1840  01E5  00F6               	movf	0+(??_main+0)+0,w
  1841  01E6  0840               	movwf	(___xxtofl@val)
  1842  01E7  00F5               
  1843                           	movlw	low(0)
  1844  01E8  3000               	fcall	___xxtofl
  1845  01E9  120A  158A  252D  120A  118A  	movf	(3+(?___xxtofl)),w
  1846  01EE  0878               	bcf	status, 5	;RP0=0, select bank0
  1847  01EF  1283               	bcf	status, 6	;RP1=0, select bank0
  1848  01F0  1303               	movwf	(main@adc+3)
  1849  01F1  00C7               	movf	(2+(?___xxtofl)),w
  1850  01F2  0877               	movwf	(main@adc+2)
  1851  01F3  00C6               	movf	(1+(?___xxtofl)),w
  1852  01F4  0876               	movwf	(main@adc+1)
  1853  01F5  00C5               	movf	(0+(?___xxtofl)),w
  1854  01F6  0875               	movwf	(main@adc)
  1855  01F7  00C4               
  1856                           	line	246
  1857                           	
  1858                           l2406:	
  1859  01F8                     ;ROK3ZAD2.c: 246:                 volt = adc*4.88281;
  1860                           	movlw	0x40
  1861  01F8  3040               	movwf	(___flmul@b+3)
  1862  01F9  00A3               	movlw	0x9c
  1863  01FA  309C               	movwf	(___flmul@b+2)
  1864  01FB  00A2               	movlw	0x3f
  1865  01FC  303F               	movwf	(___flmul@b+1)
  1866  01FD  00A1               	movlw	0xfb
  1867  01FE  30FB               	movwf	(___flmul@b)
  1868  01FF  00A0               
  1869                           	movf	(main@adc+3),w
  1870  0200  0847               	movwf	(___flmul@a+3)
  1871  0201  00A7               	movf	(main@adc+2),w
  1872  0202  0846               	movwf	(___flmul@a+2)
  1873  0203  00A6               	movf	(main@adc+1),w
  1874  0204  0845               	movwf	(___flmul@a+1)
  1875  0205  00A5               	movf	(main@adc),w
  1876  0206  0844               	movwf	(___flmul@a)
  1877  0207  00A4               
  1878                           	fcall	___flmul
  1879  0208  120A  118A  2487  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  1880  020D  1283               	bcf	status, 6	;RP1=0, select bank0
  1881  020E  1303               	movf	(3+(?___flmul)),w
  1882  020F  0823               	movwf	(main@volt+3)
  1883  0210  00CB               	movf	(2+(?___flmul)),w
  1884  0211  0822               	movwf	(main@volt+2)
  1885  0212  00CA               	movf	(1+(?___flmul)),w
  1886  0213  0821               	movwf	(main@volt+1)
  1887  0214  00C9               	movf	(0+(?___flmul)),w
  1888  0215  0820               	movwf	(main@volt)
  1889  0216  00C8               
  1890                           	line	247
  1891                           	
  1892                           l2408:	
  1893  0217                     ;ROK3ZAD2.c: 247:                 temp=volt/10.0;
  1894                           	movlw	0x41
  1895  0217  3041               	movwf	(___fldiv@a+3)
  1896  0218  00F3               	movlw	0x20
  1897  0219  3020               	movwf	(___fldiv@a+2)
  1898  021A  00F2               	movlw	0x0
  1899  021B  3000               	movwf	(___fldiv@a+1)
  1900  021C  00F1               	movlw	0x0
  1901  021D  3000               	movwf	(___fldiv@a)
  1902  021E  00F0               
  1903                           	movf	(main@volt+3),w
  1904  021F  084B               	movwf	(___fldiv@b+3)
  1905  0220  00F7               	movf	(main@volt+2),w
  1906  0221  084A               	movwf	(___fldiv@b+2)
  1907  0222  00F6               	movf	(main@volt+1),w
  1908  0223  0849               	movwf	(___fldiv@b+1)
  1909  0224  00F5               	movf	(main@volt),w
  1910  0225  0848               	movwf	(___fldiv@b)
  1911  0226  00F4               
  1912                           	fcall	___fldiv
  1913  0227  120A  158A  25F1  120A  118A  	movf	(3+(?___fldiv)),w
  1914  022C  0873               	bcf	status, 5	;RP0=0, select bank0
  1915  022D  1283               	bcf	status, 6	;RP1=0, select bank0
  1916  022E  1303               	movwf	(main@temp+3)
  1917  022F  00CF               	movf	(2+(?___fldiv)),w
  1918  0230  0872               	movwf	(main@temp+2)
  1919  0231  00CE               	movf	(1+(?___fldiv)),w
  1920  0232  0871               	movwf	(main@temp+1)
  1921  0233  00CD               	movf	(0+(?___fldiv)),w
  1922  0234  0870               	movwf	(main@temp)
  1923  0235  00CC               
  1924                           	line	248
  1925                           	
  1926                           l2410:	
  1927  0236                     ;ROK3ZAD2.c: 248:                 temp1 = temp*100;
  1928                           	movf	(main@temp+3),w
  1929  0236  084F               	movwf	(___flmul@a+3)
  1930  0237  00A7               	movf	(main@temp+2),w
  1931  0238  084E               	movwf	(___flmul@a+2)
  1932  0239  00A6               	movf	(main@temp+1),w
  1933  023A  084D               	movwf	(___flmul@a+1)
  1934  023B  00A5               	movf	(main@temp),w
  1935  023C  084C               	movwf	(___flmul@a)
  1936  023D  00A4               
  1937                           	movlw	0x42
  1938  023E  3042               	movwf	(___flmul@b+3)
  1939  023F  00A3               	movlw	0xc8
  1940  0240  30C8               	movwf	(___flmul@b+2)
  1941  0241  00A2               	movlw	0x0
  1942  0242  3000               	movwf	(___flmul@b+1)
  1943  0243  00A1               	movlw	0x0
  1944  0244  3000               	movwf	(___flmul@b)
  1945  0245  00A0               
  1946                           	fcall	___flmul
  1947  0246  120A  118A  2487  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  1948  024B  1283               	bcf	status, 6	;RP1=0, select bank0
  1949  024C  1303               	movf	(3+(?___flmul)),w
  1950  024D  0823               	movwf	(___fltol@f1+3)
  1951  024E  00B8               	movf	(2+(?___flmul)),w
  1952  024F  0822               	movwf	(___fltol@f1+2)
  1953  0250  00B7               	movf	(1+(?___flmul)),w
  1954  0251  0821               	movwf	(___fltol@f1+1)
  1955  0252  00B6               	movf	(0+(?___flmul)),w
  1956  0253  0820               	movwf	(___fltol@f1)
  1957  0254  00B5               
  1958                           	fcall	___fltol
  1959  0255  120A  158A  2491  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  1960  025A  1283               	bcf	status, 6	;RP1=0, select bank0
  1961  025B  1303               	movf	(1+(?___fltol)),w
  1962  025C  0836               	movwf	(main@temp1+1)
  1963  025D  00DD               	movf	(0+(?___fltol)),w
  1964  025E  0835               	movwf	(main@temp1)
  1965  025F  00DC               	line	250
  1966                           	
  1967                           l2412:	
  1968  0260                     ;ROK3ZAD2.c: 250:                 c1 = (temp1/1000)%10;
  1969                           	movlw	0Ah
  1970  0260  300A               	movwf	(___awmod@divisor)
  1971  0261  00F9               	movlw	0
  1972  0262  3000               	movwf	((___awmod@divisor))+1
  1973  0263  00FA               	movlw	0E8h
  1974  0264  30E8               	movwf	(___awdiv@divisor)
  1975  0265  00F0               	movlw	03h
  1976  0266  3003               	movwf	((___awdiv@divisor))+1
  1977  0267  00F1               	movf	(main@temp1+1),w
  1978  0268  085D               	movwf	(___awdiv@dividend+1)
  1979  0269  00F3               	movf	(main@temp1),w
  1980  026A  085C               	movwf	(___awdiv@dividend)
  1981  026B  00F2               	fcall	___awdiv
  1982  026C  120A  158A  2420  120A  118A  	movf	(1+(?___awdiv)),w
  1983  0271  0871               	movwf	(___awmod@dividend+1)
  1984  0272  00FC               	movf	(0+(?___awdiv)),w
  1985  0273  0870               	movwf	(___awmod@dividend)
  1986  0274  00FB               	fcall	___awmod
  1987  0275  120A  158A  23BB  120A  118A  	movf	(1+(?___awmod)),w
  1988  027A  087A               	bcf	status, 5	;RP0=0, select bank0
  1989  027B  1283               	bcf	status, 6	;RP1=0, select bank0
  1990  027C  1303               	movwf	(main@c1+1)
  1991  027D  00D1               	movf	(0+(?___awmod)),w
  1992  027E  0879               	movwf	(main@c1)
  1993  027F  00D0               	line	251
  1994                           	
  1995                           l2414:	
  1996  0280                     ;ROK3ZAD2.c: 251:                 c2 = (temp1/100)%10;
  1997                           	movlw	0Ah
  1998  0280  300A               	movwf	(___awmod@divisor)
  1999  0281  00F9               	movlw	0
  2000  0282  3000               	movwf	((___awmod@divisor))+1
  2001  0283  00FA               	movlw	064h
  2002  0284  3064               	movwf	(___awdiv@divisor)
  2003  0285  00F0               	movlw	0
  2004  0286  3000               	movwf	((___awdiv@divisor))+1
  2005  0287  00F1               	movf	(main@temp1+1),w
  2006  0288  085D               	movwf	(___awdiv@dividend+1)
  2007  0289  00F3               	movf	(main@temp1),w
  2008  028A  085C               	movwf	(___awdiv@dividend)
  2009  028B  00F2               	fcall	___awdiv
  2010  028C  120A  158A  2420  120A  118A  	movf	(1+(?___awdiv)),w
  2011  0291  0871               	movwf	(___awmod@dividend+1)
  2012  0292  00FC               	movf	(0+(?___awdiv)),w
  2013  0293  0870               	movwf	(___awmod@dividend)
  2014  0294  00FB               	fcall	___awmod
  2015  0295  120A  158A  23BB  120A  118A  	movf	(1+(?___awmod)),w
  2016  029A  087A               	bcf	status, 5	;RP0=0, select bank0
  2017  029B  1283               	bcf	status, 6	;RP1=0, select bank0
  2018  029C  1303               	movwf	(main@c2+1)
  2019  029D  00D3               	movf	(0+(?___awmod)),w
  2020  029E  0879               	movwf	(main@c2)
  2021  029F  00D2               	line	252
  2022                           	
  2023                           l2416:	
  2024  02A0                     ;ROK3ZAD2.c: 252:                 c3 = (temp1/10)%10;
  2025                           	movlw	0Ah
  2026  02A0  300A               	movwf	(___awmod@divisor)
  2027  02A1  00F9               	movlw	0
  2028  02A2  3000               	movwf	((___awmod@divisor))+1
  2029  02A3  00FA               	movlw	0Ah
  2030  02A4  300A               	movwf	(___awdiv@divisor)
  2031  02A5  00F0               	movlw	0
  2032  02A6  3000               	movwf	((___awdiv@divisor))+1
  2033  02A7  00F1               	movf	(main@temp1+1),w
  2034  02A8  085D               	movwf	(___awdiv@dividend+1)
  2035  02A9  00F3               	movf	(main@temp1),w
  2036  02AA  085C               	movwf	(___awdiv@dividend)
  2037  02AB  00F2               	fcall	___awdiv
  2038  02AC  120A  158A  2420  120A  118A  	movf	(1+(?___awdiv)),w
  2039  02B1  0871               	movwf	(___awmod@dividend+1)
  2040  02B2  00FC               	movf	(0+(?___awdiv)),w
  2041  02B3  0870               	movwf	(___awmod@dividend)
  2042  02B4  00FB               	fcall	___awmod
  2043  02B5  120A  158A  23BB  120A  118A  	movf	(1+(?___awmod)),w
  2044  02BA  087A               	bcf	status, 5	;RP0=0, select bank0
  2045  02BB  1283               	bcf	status, 6	;RP1=0, select bank0
  2046  02BC  1303               	movwf	(main@c3+1)
  2047  02BD  00D5               	movf	(0+(?___awmod)),w
  2048  02BE  0879               	movwf	(main@c3)
  2049  02BF  00D4               	line	253
  2050                           	
  2051                           l2418:	
  2052  02C0                     ;ROK3ZAD2.c: 253:                 c4 = (temp1/1)%10;
  2053                           	movlw	0Ah
  2054  02C0  300A               	movwf	(___awmod@divisor)
  2055  02C1  00F9               	movlw	0
  2056  02C2  3000               	movwf	((___awmod@divisor))+1
  2057  02C3  00FA               	movf	(main@temp1+1),w
  2058  02C4  085D               	movwf	(___awmod@dividend+1)
  2059  02C5  00FC               	movf	(main@temp1),w
  2060  02C6  085C               	movwf	(___awmod@dividend)
  2061  02C7  00FB               	fcall	___awmod
  2062  02C8  120A  158A  23BB  120A  118A  	movf	(1+(?___awmod)),w
  2063  02CD  087A               	bcf	status, 5	;RP0=0, select bank0
  2064  02CE  1283               	bcf	status, 6	;RP1=0, select bank0
  2065  02CF  1303               	movwf	(main@c4+1)
  2066  02D0  00D7               	movf	(0+(?___awmod)),w
  2067  02D1  0879               	movwf	(main@c4)
  2068  02D2  00D6               	line	255
  2069                           	
  2070                           l2420:	
  2071  02D3                     ;ROK3ZAD2.c: 255:                 printf("\r\rTemperatura: ");
  2072                           	movlw	low(((STR_10)|8000h))
  2073  02D3  30BB               	movwf	(printf@f)
  2074  02D4  00A0               	movlw	high(((STR_10)|8000h))
  2075  02D5  3091               	movwf	((printf@f))+1
  2076  02D6  00A1               	fcall	_printf
  2077  02D7  120A  118A  2033  120A  118A  	line	256
  2078                           	
  2079                           l2422:	
  2080  02DC                     ;ROK3ZAD2.c: 256:                 printf("%i",c1);
  2081                           	movlw	low(((STR_11)|8000h))
  2082  02DC  30EF               	bcf	status, 5	;RP0=0, select bank0
  2083  02DD  1283               	bcf	status, 6	;RP1=0, select bank0
  2084  02DE  1303               	movwf	(printf@f)
  2085  02DF  00A0               	movlw	high(((STR_11)|8000h))
  2086  02E0  3091               	movwf	((printf@f))+1
  2087  02E1  00A1               	movf	(main@c1+1),w
  2088  02E2  0851               	movwf	1+(?_printf)+02h
  2089  02E3  00A3               	movf	(main@c1),w
  2090  02E4  0850               	movwf	0+(?_printf)+02h
  2091  02E5  00A2               	fcall	_printf
  2092  02E6  120A  118A  2033  120A  118A  	line	257
  2093                           	
  2094                           l2424:	
  2095  02EB                     ;ROK3ZAD2.c: 257:                 printf("%i",c2);
  2096                           	movlw	low(((STR_12)|8000h))
  2097  02EB  30EF               	bcf	status, 5	;RP0=0, select bank0
  2098  02EC  1283               	bcf	status, 6	;RP1=0, select bank0
  2099  02ED  1303               	movwf	(printf@f)
  2100  02EE  00A0               	movlw	high(((STR_12)|8000h))
  2101  02EF  3091               	movwf	((printf@f))+1
  2102  02F0  00A1               	movf	(main@c2+1),w
  2103  02F1  0853               	movwf	1+(?_printf)+02h
  2104  02F2  00A3               	movf	(main@c2),w
  2105  02F3  0852               	movwf	0+(?_printf)+02h
  2106  02F4  00A2               	fcall	_printf
  2107  02F5  120A  118A  2033  120A  118A  	line	258
  2108                           	
  2109                           l2426:	
  2110  02FA                     ;ROK3ZAD2.c: 258:                 printf(".");
  2111                           	movlw	low(((STR_13)|8000h))
  2112  02FA  30B9               	bcf	status, 5	;RP0=0, select bank0
  2113  02FB  1283               	bcf	status, 6	;RP1=0, select bank0
  2114  02FC  1303               	movwf	(printf@f)
  2115  02FD  00A0               	movlw	high(((STR_13)|8000h))
  2116  02FE  3091               	movwf	((printf@f))+1
  2117  02FF  00A1               	fcall	_printf
  2118  0300  120A  118A  2033  120A  118A  	line	259
  2119                           	
  2120                           l2428:	
  2121  0305                     ;ROK3ZAD2.c: 259:                 printf("%i",c3);
  2122                           	movlw	low(((STR_14)|8000h))
  2123  0305  30EF               	bcf	status, 5	;RP0=0, select bank0
  2124  0306  1283               	bcf	status, 6	;RP1=0, select bank0
  2125  0307  1303               	movwf	(printf@f)
  2126  0308  00A0               	movlw	high(((STR_14)|8000h))
  2127  0309  3091               	movwf	((printf@f))+1
  2128  030A  00A1               	movf	(main@c3+1),w
  2129  030B  0855               	movwf	1+(?_printf)+02h
  2130  030C  00A3               	movf	(main@c3),w
  2131  030D  0854               	movwf	0+(?_printf)+02h
  2132  030E  00A2               	fcall	_printf
  2133  030F  120A  118A  2033  120A  118A  	line	260
  2134                           	
  2135                           l2430:	
  2136  0314                     ;ROK3ZAD2.c: 260:                 printf("%i",c4);
  2137                           	movlw	low(((STR_15)|8000h))
  2138  0314  30EF               	bcf	status, 5	;RP0=0, select bank0
  2139  0315  1283               	bcf	status, 6	;RP1=0, select bank0
  2140  0316  1303               	movwf	(printf@f)
  2141  0317  00A0               	movlw	high(((STR_15)|8000h))
  2142  0318  3091               	movwf	((printf@f))+1
  2143  0319  00A1               	movf	(main@c4+1),w
  2144  031A  0857               	movwf	1+(?_printf)+02h
  2145  031B  00A3               	movf	(main@c4),w
  2146  031C  0856               	movwf	0+(?_printf)+02h
  2147  031D  00A2               	fcall	_printf
  2148  031E  120A  118A  2033  120A  118A  	line	261
  2149                           	
  2150                           l2432:	
  2151  0323                     ;ROK3ZAD2.c: 261:                 printf("\r\r");
  2152                           	movlw	low(((STR_16)|8000h))
  2153  0323  3086               	bcf	status, 5	;RP0=0, select bank0
  2154  0324  1283               	bcf	status, 6	;RP1=0, select bank0
  2155  0325  1303               	movwf	(printf@f)
  2156  0326  00A0               	movlw	high(((STR_16)|8000h))
  2157  0327  3091               	movwf	((printf@f))+1
  2158  0328  00A1               	fcall	_printf
  2159  0329  120A  118A  2033  120A  118A  	line	262
  2160                           	
  2161                           l2434:	
  2162  032E                     ;ROK3ZAD2.c: 262:                 Lcd_Clear();
  2163                           	fcall	_Lcd_Clear
  2164  032E  120A  158A  20F6  120A  118A  	line	263
  2165                           	
  2166                           l2436:	
  2167  0333                     ;ROK3ZAD2.c: 263:                 Lcd_Set_Cursor(1,3);
  2168                           	movlw	low(03h)
  2169  0333  3003               	bcf	status, 5	;RP0=0, select bank0
  2170  0334  1283               	bcf	status, 6	;RP1=0, select bank0
  2171  0335  1303               	movwf	(??_main+0)+0
  2172  0336  00C0               	movf	(??_main+0)+0,w
  2173  0337  0840               	movwf	(Lcd_Set_Cursor@b)
  2174  0338  00F4               	movlw	low(01h)
  2175  0339  3001               	fcall	_Lcd_Set_Cursor
  2176  033A  120A  158A  2309  120A  118A  	line	264
  2177                           	
  2178                           l2438:	
  2179  033F                     ;ROK3ZAD2.c: 264:                 Lcd_Write_String("Temperatura");
  2180                           	movlw	low(((STR_17)|8000h))
  2181  033F  30DB               	movwf	(Lcd_Write_String@a)
  2182  0340  00F5               	movlw	high(((STR_17)|8000h))
  2183  0341  3091               	movwf	((Lcd_Write_String@a))+1
  2184  0342  00F6               	fcall	_Lcd_Write_String
  2185  0343  120A  158A  227A  120A  118A  	line	265
  2186                           	
  2187                           l2440:	
  2188  0348                     ;ROK3ZAD2.c: 265:                 Lcd_Set_Cursor(2,5);
  2189                           	movlw	low(05h)
  2190  0348  3005               	bcf	status, 5	;RP0=0, select bank0
  2191  0349  1283               	bcf	status, 6	;RP1=0, select bank0
  2192  034A  1303               	movwf	(??_main+0)+0
  2193  034B  00C0               	movf	(??_main+0)+0,w
  2194  034C  0840               	movwf	(Lcd_Set_Cursor@b)
  2195  034D  00F4               	movlw	low(02h)
  2196  034E  3002               	fcall	_Lcd_Set_Cursor
  2197  034F  120A  158A  2309  120A  118A  	line	266
  2198                           	
  2199                           l2442:	
  2200  0354                     ;ROK3ZAD2.c: 266:                 Lcd_Write_Char(c1+'0');
  2201                           	bcf	status, 5	;RP0=0, select bank0
  2202  0354  1283               	bcf	status, 6	;RP1=0, select bank0
  2203  0355  1303               	movf	(main@c1),w
  2204  0356  0850               	addlw	030h
  2205  0357  3E30               	fcall	_Lcd_Write_Char
  2206  0358  120A  158A  2200  120A  118A  	line	267
  2207                           	
  2208                           l2444:	
  2209  035D                     ;ROK3ZAD2.c: 267:                 Lcd_Write_Char(c2+'0');
  2210                           	bcf	status, 5	;RP0=0, select bank0
  2211  035D  1283               	bcf	status, 6	;RP1=0, select bank0
  2212  035E  1303               	movf	(main@c2),w
  2213  035F  0852               	addlw	030h
  2214  0360  3E30               	fcall	_Lcd_Write_Char
  2215  0361  120A  158A  2200  120A  118A  	line	268
  2216                           	
  2217                           l2446:	
  2218  0366                     ;ROK3ZAD2.c: 268:                 Lcd_Write_String(".");
  2219                           	movlw	low(((STR_18)|8000h))
  2220  0366  30B9               	movwf	(Lcd_Write_String@a)
  2221  0367  00F5               	movlw	high(((STR_18)|8000h))
  2222  0368  3091               	movwf	((Lcd_Write_String@a))+1
  2223  0369  00F6               	fcall	_Lcd_Write_String
  2224  036A  120A  158A  227A  120A  118A  	line	269
  2225                           	
  2226                           l2448:	
  2227  036F                     ;ROK3ZAD2.c: 269:                 Lcd_Write_Char(c3+'0');
  2228                           	bcf	status, 5	;RP0=0, select bank0
  2229  036F  1283               	bcf	status, 6	;RP1=0, select bank0
  2230  0370  1303               	movf	(main@c3),w
  2231  0371  0854               	addlw	030h
  2232  0372  3E30               	fcall	_Lcd_Write_Char
  2233  0373  120A  158A  2200  120A  118A  	line	270
  2234                           	
  2235                           l2450:	
  2236  0378                     ;ROK3ZAD2.c: 270:                 Lcd_Write_Char(c4+'0');
  2237                           	bcf	status, 5	;RP0=0, select bank0
  2238  0378  1283               	bcf	status, 6	;RP1=0, select bank0
  2239  0379  1303               	movf	(main@c4),w
  2240  037A  0856               	addlw	030h
  2241  037B  3E30               	fcall	_Lcd_Write_Char
  2242  037C  120A  158A  2200  120A  118A  	line	271
  2243                           	
  2244                           l2452:	
  2245  0381                     ;ROK3ZAD2.c: 271:                 Lcd_Write_Char(0xDF);
  2246                           	movlw	low(0DFh)
  2247  0381  30DF               	fcall	_Lcd_Write_Char
  2248  0382  120A  158A  2200  120A  118A  	line	272
  2249                           	
  2250                           l2454:	
  2251  0387                     ;ROK3ZAD2.c: 272:                 Lcd_Write_String("C");
  2252                           	movlw	low(((STR_19)|8000h))
  2253  0387  30F2               	movwf	(Lcd_Write_String@a)
  2254  0388  00F5               	movlw	high(((STR_19)|8000h))
  2255  0389  3091               	movwf	((Lcd_Write_String@a))+1
  2256  038A  00F6               	fcall	_Lcd_Write_String
  2257  038B  120A  158A  227A  120A  118A  	line	273
  2258                           	
  2259                           l2456:	
  2260  0390                     ;ROK3ZAD2.c: 273:                 _delay((unsigned long)((3000)*(20000000/4000.0)));
  2261                           	opt asmopt_push
  2262                           opt asmopt_off
  2263                           movlw  77
  2264  0390  304D               	bcf	status, 5	;RP0=0, select bank0
  2265  0391  1283               	bcf	status, 6	;RP1=0, select bank0
  2266  0392  1303               movwf	((??_main+0)+0+2),f
  2267  0393  00C2               movlw	25
  2268  0394  3019               movwf	((??_main+0)+0+1),f
  2269  0395  00C1               	movlw	79
  2270  0396  304F               movwf	((??_main+0)+0),f
  2271  0397  00C0               	u3197:
  2272  0398                     decfsz	((??_main+0)+0),f
  2273  0398  0BC0               	goto	u3197
  2274  0399  2B98               	decfsz	((??_main+0)+0+1),f
  2275  039A  0BC1               	goto	u3197
  2276  039B  2B98               	decfsz	((??_main+0)+0+2),f
  2277  039C  0BC2               	goto	u3197
  2278  039D  2B98               opt asmopt_pop
  2279                           
  2280                           	line	274
  2281                           	
  2282                           l2458:	
  2283  039E                     ;ROK3ZAD2.c: 274:                 Lcd_Clear();
  2284                           	fcall	_Lcd_Clear
  2285  039E  120A  158A  20F6  120A  118A  	line	275
  2286                           ;ROK3ZAD2.c: 275:                 break;
  2287                           	goto	l2506
  2288  03A3  2C7B               	line	276
  2289                           ;ROK3ZAD2.c: 276:             case '2':
  2290                           	
  2291                           l157:	
  2292  03A4                     	line	279
  2293                           ;ROK3ZAD2.c: 279:                 break;
  2294                           	goto	l2506
  2295  03A4  2C7B               	line	280
  2296                           ;ROK3ZAD2.c: 280:             case '3':
  2297                           	
  2298                           l158:	
  2299  03A5                     	line	281
  2300                           	
  2301                           l2460:	
  2302  03A5                     ;ROK3ZAD2.c: 281:                 printf("\rIzabrali ste opciju 3.\r\r");
  2303                           	movlw	low(((STR_20)|8000h))
  2304  03A5  306F               	bcf	status, 5	;RP0=0, select bank0
  2305  03A6  1283               	bcf	status, 6	;RP1=0, select bank0
  2306  03A7  1303               	movwf	(printf@f)
  2307  03A8  00A0               	movlw	high(((STR_20)|8000h))
  2308  03A9  3091               	movwf	((printf@f))+1
  2309  03AA  00A1               	fcall	_printf
  2310  03AB  120A  118A  2033  120A  118A  	line	282
  2311                           	
  2312                           l2462:	
  2313  03B0                     ;ROK3ZAD2.c: 282:                 Lcd_Set_Cursor(1,1);
  2314                           	clrf	(Lcd_Set_Cursor@b)
  2315  03B0  01F4               	incf	(Lcd_Set_Cursor@b),f
  2316  03B1  0AF4               	movlw	low(01h)
  2317  03B2  3001               	fcall	_Lcd_Set_Cursor
  2318  03B3  120A  158A  2309  120A  118A  	line	283
  2319                           	
  2320                           l2464:	
  2321  03B8                     ;ROK3ZAD2.c: 283:                 Lcd_Write_String("Ovo je opcija 3");
  2322                           	movlw	low(((STR_21)|8000h))
  2323  03B8  30CB               	movwf	(Lcd_Write_String@a)
  2324  03B9  00F5               	movlw	high(((STR_21)|8000h))
  2325  03BA  3091               	movwf	((Lcd_Write_String@a))+1
  2326  03BB  00F6               	fcall	_Lcd_Write_String
  2327  03BC  120A  158A  227A  120A  118A  	line	284
  2328                           ;ROK3ZAD2.c: 284:                 Lcd_Set_Cursor(2,1);
  2329                           	clrf	(Lcd_Set_Cursor@b)
  2330  03C1  01F4               	incf	(Lcd_Set_Cursor@b),f
  2331  03C2  0AF4               	movlw	low(02h)
  2332  03C3  3002               	fcall	_Lcd_Set_Cursor
  2333  03C4  120A  158A  2309  120A  118A  	line	285
  2334                           	
  2335                           l2466:	
  2336  03C9                     ;ROK3ZAD2.c: 285:                 Lcd_Write_String("na virtualnom terminalu!");
  2337                           	movlw	low(((STR_22)|8000h))
  2338  03C9  3089               	movwf	(Lcd_Write_String@a)
  2339  03CA  00F5               	movlw	high(((STR_22)|8000h))
  2340  03CB  3091               	movwf	((Lcd_Write_String@a))+1
  2341  03CC  00F6               	fcall	_Lcd_Write_String
  2342  03CD  120A  158A  227A  120A  118A  	line	286
  2343                           	
  2344                           l2468:	
  2345  03D2                     ;ROK3ZAD2.c: 286:                 _delay((unsigned long)((2000)*(20000000/4000.0)));
  2346                           	opt asmopt_push
  2347                           opt asmopt_off
  2348                           movlw  51
  2349  03D2  3033               	bcf	status, 5	;RP0=0, select bank0
  2350  03D3  1283               	bcf	status, 6	;RP1=0, select bank0
  2351  03D4  1303               movwf	((??_main+0)+0+2),f
  2352  03D5  00C2               movlw	187
  2353  03D6  30BB               movwf	((??_main+0)+0+1),f
  2354  03D7  00C1               	movlw	223
  2355  03D8  30DF               movwf	((??_main+0)+0),f
  2356  03D9  00C0               	u3207:
  2357  03DA                     decfsz	((??_main+0)+0),f
  2358  03DA  0BC0               	goto	u3207
  2359  03DB  2BDA               	decfsz	((??_main+0)+0+1),f
  2360  03DC  0BC1               	goto	u3207
  2361  03DD  2BDA               	decfsz	((??_main+0)+0+2),f
  2362  03DE  0BC2               	goto	u3207
  2363  03DF  2BDA               opt asmopt_pop
  2364                           
  2365                           	line	287
  2366                           	
  2367                           l2470:	
  2368  03E0                     ;ROK3ZAD2.c: 287:                 Lcd_Clear();
  2369                           	fcall	_Lcd_Clear
  2370  03E0  120A  158A  20F6  120A  118A  	line	289
  2371                           ;ROK3ZAD2.c: 289:                 break;
  2372                           	goto	l2506
  2373  03E5  2C7B               	line	290
  2374                           ;ROK3ZAD2.c: 290:             case '4':
  2375                           	
  2376                           l159:	
  2377  03E6                     	line	291
  2378                           	
  2379                           l2472:	
  2380  03E6                     ;ROK3ZAD2.c: 291:                 Lcd_Set_Cursor(1,1);
  2381                           	clrf	(Lcd_Set_Cursor@b)
  2382  03E6  01F4               	incf	(Lcd_Set_Cursor@b),f
  2383  03E7  0AF4               	movlw	low(01h)
  2384  03E8  3001               	fcall	_Lcd_Set_Cursor
  2385  03E9  120A  158A  2309  120A  118A  	line	292
  2386                           	
  2387                           l2474:	
  2388  03EE                     ;ROK3ZAD2.c: 292:                 Lcd_Write_String("Rotiranje servomotora u jednu,");
  2389                           	movlw	low(((STR_23)|8000h))
  2390  03EE  3050               	movwf	(Lcd_Write_String@a)
  2391  03EF  00F5               	movlw	high(((STR_23)|8000h))
  2392  03F0  3091               	movwf	((Lcd_Write_String@a))+1
  2393  03F1  00F6               	fcall	_Lcd_Write_String
  2394  03F2  120A  158A  227A  120A  118A  	line	293
  2395                           	
  2396                           l2476:	
  2397  03F7                     ;ROK3ZAD2.c: 293:                 Lcd_Set_Cursor(2,1);
  2398                           	clrf	(Lcd_Set_Cursor@b)
  2399  03F7  01F4               	incf	(Lcd_Set_Cursor@b),f
  2400  03F8  0AF4               	movlw	low(02h)
  2401  03F9  3002               	fcall	_Lcd_Set_Cursor
  2402  03FA  120A  158A  2309  120A  118A  	line	294
  2403                           ;ROK3ZAD2.c: 294:                 Lcd_Write_String("a zatim u drugu stranu 3 puta!");
  2404                           	movlw	low(((STR_24)|8000h))
  2405  03FF  3031               	movwf	(Lcd_Write_String@a)
  2406  0400  00F5               	movlw	high(((STR_24)|8000h))
  2407  0401  3091               	movwf	((Lcd_Write_String@a))+1
  2408  0402  00F6               	fcall	_Lcd_Write_String
  2409  0403  120A  158A  227A  120A  118A  	line	295
  2410                           	
  2411                           l2478:	
  2412  0408                     ;ROK3ZAD2.c: 295:                 for(int i=0;i<3;i++) {
  2413                           	bcf	status, 5	;RP0=0, select bank0
  2414  0408  1283               	bcf	status, 6	;RP1=0, select bank0
  2415  0409  1303               	clrf	(main@i)
  2416  040A  01D8               	clrf	(main@i+1)
  2417  040B  01D9               	
  2418                           l2480:	
  2419  040C                     	movf	(main@i+1),w
  2420  040C  0859               	xorlw	80h
  2421  040D  3A80               	movwf	btemp+1
  2422  040E  00FF               	movlw	(0)^80h
  2423  040F  3080               	subwf	btemp+1,w
  2424  0410  027F               	skipz
  2425  0411  1D03               	goto	u3165
  2426  0412  2C15               	movlw	03h
  2427  0413  3003               	subwf	(main@i),w
  2428  0414  0258               u3165:
  2429  0415                     
  2430                           	skipc
  2431  0415  1C03               	goto	u3161
  2432  0416  2C18               	goto	u3160
  2433  0417  2C19               u3161:
  2434  0418                     	goto	l2484
  2435  0418  2C1B               u3160:
  2436  0419                     	goto	l2500
  2437  0419  2C5F               	
  2438                           l2482:	
  2439  041A                     	goto	l2500
  2440  041A  2C5F               	
  2441                           l160:	
  2442  041B                     	line	296
  2443                           	
  2444                           l2484:	
  2445  041B                     ;ROK3ZAD2.c: 296:                 ServoRotiraj0();
  2446                           	fcall	_ServoRotiraj0
  2447  041B  120A  158A  2194  120A  118A  	line	297
  2448                           	
  2449                           l2486:	
  2450  0420                     ;ROK3ZAD2.c: 297:                 RB1=1;
  2451                           	bcf	status, 5	;RP0=0, select bank0
  2452  0420  1283               	bcf	status, 6	;RP1=0, select bank0
  2453  0421  1303               	bsf	(49/8),(49)&7	;volatile
  2454  0422  1486               	line	298
  2455                           	
  2456                           l2488:	
  2457  0423                     ;ROK3ZAD2.c: 298:                 RB2=0;
  2458                           	bcf	(50/8),(50)&7	;volatile
  2459  0423  1106               	line	299
  2460                           	
  2461                           l2490:	
  2462  0424                     ;ROK3ZAD2.c: 299:                 _delay((unsigned long)((150)*(20000000/4000.0)));
  2463                           	opt asmopt_push
  2464                           opt asmopt_off
  2465                           movlw  4
  2466  0424  3004               	bcf	status, 5	;RP0=0, select bank0
  2467  0425  1283               	bcf	status, 6	;RP1=0, select bank0
  2468  0426  1303               movwf	((??_main+0)+0+2),f
  2469  0427  00C2               movlw	207
  2470  0428  30CF               movwf	((??_main+0)+0+1),f
  2471  0429  00C1               	movlw	1
  2472  042A  3001               movwf	((??_main+0)+0),f
  2473  042B  00C0               	u3217:
  2474  042C                     decfsz	((??_main+0)+0),f
  2475  042C  0BC0               	goto	u3217
  2476  042D  2C2C               	decfsz	((??_main+0)+0+1),f
  2477  042E  0BC1               	goto	u3217
  2478  042F  2C2C               	decfsz	((??_main+0)+0+2),f
  2479  0430  0BC2               	goto	u3217
  2480  0431  2C2C               opt asmopt_pop
  2481                           
  2482                           	line	300
  2483                           	
  2484                           l2492:	
  2485  0432                     ;ROK3ZAD2.c: 300:                 ServoRotiraj180();
  2486                           	fcall	_ServoRotiraj180
  2487  0432  120A  158A  21CA  120A  118A  	line	301
  2488                           	
  2489                           l2494:	
  2490  0437                     ;ROK3ZAD2.c: 301:                 RB2=1;
  2491                           	bcf	status, 5	;RP0=0, select bank0
  2492  0437  1283               	bcf	status, 6	;RP1=0, select bank0
  2493  0438  1303               	bsf	(50/8),(50)&7	;volatile
  2494  0439  1506               	line	302
  2495                           	
  2496                           l2496:	
  2497  043A                     ;ROK3ZAD2.c: 302:                 RB1=0;
  2498                           	bcf	(49/8),(49)&7	;volatile
  2499  043A  1086               	line	303
  2500                           ;ROK3ZAD2.c: 303:                 _delay((unsigned long)((150)*(20000000/4000.0)));
  2501                           	opt asmopt_push
  2502                           opt asmopt_off
  2503                           movlw  4
  2504  043B  3004               	bcf	status, 5	;RP0=0, select bank0
  2505  043C  1283               	bcf	status, 6	;RP1=0, select bank0
  2506  043D  1303               movwf	((??_main+0)+0+2),f
  2507  043E  00C2               movlw	207
  2508  043F  30CF               movwf	((??_main+0)+0+1),f
  2509  0440  00C1               	movlw	1
  2510  0441  3001               movwf	((??_main+0)+0),f
  2511  0442  00C0               	u3227:
  2512  0443                     decfsz	((??_main+0)+0),f
  2513  0443  0BC0               	goto	u3227
  2514  0444  2C43               	decfsz	((??_main+0)+0+1),f
  2515  0445  0BC1               	goto	u3227
  2516  0446  2C43               	decfsz	((??_main+0)+0+2),f
  2517  0447  0BC2               	goto	u3227
  2518  0448  2C43               opt asmopt_pop
  2519                           
  2520                           	line	304
  2521                           ;ROK3ZAD2.c: 304:                 }
  2522                           	movlw	01h
  2523  0449  3001               	bcf	status, 5	;RP0=0, select bank0
  2524  044A  1283               	bcf	status, 6	;RP1=0, select bank0
  2525  044B  1303               	addwf	(main@i),f
  2526  044C  07D8               	skipnc
  2527  044D  1803               	incf	(main@i+1),f
  2528  044E  0AD9               	movlw	0
  2529  044F  3000               	addwf	(main@i+1),f
  2530  0450  07D9               	
  2531                           l2498:	
  2532  0451                     	movf	(main@i+1),w
  2533  0451  0859               	xorlw	80h
  2534  0452  3A80               	movwf	btemp+1
  2535  0453  00FF               	movlw	(0)^80h
  2536  0454  3080               	subwf	btemp+1,w
  2537  0455  027F               	skipz
  2538  0456  1D03               	goto	u3175
  2539  0457  2C5A               	movlw	03h
  2540  0458  3003               	subwf	(main@i),w
  2541  0459  0258               u3175:
  2542  045A                     
  2543                           	skipc
  2544  045A  1C03               	goto	u3171
  2545  045B  2C5D               	goto	u3170
  2546  045C  2C5E               u3171:
  2547  045D                     	goto	l2484
  2548  045D  2C1B               u3170:
  2549  045E                     	goto	l2500
  2550  045E  2C5F               	
  2551                           l161:	
  2552  045F                     	line	305
  2553                           	
  2554                           l2500:	
  2555  045F                     ;ROK3ZAD2.c: 305:                 Lcd_Clear();
  2556                           	fcall	_Lcd_Clear
  2557  045F  120A  158A  20F6  120A  118A  	line	306
  2558                           ;ROK3ZAD2.c: 306:                 break;
  2559                           	goto	l2506
  2560  0464  2C7B               	line	307
  2561                           	
  2562                           l2502:	
  2563  0465                     ;ROK3ZAD2.c: 307:         }
  2564                           	goto	l2506
  2565  0465  2C7B               	
  2566                           l154:	
  2567  0466                     	
  2568                           l2504:	
  2569  0466                     	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  2570                           ; Switch size 1, requested type "space"
  2571                           ; Number of cases is 1, Range of values is 0 to 0
  2572                           ; switch strategies available:
  2573                           ; Name         Instructions Cycles
  2574                           ; simple_byte            4     3 (average)
  2575                           ; direct_byte           11     8 (fixed)
  2576                           ; jumptable            260     6 (fixed)
  2577                           ;	Chosen strategy is simple_byte
  2578                           
  2579                           	bcf	status, 5	;RP0=0, select bank0
  2580  0466  1283               	bcf	status, 6	;RP1=0, select bank0
  2581  0467  1303               	movf (main@opcija+1),w
  2582  0468  085B               	opt asmopt_push
  2583                           	opt asmopt_off
  2584                           	xorlw	0^0	; case 0
  2585  0469  3A00               	skipnz
  2586  046A  1903               	goto	l2564
  2587  046B  2C6D               	goto	l2506
  2588  046C  2C7B               	opt asmopt_pop
  2589                           	
  2590                           l2564:	
  2591  046D                     ; Switch size 1, requested type "space"
  2592                           ; Number of cases is 4, Range of values is 49 to 52
  2593                           ; switch strategies available:
  2594                           ; Name         Instructions Cycles
  2595                           ; simple_byte           13     7 (average)
  2596                           ; direct_byte           23    11 (fixed)
  2597                           ; jumptable            263     9 (fixed)
  2598                           ;	Chosen strategy is simple_byte
  2599                           
  2600                           	movf (main@opcija),w
  2601  046D  085A               	opt asmopt_push
  2602                           	opt asmopt_off
  2603                           	xorlw	49^0	; case 49
  2604  046E  3A31               	skipnz
  2605  046F  1903               	goto	l2402
  2606  0470  29C7               	xorlw	50^49	; case 50
  2607  0471  3A03               	skipnz
  2608  0472  1903               	goto	l2506
  2609  0473  2C7B               	xorlw	51^50	; case 51
  2610  0474  3A01               	skipnz
  2611  0475  1903               	goto	l2460
  2612  0476  2BA5               	xorlw	52^51	; case 52
  2613  0477  3A07               	skipnz
  2614  0478  1903               	goto	l2472
  2615  0479  2BE6               	goto	l2506
  2616  047A  2C7B               	opt asmopt_pop
  2617                           
  2618                           	
  2619                           l156:	
  2620  047B                     	line	308
  2621                           	
  2622                           l2506:	
  2623  047B                     ;ROK3ZAD2.c: 308:     }
  2624                           	bcf	status, 5	;RP0=0, select bank0
  2625  047B  1283               	bcf	status, 6	;RP1=0, select bank0
  2626  047C  1303               	movf	((main@opcija)),w
  2627  047D  085A               iorwf	((main@opcija+1)),w
  2628  047E  045B               	btfss	status,2
  2629  047F  1D03               	goto	u3181
  2630  0480  2C82               	goto	u3180
  2631  0481  2C83               u3181:
  2632  0482                     	goto	l2382
  2633  0482  295B               u3180:
  2634  0483                     	goto	l163
  2635  0483  2C84               	
  2636                           l162:	
  2637  0484                     	line	310
  2638                           	
  2639                           l163:	
  2640  0484                     	global	start
  2641                           	ljmp	start
  2642  0484  120A  118A  2800   	opt stack 0
  2643                           GLOBAL	__end_of_main
  2644                           	__end_of_main:
  2645  0487                     	signat	_main,89
  2646                           	global	_printf
  2647                           
  2648 ;; *************** function _printf *****************
  2649 ;; Defined at:
  2650 ;;		line 472 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
  2651 ;; Parameters:    Size  Location     Type
  2652 ;;  f               2    0[BANK0 ] PTR const unsigned char 
  2653 ;;		 -> STR_20(26), STR_16(3), STR_15(3), STR_14(3), 
  2654 ;;		 -> STR_13(2), STR_12(3), STR_11(3), STR_10(16), 
  2655 ;;		 -> STR_9(25), STR_8(8), STR_7(45), STR_6(8), 
  2656 ;;		 -> STR_5(53), STR_4(40), STR_3(34), STR_2(37), 
  2657 ;;		 -> STR_1(68), 
  2658 ;; Auto vars:     Size  Location     Type
  2659 ;;  tmpval          4    0        struct .
  2660 ;;  val             2   11[BANK0 ] unsigned int 
  2661 ;;  cp              2    0        PTR const unsigned char 
  2662 ;;  len             2    0        unsigned int 
  2663 ;;  c               1   13[BANK0 ] unsigned char 
  2664 ;;  prec            1   10[BANK0 ] char 
  2665 ;;  flag            1    9[BANK0 ] unsigned char 
  2666 ;;  ap              1    8[BANK0 ] PTR void [1]
  2667 ;;		 -> ?_printf(2), 
  2668 ;; Return value:  Size  Location     Type
  2669 ;;                  2    0[BANK0 ] int 
  2670 ;; Registers used:
  2671 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2672 ;; Tracked objects:
  2673 ;;		On entry : 0/0
  2674 ;;		On exit  : 0/0
  2675 ;;		Unchanged: 0/0
  2676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2677 ;;      Params:         0       4       0       0       0
  2678 ;;      Locals:         0       6       0       0       0
  2679 ;;      Temps:          0       4       0       0       0
  2680 ;;      Totals:         0      14       0       0       0
  2681 ;;Total ram usage:       14 bytes
  2682 ;; Hardware stack levels used:    1
  2683 ;; Hardware stack levels required when called:    2
  2684 ;; This function calls:
  2685 ;;		___lwdiv
  2686 ;;		___lwmod
  2687 ;;		_putch
  2688 ;; This function is called by:
  2689 ;;		_main
  2690 ;; This function uses a non-reentrant model
  2691 ;;
  2692                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  2693                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
  2694                           	line	472
  2695                           global __ptext1
  2696                           __ptext1:	;psect for function _printf
  2697  0033                     psect	text1
  2698                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
  2699                           	line	472
  2700                           	global	__size_of_printf
  2701                           	__size_of_printf	equ	__end_of_printf-_printf
  2702  0107                     	
  2703                           _printf:	
  2704  0033                     ;incstack = 0
  2705                           	opt	stack 5
  2706                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2707                           	line	545
  2708                           	
  2709                           l1876:	
  2710  0033                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 472: printf
                                 (const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\
                                 doprnt.c: 473: {;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprn
                                 t.c: 474:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common
                                 \doprnt.c: 507:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\comm
                                 on\doprnt.c: 516:  signed char prec;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sour
                                 ces\c90\common\doprnt.c: 520:  unsigned char flag;
  2711                           	movlw	(low(?_printf|((0x0)<<8)+02h))&0ffh
  2712  0033  3022               	bcf	status, 5	;RP0=0, select bank0
  2713  0034  1283               	bcf	status, 6	;RP1=0, select bank0
  2714  0035  1303               	movwf	(??_printf+0)+0
  2715  0036  00A4               	movf	(??_printf+0)+0,w
  2716  0037  0824               	movwf	(printf@ap)
  2717  0038  00A8               	line	548
  2718                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 548:  while
                                 ((c = *f++)) {
  2719                           	goto	l1922
  2720  0039  291D               	
  2721                           l257:	
  2722  003A                     	line	550
  2723                           	
  2724                           l1878:	
  2725  003A                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 550:   if(c
                                  != '%')
  2726                           		movlw	37
  2727  003A  3025               	xorwf	((printf@c)),w
  2728  003B  062D               	btfsc	status,2
  2729  003C  1903               	goto	u1981
  2730  003D  283F               	goto	u1980
  2731  003E  2840               u1981:
  2732  003F                     	goto	l1882
  2733  003F  2847               u1980:
  2734  0040                     	line	553
  2735                           	
  2736                           l1880:	
  2737  0040                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 552:   {;C:
                                 \Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 553:    (putch
                                 (c) );
  2738                           	movf	(printf@c),w
  2739  0040  082D               	fcall	_putch
  2740  0041  120A  158A  20D9  120A  118A  	line	554
  2741                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 554:    con
                                 tinue;
  2742                           	goto	l1922
  2743  0046  291D               	line	555
  2744                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 555:   }
  2745                           	
  2746                           l258:	
  2747  0047                     	line	560
  2748                           	
  2749                           l1882:	
  2750  0047                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 560:   flag
                                  = 0;
  2751                           	bcf	status, 5	;RP0=0, select bank0
  2752  0047  1283               	bcf	status, 6	;RP1=0, select bank0
  2753  0048  1303               	clrf	(printf@flag)
  2754  0049  01A9               	line	654
  2755                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 654:   swit
                                 ch(c = *f++) {
  2756                           	goto	l1886
  2757  004A  2850               	line	656
  2758                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 656:   case
                                  0:
  2759                           	
  2760                           l260:	
  2761  004B                     	line	657
  2762                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 657:    got
                                 o alldone;
  2763                           	goto	l275
  2764  004B  2939               	line	716
  2765                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 716:   case
                                  'd':
  2766                           	
  2767                           l262:	
  2768  004C                     	goto	l1888
  2769  004C  2873               	line	717
  2770                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 717:   case
                                  'i':
  2771                           	
  2772                           l263:	
  2773  004D                     	line	718
  2774                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 718:    bre
                                 ak;
  2775                           	goto	l1888
  2776  004D  2873               	line	821
  2777                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 821:   defa
                                 ult:
  2778                           	
  2779                           l265:	
  2780  004E                     	line	832
  2781                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 832:    con
                                 tinue;
  2782                           	goto	l1922
  2783  004E  291D               	line	841
  2784                           	
  2785                           l1884:	
  2786  004F                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 841:   }
  2787                           	goto	l1888
  2788  004F  2873               	
  2789                           l259:	
  2790  0050                     	
  2791                           l1886:	
  2792  0050                     	movf	(printf@f+1),w
  2793  0050  0821               	movwf	(??_printf+0)+0+1
  2794  0051  00A5               	movf	(printf@f),w
  2795  0052  0820               	movwf	(??_printf+0)+0
  2796  0053  00A4               	incf	(printf@f),f
  2797  0054  0AA0               	skipnz
  2798  0055  1903               	incf	(printf@f+1),f
  2799  0056  0AA1               	movf	1+(??_printf+0)+0,w
  2800  0057  0825               	movwf	btemp+1
  2801  0058  00FF               	movf	0+(??_printf+0)+0,w
  2802  0059  0824               	movwf	fsr0
  2803  005A  0084               	fcall	stringtab
  2804  005B  160A  118A  2000  120A  118A  	movwf	(printf@c)
  2805  0060  00AD               	movwf	(??_printf+2)+0
  2806  0061  00A6               	clrf	(??_printf+2)+0+1
  2807  0062  01A7               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  2808                           ; Switch size 1, requested type "space"
  2809                           ; Number of cases is 1, Range of values is 0 to 0
  2810                           ; switch strategies available:
  2811                           ; Name         Instructions Cycles
  2812                           ; simple_byte            4     3 (average)
  2813                           ; direct_byte           11     8 (fixed)
  2814                           ; jumptable            260     6 (fixed)
  2815                           ;	Chosen strategy is simple_byte
  2816                           
  2817                           	movf 1+(??_printf+2)+0,w
  2818  0063  0827               	opt asmopt_push
  2819                           	opt asmopt_off
  2820                           	xorlw	0^0	; case 0
  2821  0064  3A00               	skipnz
  2822  0065  1903               	goto	l2566
  2823  0066  2868               	goto	l1922
  2824  0067  291D               	opt asmopt_pop
  2825                           	
  2826                           l2566:	
  2827  0068                     ; Switch size 1, requested type "space"
  2828                           ; Number of cases is 3, Range of values is 0 to 105
  2829                           ; switch strategies available:
  2830                           ; Name         Instructions Cycles
  2831                           ; simple_byte           10     6 (average)
  2832                           ; jumptable            260     6 (fixed)
  2833                           ;	Chosen strategy is simple_byte
  2834                           
  2835                           	movf 0+(??_printf+2)+0,w
  2836  0068  0826               	opt asmopt_push
  2837                           	opt asmopt_off
  2838                           	xorlw	0^0	; case 0
  2839  0069  3A00               	skipnz
  2840  006A  1903               	goto	l275
  2841  006B  2939               	xorlw	100^0	; case 100
  2842  006C  3A64               	skipnz
  2843  006D  1903               	goto	l1888
  2844  006E  2873               	xorlw	105^100	; case 105
  2845  006F  3A0D               	skipnz
  2846  0070  1903               	goto	l1888
  2847  0071  2873               	goto	l1922
  2848  0072  291D               	opt asmopt_pop
  2849                           
  2850                           	
  2851                           l264:	
  2852  0073                     	line	1278
  2853                           	
  2854                           l1888:	
  2855  0073                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1272:   {;C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1278:     val
                                  = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2856                           	movf	(printf@ap),w
  2857  0073  0828               	movwf	fsr0
  2858  0074  0084               	bcf	status, 7	;select IRP bank0
  2859  0075  1383               	movf	indf,w
  2860  0076  0800               	movwf	(printf@val)
  2861  0077  00AB               	incf	fsr0,f
  2862  0078  0A84               	movf	indf,w
  2863  0079  0800               	movwf	(printf@val+1)
  2864  007A  00AC               	
  2865                           l1890:	
  2866  007B                     	movlw	low(02h)
  2867  007B  3002               	movwf	(??_printf+0)+0
  2868  007C  00A4               	movf	(??_printf+0)+0,w
  2869  007D  0824               	addwf	(printf@ap),f
  2870  007E  07A8               	line	1280
  2871                           	
  2872                           l1892:	
  2873  007F                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1280:    if
                                 ((int)val < 0) {
  2874                           	btfss	(printf@val+1),7
  2875  007F  1FAC               	goto	u1991
  2876  0080  2882               	goto	u1990
  2877  0081  2883               u1991:
  2878  0082                     	goto	l1898
  2879  0082  288D               u1990:
  2880  0083                     	line	1281
  2881                           	
  2882                           l1894:	
  2883  0083                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1281:     f
                                 lag |= 0x03;
  2884                           	movlw	low(03h)
  2885  0083  3003               	movwf	(??_printf+0)+0
  2886  0084  00A4               	movf	(??_printf+0)+0,w
  2887  0085  0824               	iorwf	(printf@flag),f
  2888  0086  04A9               	line	1282
  2889                           	
  2890                           l1896:	
  2891  0087                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1282:     v
                                 al = -val;
  2892                           	comf	(printf@val),f
  2893  0087  09AB               	comf	(printf@val+1),f
  2894  0088  09AC               	incf	(printf@val),f
  2895  0089  0AAB               	skipnz
  2896  008A  1903               	incf	(printf@val+1),f
  2897  008B  0AAC               	goto	l1898
  2898  008C  288D               	line	1283
  2899                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1283:    }

  2900                           	
  2901                           l266:	
  2902  008D                     	line	1324
  2903                           	
  2904                           l1898:	
  2905  008D                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1285:   };C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1324:    for(
                                 c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2906                           	clrf	(printf@c)
  2907  008D  01AD               	incf	(printf@c),f
  2908  008E  0AAD               	
  2909                           l1900:	
  2910  008F                     		movlw	5
  2911  008F  3005               	xorwf	((printf@c)),w
  2912  0090  062D               	btfss	status,2
  2913  0091  1D03               	goto	u2001
  2914  0092  2894               	goto	u2000
  2915  0093  2895               u2001:
  2916  0094                     	goto	l1904
  2917  0094  2897               u2000:
  2918  0095                     	goto	l1910
  2919  0095  28C3               	
  2920                           l1902:	
  2921  0096                     	goto	l1910
  2922  0096  28C3               	
  2923                           l267:	
  2924  0097                     	line	1325
  2925                           	
  2926                           l1904:	
  2927  0097                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1325:     i
                                 f(val < dpowers[c])
  2928                           	movf	(printf@c),w
  2929  0097  082D               	movwf	(??_printf+0)+0
  2930  0098  00A4               	addwf	(??_printf+0)+0,w
  2931  0099  0724               	addlw	low(((_dpowers)|8000h))
  2932  009A  3E12               	movwf	fsr0
  2933  009B  0084               	movlw	high(((_dpowers)|8000h))
  2934  009C  3090               	skipnc
  2935  009D  1803               	addlw	1
  2936  009E  3E01               	movwf	btemp+1
  2937  009F  00FF               	fcall	stringtab
  2938  00A0  160A  118A  2000  120A  118A  	movwf	(??_printf+1)+0
  2939  00A5  00A5               	fcall	stringtab
  2940  00A6  160A  118A  2000  120A  118A  	movwf	(??_printf+1)+0+1
  2941  00AB  00A6               	movf	1+(??_printf+1)+0,w
  2942  00AC  0826               	subwf	(printf@val+1),w
  2943  00AD  022C               	skipz
  2944  00AE  1D03               	goto	u2015
  2945  00AF  28B2               	movf	0+(??_printf+1)+0,w
  2946  00B0  0825               	subwf	(printf@val),w
  2947  00B1  022B               u2015:
  2948  00B2                     	skipnc
  2949  00B2  1803               	goto	u2011
  2950  00B3  28B5               	goto	u2010
  2951  00B4  28B6               u2011:
  2952  00B5                     	goto	l1908
  2953  00B5  28B8               u2010:
  2954  00B6                     	goto	l1910
  2955  00B6  28C3               	line	1326
  2956                           	
  2957                           l1906:	
  2958  00B7                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1326:      
                                 break;
  2959                           	goto	l1910
  2960  00B7  28C3               	
  2961                           l269:	
  2962  00B8                     	
  2963                           l1908:	
  2964  00B8                     	movlw	low(01h)
  2965  00B8  3001               	movwf	(??_printf+0)+0
  2966  00B9  00A4               	movf	(??_printf+0)+0,w
  2967  00BA  0824               	addwf	(printf@c),f
  2968  00BB  07AD               		movlw	5
  2969  00BC  3005               	xorwf	((printf@c)),w
  2970  00BD  062D               	btfss	status,2
  2971  00BE  1D03               	goto	u2021
  2972  00BF  28C1               	goto	u2020
  2973  00C0  28C2               u2021:
  2974  00C1                     	goto	l1904
  2975  00C1  2897               u2020:
  2976  00C2                     	goto	l1910
  2977  00C2  28C3               	
  2978                           l268:	
  2979  00C3                     	line	1457
  2980                           	
  2981                           l1910:	
  2982  00C3                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1441:   {;C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1457:    if(f
                                 lag & 0x03)
  2983                           	movf	(printf@flag),w
  2984  00C3  0829               	andlw	03h
  2985  00C4  3903               	btfsc	status,2
  2986  00C5  1903               	goto	u2031
  2987  00C6  28C8               	goto	u2030
  2988  00C7  28C9               u2031:
  2989  00C8                     	goto	l1914
  2990  00C8  28D0               u2030:
  2991  00C9                     	line	1458
  2992                           	
  2993                           l1912:	
  2994  00C9                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1458:     (
                                 putch('-') );
  2995                           	movlw	low(02Dh)
  2996  00C9  302D               	fcall	_putch
  2997  00CA  120A  158A  20D9  120A  118A  	goto	l1914
  2998  00CF  28D0               	
  2999                           l270:	
  3000  00D0                     	line	1491
  3001                           	
  3002                           l1914:	
  3003  00D0                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1488:   };C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1491:   prec 
                                 = c;
  3004                           	bcf	status, 5	;RP0=0, select bank0
  3005  00D0  1283               	bcf	status, 6	;RP1=0, select bank0
  3006  00D1  1303               	movf	(printf@c),w
  3007  00D2  082D               	movwf	(??_printf+0)+0
  3008  00D3  00A4               	movf	(??_printf+0)+0,w
  3009  00D4  0824               	movwf	(printf@prec)
  3010  00D5  00AA               	line	1493
  3011                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1493:   whi
                                 le(prec--) {
  3012                           	goto	l1920
  3013  00D6  2910               	
  3014                           l272:	
  3015  00D7                     	line	1508
  3016                           	
  3017                           l1916:	
  3018  00D7                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1497:    {;
                                 C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1508:     c 
                                 = (val / dpowers[prec]) % 10 + '0';
  3019                           	movlw	0Ah
  3020  00D7  300A               	movwf	(___lwmod@divisor)
  3021  00D8  00F8               	movlw	0
  3022  00D9  3000               	movwf	((___lwmod@divisor))+1
  3023  00DA  00F9               	movf	(printf@prec),w
  3024  00DB  082A               	movwf	(??_printf+0)+0
  3025  00DC  00A4               	addwf	(??_printf+0)+0,w
  3026  00DD  0724               	addlw	low(((_dpowers)|8000h))
  3027  00DE  3E12               	movwf	fsr0
  3028  00DF  0084               	movlw	high(((_dpowers)|8000h))
  3029  00E0  3090               	skipnc
  3030  00E1  1803               	addlw	1
  3031  00E2  3E01               	movwf	btemp+1
  3032  00E3  00FF               	fcall	stringtab
  3033  00E4  160A  118A  2000  120A  118A  	movwf	(___lwdiv@divisor)
  3034  00E9  00F0               	fcall	stringtab
  3035  00EA  160A  118A  2000  120A  118A  	movwf	(___lwdiv@divisor+1)
  3036  00EF  00F1               	movf	(printf@val+1),w
  3037  00F0  082C               	movwf	(___lwdiv@dividend+1)
  3038  00F1  00F3               	movf	(printf@val),w
  3039  00F2  082B               	movwf	(___lwdiv@dividend)
  3040  00F3  00F2               	fcall	___lwdiv
  3041  00F4  120A  158A  22BE  120A  118A  	movf	(1+(?___lwdiv)),w
  3042  00F9  0871               	movwf	(___lwmod@dividend+1)
  3043  00FA  00FB               	movf	(0+(?___lwdiv)),w
  3044  00FB  0870               	movwf	(___lwmod@dividend)
  3045  00FC  00FA               	fcall	___lwmod
  3046  00FD  120A  158A  2239  120A  118A  	movf	(0+(?___lwmod)),w
  3047  0102  0878               	addlw	030h
  3048  0103  3E30               	bcf	status, 5	;RP0=0, select bank0
  3049  0104  1283               	bcf	status, 6	;RP1=0, select bank0
  3050  0105  1303               	movwf	(??_printf+1)+0
  3051  0106  00A5               	movf	(??_printf+1)+0,w
  3052  0107  0825               	movwf	(printf@c)
  3053  0108  00AD               	line	1543
  3054                           	
  3055                           l1918:	
  3056  0109                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1542:    };
                                 C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1543:    (pu
                                 tch(c) );
  3057                           	movf	(printf@c),w
  3058  0109  082D               	fcall	_putch
  3059  010A  120A  158A  20D9  120A  118A  	goto	l1920
  3060  010F  2910               	line	1544
  3061                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1544:   }
  3062                           	
  3063                           l271:	
  3064  0110                     	line	1493
  3065                           	
  3066                           l1920:	
  3067  0110                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1493:   whi
                                 le(prec--) {
  3068                           	movlw	low(-1)
  3069  0110  30FF               	bcf	status, 5	;RP0=0, select bank0
  3070  0111  1283               	bcf	status, 6	;RP1=0, select bank0
  3071  0112  1303               	movwf	(??_printf+0)+0
  3072  0113  00A4               	movf	(??_printf+0)+0,w
  3073  0114  0824               	addwf	(printf@prec),f
  3074  0115  07AA               		incf	(((printf@prec))),w
  3075  0116  0A2A               	btfss	status,2
  3076  0117  1D03               	goto	u2041
  3077  0118  291A               	goto	u2040
  3078  0119  291B               u2041:
  3079  011A                     	goto	l1916
  3080  011A  28D7               u2040:
  3081  011B                     	goto	l1922
  3082  011B  291D               	
  3083                           l273:	
  3084  011C                     	goto	l1922
  3085  011C  291D               	line	1552
  3086                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1552:  }
  3087                           	
  3088                           l256:	
  3089  011D                     	line	548
  3090                           	
  3091                           l1922:	
  3092  011D                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 548:  while
                                 ((c = *f++)) {
  3093                           	bcf	status, 5	;RP0=0, select bank0
  3094  011D  1283               	bcf	status, 6	;RP1=0, select bank0
  3095  011E  1303               	movf	(printf@f+1),w
  3096  011F  0821               	movwf	(??_printf+0)+0+1
  3097  0120  00A5               	movf	(printf@f),w
  3098  0121  0820               	movwf	(??_printf+0)+0
  3099  0122  00A4               	incf	(printf@f),f
  3100  0123  0AA0               	skipnz
  3101  0124  1903               	incf	(printf@f+1),f
  3102  0125  0AA1               	movf	1+(??_printf+0)+0,w
  3103  0126  0825               	movwf	btemp+1
  3104  0127  00FF               	movf	0+(??_printf+0)+0,w
  3105  0128  0824               	movwf	fsr0
  3106  0129  0084               	fcall	stringtab
  3107  012A  160A  118A  2000  120A  118A  	movwf	(??_printf+2)+0
  3108  012F  00A6               	movf	(??_printf+2)+0,w
  3109  0130  0826               	movwf	(printf@c)
  3110  0131  00AD               	movf	(((printf@c))),w
  3111  0132  082D               	btfss	status,2
  3112  0133  1D03               	goto	u2051
  3113  0134  2936               	goto	u2050
  3114  0135  2937               u2051:
  3115  0136                     	goto	l1878
  3116  0136  283A               u2050:
  3117  0137                     	goto	l275
  3118  0137  2939               	
  3119                           l274:	
  3120  0138                     	goto	l275
  3121  0138  2939               	line	1554
  3122                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1554: alldo
                                 ne:
  3123                           	
  3124                           l261:	
  3125  0139                     	line	1560
  3126                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1559:  retu
                                 rn 0;;	Return value of _printf is never used
  3127                           	
  3128                           l275:	
  3129  0139                     	return
  3130  0139  0008               	opt stack 0
  3131                           GLOBAL	__end_of_printf
  3132                           	__end_of_printf:
  3133  013A                     	signat	_printf,602
  3134                           	global	_putch
  3135                           
  3136 ;; *************** function _putch *****************
  3137 ;; Defined at:
  3138 ;;		line 161 in file "ROK3ZAD2.c"
  3139 ;; Parameters:    Size  Location     Type
  3140 ;;  a               1    wreg     unsigned char 
  3141 ;; Auto vars:     Size  Location     Type
  3142 ;;  a               1    1[COMMON] unsigned char 
  3143 ;; Return value:  Size  Location     Type
  3144 ;;                  1    wreg      void 
  3145 ;; Registers used:
  3146 ;;		wreg, status,2, status,0, pclath, cstack
  3147 ;; Tracked objects:
  3148 ;;		On entry : 0/0
  3149 ;;		On exit  : 0/0
  3150 ;;		Unchanged: 0/0
  3151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3152 ;;      Params:         0       0       0       0       0
  3153 ;;      Locals:         1       0       0       0       0
  3154 ;;      Temps:          0       0       0       0       0
  3155 ;;      Totals:         1       0       0       0       0
  3156 ;;Total ram usage:        1 bytes
  3157 ;; Hardware stack levels used:    1
  3158 ;; Hardware stack levels required when called:    1
  3159 ;; This function calls:
  3160 ;;		_UART_Send_Char
  3161 ;; This function is called by:
  3162 ;;		_printf
  3163 ;; This function uses a non-reentrant model
  3164 ;;
  3165                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  3166                           	file	"ROK3ZAD2.c"
  3167                           	line	161
  3168                           global __ptext2
  3169                           __ptext2:	;psect for function _putch
  3170  08D9                     psect	text2
  3171                           	file	"ROK3ZAD2.c"
  3172                           	line	161
  3173                           	global	__size_of_putch
  3174                           	__size_of_putch	equ	__end_of_putch-_putch
  3175  0008                     	
  3176                           _putch:	
  3177  08D9                     ;incstack = 0
  3178                           	opt	stack 5
  3179                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  3180                           ;putch@a stored from wreg
  3181                           	movwf	(putch@a)
  3182  08D9  00F1               	line	162
  3183                           	
  3184                           l1714:	
  3185  08DA                     ;ROK3ZAD2.c: 162:     UART_Send_Char(a);
  3186                           	movf	(putch@a),w
  3187  08DA  0871               	fcall	_UART_Send_Char
  3188  08DB  120A  158A  20EA  120A  158A  	line	163
  3189                           	
  3190                           l124:	
  3191  08E0                     	return
  3192  08E0  0008               	opt stack 0
  3193                           GLOBAL	__end_of_putch
  3194                           	__end_of_putch:
  3195  08E1                     	signat	_putch,4217
  3196                           	global	_UART_Send_Char
  3197                           
  3198 ;; *************** function _UART_Send_Char *****************
  3199 ;; Defined at:
  3200 ;;		line 147 in file "ROK3ZAD2.c"
  3201 ;; Parameters:    Size  Location     Type
  3202 ;;  a               1    wreg     unsigned char 
  3203 ;; Auto vars:     Size  Location     Type
  3204 ;;  a               1    0[COMMON] unsigned char 
  3205 ;; Return value:  Size  Location     Type
  3206 ;;                  1    wreg      void 
  3207 ;; Registers used:
  3208 ;;		wreg
  3209 ;; Tracked objects:
  3210 ;;		On entry : 0/0
  3211 ;;		On exit  : 0/0
  3212 ;;		Unchanged: 0/0
  3213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3214 ;;      Params:         0       0       0       0       0
  3215 ;;      Locals:         1       0       0       0       0
  3216 ;;      Temps:          0       0       0       0       0
  3217 ;;      Totals:         1       0       0       0       0
  3218 ;;Total ram usage:        1 bytes
  3219 ;; Hardware stack levels used:    1
  3220 ;; This function calls:
  3221 ;;		Nothing
  3222 ;; This function is called by:
  3223 ;;		_putch
  3224 ;;		_main
  3225 ;; This function uses a non-reentrant model
  3226 ;;
  3227                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  3228                           	line	147
  3229                           global __ptext3
  3230                           __ptext3:	;psect for function _UART_Send_Char
  3231  08EA                     psect	text3
  3232                           	file	"ROK3ZAD2.c"
  3233                           	line	147
  3234                           	global	__size_of_UART_Send_Char
  3235                           	__size_of_UART_Send_Char	equ	__end_of_UART_Send_Char-_UART_Send_Char
  3236  000C                     	
  3237                           _UART_Send_Char:	
  3238  08EA                     ;incstack = 0
  3239                           	opt	stack 5
  3240                           ; Regs used in _UART_Send_Char: [wreg]
  3241                           ;UART_Send_Char@a stored from wreg
  3242                           	movwf	(UART_Send_Char@a)
  3243  08EA  00F0               	line	148
  3244                           	
  3245                           l1680:	
  3246  08EB                     ;ROK3ZAD2.c: 148:     while(!TXIF);
  3247                           	goto	l111
  3248  08EB  28EC               	
  3249                           l112:	
  3250  08EC                     	
  3251                           l111:	
  3252  08EC                     	bcf	status, 5	;RP0=0, select bank0
  3253  08EC  1283               	bcf	status, 6	;RP1=0, select bank0
  3254  08ED  1303               	btfss	(100/8),(100)&7	;volatile
  3255  08EE  1E0C               	goto	u1651
  3256  08EF  28F1               	goto	u1650
  3257  08F0  28F2               u1651:
  3258  08F1                     	goto	l111
  3259  08F1  28EC               u1650:
  3260  08F2                     	goto	l1682
  3261  08F2  28F3               	
  3262                           l113:	
  3263  08F3                     	line	149
  3264                           	
  3265                           l1682:	
  3266  08F3                     ;ROK3ZAD2.c: 149:     TXREG=a;
  3267                           	movf	(UART_Send_Char@a),w
  3268  08F3  0870               	movwf	(25)	;volatile
  3269  08F4  0099               	line	150
  3270                           	
  3271                           l114:	
  3272  08F5                     	return
  3273  08F5  0008               	opt stack 0
  3274                           GLOBAL	__end_of_UART_Send_Char
  3275                           	__end_of_UART_Send_Char:
  3276  08F6                     	signat	_UART_Send_Char,4217
  3277                           	global	___lwmod
  3278                           
  3279 ;; *************** function ___lwmod *****************
  3280 ;; Defined at:
  3281 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  3282 ;; Parameters:    Size  Location     Type
  3283 ;;  divisor         2    8[COMMON] unsigned int 
  3284 ;;  dividend        2   10[COMMON] unsigned int 
  3285 ;; Auto vars:     Size  Location     Type
  3286 ;;  counter         1   13[COMMON] unsigned char 
  3287 ;; Return value:  Size  Location     Type
  3288 ;;                  2    8[COMMON] unsigned int 
  3289 ;; Registers used:
  3290 ;;		wreg, status,2, status,0
  3291 ;; Tracked objects:
  3292 ;;		On entry : 0/0
  3293 ;;		On exit  : 0/0
  3294 ;;		Unchanged: 0/0
  3295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3296 ;;      Params:         4       0       0       0       0
  3297 ;;      Locals:         1       0       0       0       0
  3298 ;;      Temps:          1       0       0       0       0
  3299 ;;      Totals:         6       0       0       0       0
  3300 ;;Total ram usage:        6 bytes
  3301 ;; Hardware stack levels used:    1
  3302 ;; This function calls:
  3303 ;;		Nothing
  3304 ;; This function is called by:
  3305 ;;		_printf
  3306 ;; This function uses a non-reentrant model
  3307 ;;
  3308                           psect	text4,local,class=CODE,delta=2,merge=1,group=1
  3309                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  3310                           	line	5
  3311                           global __ptext4
  3312                           __ptext4:	;psect for function ___lwmod
  3313  0A39                     psect	text4
  3314                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  3315                           	line	5
  3316                           	global	__size_of___lwmod
  3317                           	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  3318  0041                     	
  3319                           ___lwmod:	
  3320  0A39                     ;incstack = 0
  3321                           	opt	stack 6
  3322                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3323                           	line	12
  3324                           	
  3325                           l1742:	
  3326  0A39                     	movf	((___lwmod@divisor)),w
  3327  0A39  0878               iorwf	((___lwmod@divisor+1)),w
  3328  0A3A  0479               	btfsc	status,2
  3329  0A3B  1903               	goto	u1741
  3330  0A3C  2A3E               	goto	u1740
  3331  0A3D  2A3F               u1741:
  3332  0A3E                     	goto	l1760
  3333  0A3E  2A74               u1740:
  3334  0A3F                     	line	13
  3335                           	
  3336                           l1744:	
  3337  0A3F                     	clrf	(___lwmod@counter)
  3338  0A3F  01FD               	incf	(___lwmod@counter),f
  3339  0A40  0AFD               	line	14
  3340                           	goto	l1750
  3341  0A41  2A4E               	
  3342                           l556:	
  3343  0A42                     	line	15
  3344                           	
  3345                           l1746:	
  3346  0A42                     	movlw	01h
  3347  0A42  3001               	
  3348                           u1755:
  3349  0A43                     	clrc
  3350  0A43  1003               	rlf	(___lwmod@divisor),f
  3351  0A44  0DF8               	rlf	(___lwmod@divisor+1),f
  3352  0A45  0DF9               	addlw	-1
  3353  0A46  3EFF               	skipz
  3354  0A47  1D03               	goto	u1755
  3355  0A48  2A43               	line	16
  3356                           	
  3357                           l1748:	
  3358  0A49                     	movlw	low(01h)
  3359  0A49  3001               	movwf	(??___lwmod+0)+0
  3360  0A4A  00FC               	movf	(??___lwmod+0)+0,w
  3361  0A4B  087C               	addwf	(___lwmod@counter),f
  3362  0A4C  07FD               	goto	l1750
  3363  0A4D  2A4E               	line	17
  3364                           	
  3365                           l555:	
  3366  0A4E                     	line	14
  3367                           	
  3368                           l1750:	
  3369  0A4E                     	btfss	(___lwmod@divisor+1),(15)&7
  3370  0A4E  1FF9               	goto	u1761
  3371  0A4F  2A51               	goto	u1760
  3372  0A50  2A52               u1761:
  3373  0A51                     	goto	l1746
  3374  0A51  2A42               u1760:
  3375  0A52                     	goto	l1752
  3376  0A52  2A54               	
  3377                           l557:	
  3378  0A53                     	goto	l1752
  3379  0A53  2A54               	line	18
  3380                           	
  3381                           l558:	
  3382  0A54                     	line	19
  3383                           	
  3384                           l1752:	
  3385  0A54                     	movf	(___lwmod@divisor+1),w
  3386  0A54  0879               	subwf	(___lwmod@dividend+1),w
  3387  0A55  027B               	skipz
  3388  0A56  1D03               	goto	u1775
  3389  0A57  2A5A               	movf	(___lwmod@divisor),w
  3390  0A58  0878               	subwf	(___lwmod@dividend),w
  3391  0A59  027A               u1775:
  3392  0A5A                     	skipc
  3393  0A5A  1C03               	goto	u1771
  3394  0A5B  2A5D               	goto	u1770
  3395  0A5C  2A5E               u1771:
  3396  0A5D                     	goto	l1756
  3397  0A5D  2A65               u1770:
  3398  0A5E                     	line	20
  3399                           	
  3400                           l1754:	
  3401  0A5E                     	movf	(___lwmod@divisor),w
  3402  0A5E  0878               	subwf	(___lwmod@dividend),f
  3403  0A5F  02FA               	movf	(___lwmod@divisor+1),w
  3404  0A60  0879               	skipc
  3405  0A61  1C03               	decf	(___lwmod@dividend+1),f
  3406  0A62  03FB               	subwf	(___lwmod@dividend+1),f
  3407  0A63  02FB               	goto	l1756
  3408  0A64  2A65               	
  3409                           l559:	
  3410  0A65                     	line	21
  3411                           	
  3412                           l1756:	
  3413  0A65                     	movlw	01h
  3414  0A65  3001               	
  3415                           u1785:
  3416  0A66                     	clrc
  3417  0A66  1003               	rrf	(___lwmod@divisor+1),f
  3418  0A67  0CF9               	rrf	(___lwmod@divisor),f
  3419  0A68  0CF8               	addlw	-1
  3420  0A69  3EFF               	skipz
  3421  0A6A  1D03               	goto	u1785
  3422  0A6B  2A66               	line	22
  3423                           	
  3424                           l1758:	
  3425  0A6C                     	movlw	01h
  3426  0A6C  3001               	subwf	(___lwmod@counter),f
  3427  0A6D  02FD               	btfss	status,2
  3428  0A6E  1D03               	goto	u1791
  3429  0A6F  2A71               	goto	u1790
  3430  0A70  2A72               u1791:
  3431  0A71                     	goto	l1752
  3432  0A71  2A54               u1790:
  3433  0A72                     	goto	l1760
  3434  0A72  2A74               	
  3435                           l560:	
  3436  0A73                     	goto	l1760
  3437  0A73  2A74               	line	23
  3438                           	
  3439                           l554:	
  3440  0A74                     	line	24
  3441                           	
  3442                           l1760:	
  3443  0A74                     	movf	(___lwmod@dividend+1),w
  3444  0A74  087B               	movwf	(?___lwmod+1)
  3445  0A75  00F9               	movf	(___lwmod@dividend),w
  3446  0A76  087A               	movwf	(?___lwmod)
  3447  0A77  00F8               	goto	l561
  3448  0A78  2A79               	
  3449                           l1762:	
  3450  0A79                     	line	25
  3451                           	
  3452                           l561:	
  3453  0A79                     	return
  3454  0A79  0008               	opt stack 0
  3455                           GLOBAL	__end_of___lwmod
  3456                           	__end_of___lwmod:
  3457  0A7A                     	signat	___lwmod,8314
  3458                           	global	___lwdiv
  3459                           
  3460 ;; *************** function ___lwdiv *****************
  3461 ;; Defined at:
  3462 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  3463 ;; Parameters:    Size  Location     Type
  3464 ;;  divisor         2    0[COMMON] unsigned int 
  3465 ;;  dividend        2    2[COMMON] unsigned int 
  3466 ;; Auto vars:     Size  Location     Type
  3467 ;;  quotient        2    5[COMMON] unsigned int 
  3468 ;;  counter         1    7[COMMON] unsigned char 
  3469 ;; Return value:  Size  Location     Type
  3470 ;;                  2    0[COMMON] unsigned int 
  3471 ;; Registers used:
  3472 ;;		wreg, status,2, status,0
  3473 ;; Tracked objects:
  3474 ;;		On entry : 0/0
  3475 ;;		On exit  : 0/0
  3476 ;;		Unchanged: 0/0
  3477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3478 ;;      Params:         4       0       0       0       0
  3479 ;;      Locals:         3       0       0       0       0
  3480 ;;      Temps:          1       0       0       0       0
  3481 ;;      Totals:         8       0       0       0       0
  3482 ;;Total ram usage:        8 bytes
  3483 ;; Hardware stack levels used:    1
  3484 ;; This function calls:
  3485 ;;		Nothing
  3486 ;; This function is called by:
  3487 ;;		_printf
  3488 ;; This function uses a non-reentrant model
  3489 ;;
  3490                           psect	text5,local,class=CODE,delta=2,merge=1,group=1
  3491                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  3492                           	line	5
  3493                           global __ptext5
  3494                           __ptext5:	;psect for function ___lwdiv
  3495  0ABE                     psect	text5
  3496                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  3497                           	line	5
  3498                           	global	__size_of___lwdiv
  3499                           	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  3500  004B                     	
  3501                           ___lwdiv:	
  3502  0ABE                     ;incstack = 0
  3503                           	opt	stack 6
  3504                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3505                           	line	13
  3506                           	
  3507                           l1716:	
  3508  0ABE                     	clrf	(___lwdiv@quotient)
  3509  0ABE  01F5               	clrf	(___lwdiv@quotient+1)
  3510  0ABF  01F6               	line	14
  3511                           	
  3512                           l1718:	
  3513  0AC0                     	movf	((___lwdiv@divisor)),w
  3514  0AC0  0870               iorwf	((___lwdiv@divisor+1)),w
  3515  0AC1  0471               	btfsc	status,2
  3516  0AC2  1903               	goto	u1671
  3517  0AC3  2AC5               	goto	u1670
  3518  0AC4  2AC6               u1671:
  3519  0AC5                     	goto	l1738
  3520  0AC5  2B03               u1670:
  3521  0AC6                     	line	15
  3522                           	
  3523                           l1720:	
  3524  0AC6                     	clrf	(___lwdiv@counter)
  3525  0AC6  01F7               	incf	(___lwdiv@counter),f
  3526  0AC7  0AF7               	line	16
  3527                           	goto	l1726
  3528  0AC8  2AD5               	
  3529                           l546:	
  3530  0AC9                     	line	17
  3531                           	
  3532                           l1722:	
  3533  0AC9                     	movlw	01h
  3534  0AC9  3001               	
  3535                           u1685:
  3536  0ACA                     	clrc
  3537  0ACA  1003               	rlf	(___lwdiv@divisor),f
  3538  0ACB  0DF0               	rlf	(___lwdiv@divisor+1),f
  3539  0ACC  0DF1               	addlw	-1
  3540  0ACD  3EFF               	skipz
  3541  0ACE  1D03               	goto	u1685
  3542  0ACF  2ACA               	line	18
  3543                           	
  3544                           l1724:	
  3545  0AD0                     	movlw	low(01h)
  3546  0AD0  3001               	movwf	(??___lwdiv+0)+0
  3547  0AD1  00F4               	movf	(??___lwdiv+0)+0,w
  3548  0AD2  0874               	addwf	(___lwdiv@counter),f
  3549  0AD3  07F7               	goto	l1726
  3550  0AD4  2AD5               	line	19
  3551                           	
  3552                           l545:	
  3553  0AD5                     	line	16
  3554                           	
  3555                           l1726:	
  3556  0AD5                     	btfss	(___lwdiv@divisor+1),(15)&7
  3557  0AD5  1FF1               	goto	u1691
  3558  0AD6  2AD8               	goto	u1690
  3559  0AD7  2AD9               u1691:
  3560  0AD8                     	goto	l1722
  3561  0AD8  2AC9               u1690:
  3562  0AD9                     	goto	l1728
  3563  0AD9  2ADB               	
  3564                           l547:	
  3565  0ADA                     	goto	l1728
  3566  0ADA  2ADB               	line	20
  3567                           	
  3568                           l548:	
  3569  0ADB                     	line	21
  3570                           	
  3571                           l1728:	
  3572  0ADB                     	movlw	01h
  3573  0ADB  3001               	
  3574                           u1705:
  3575  0ADC                     	clrc
  3576  0ADC  1003               	rlf	(___lwdiv@quotient),f
  3577  0ADD  0DF5               	rlf	(___lwdiv@quotient+1),f
  3578  0ADE  0DF6               	addlw	-1
  3579  0ADF  3EFF               	skipz
  3580  0AE0  1D03               	goto	u1705
  3581  0AE1  2ADC               	line	22
  3582                           	movf	(___lwdiv@divisor+1),w
  3583  0AE2  0871               	subwf	(___lwdiv@dividend+1),w
  3584  0AE3  0273               	skipz
  3585  0AE4  1D03               	goto	u1715
  3586  0AE5  2AE8               	movf	(___lwdiv@divisor),w
  3587  0AE6  0870               	subwf	(___lwdiv@dividend),w
  3588  0AE7  0272               u1715:
  3589  0AE8                     	skipc
  3590  0AE8  1C03               	goto	u1711
  3591  0AE9  2AEB               	goto	u1710
  3592  0AEA  2AEC               u1711:
  3593  0AEB                     	goto	l1734
  3594  0AEB  2AF4               u1710:
  3595  0AEC                     	line	23
  3596                           	
  3597                           l1730:	
  3598  0AEC                     	movf	(___lwdiv@divisor),w
  3599  0AEC  0870               	subwf	(___lwdiv@dividend),f
  3600  0AED  02F2               	movf	(___lwdiv@divisor+1),w
  3601  0AEE  0871               	skipc
  3602  0AEF  1C03               	decf	(___lwdiv@dividend+1),f
  3603  0AF0  03F3               	subwf	(___lwdiv@dividend+1),f
  3604  0AF1  02F3               	line	24
  3605                           	
  3606                           l1732:	
  3607  0AF2                     	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  3608  0AF2  1475               	goto	l1734
  3609  0AF3  2AF4               	line	25
  3610                           	
  3611                           l549:	
  3612  0AF4                     	line	26
  3613                           	
  3614                           l1734:	
  3615  0AF4                     	movlw	01h
  3616  0AF4  3001               	
  3617                           u1725:
  3618  0AF5                     	clrc
  3619  0AF5  1003               	rrf	(___lwdiv@divisor+1),f
  3620  0AF6  0CF1               	rrf	(___lwdiv@divisor),f
  3621  0AF7  0CF0               	addlw	-1
  3622  0AF8  3EFF               	skipz
  3623  0AF9  1D03               	goto	u1725
  3624  0AFA  2AF5               	line	27
  3625                           	
  3626                           l1736:	
  3627  0AFB                     	movlw	01h
  3628  0AFB  3001               	subwf	(___lwdiv@counter),f
  3629  0AFC  02F7               	btfss	status,2
  3630  0AFD  1D03               	goto	u1731
  3631  0AFE  2B00               	goto	u1730
  3632  0AFF  2B01               u1731:
  3633  0B00                     	goto	l1728
  3634  0B00  2ADB               u1730:
  3635  0B01                     	goto	l1738
  3636  0B01  2B03               	
  3637                           l550:	
  3638  0B02                     	goto	l1738
  3639  0B02  2B03               	line	28
  3640                           	
  3641                           l544:	
  3642  0B03                     	line	29
  3643                           	
  3644                           l1738:	
  3645  0B03                     	movf	(___lwdiv@quotient+1),w
  3646  0B03  0876               	movwf	(?___lwdiv+1)
  3647  0B04  00F1               	movf	(___lwdiv@quotient),w
  3648  0B05  0875               	movwf	(?___lwdiv)
  3649  0B06  00F0               	goto	l551
  3650  0B07  2B08               	
  3651                           l1740:	
  3652  0B08                     	line	30
  3653                           	
  3654                           l551:	
  3655  0B08                     	return
  3656  0B08  0008               	opt stack 0
  3657                           GLOBAL	__end_of___lwdiv
  3658                           	__end_of___lwdiv:
  3659  0B09                     	signat	___lwdiv,8314
  3660                           	global	___xxtofl
  3661                           
  3662 ;; *************** function ___xxtofl *****************
  3663 ;; Defined at:
  3664 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
  3665 ;; Parameters:    Size  Location     Type
  3666 ;;  sign            1    wreg     unsigned char 
  3667 ;;  val             4    5[COMMON] long 
  3668 ;; Auto vars:     Size  Location     Type
  3669 ;;  sign            1    0[BANK0 ] unsigned char 
  3670 ;;  arg             4    2[BANK0 ] unsigned long 
  3671 ;;  exp             1    1[BANK0 ] unsigned char 
  3672 ;; Return value:  Size  Location     Type
  3673 ;;                  4    5[COMMON] unsigned char 
  3674 ;; Registers used:
  3675 ;;		wreg, status,2, status,0
  3676 ;; Tracked objects:
  3677 ;;		On entry : 0/0
  3678 ;;		On exit  : 0/0
  3679 ;;		Unchanged: 0/0
  3680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3681 ;;      Params:         4       0       0       0       0
  3682 ;;      Locals:         0       6       0       0       0
  3683 ;;      Temps:          4       0       0       0       0
  3684 ;;      Totals:         8       6       0       0       0
  3685 ;;Total ram usage:       14 bytes
  3686 ;; Hardware stack levels used:    1
  3687 ;; This function calls:
  3688 ;;		Nothing
  3689 ;; This function is called by:
  3690 ;;		_main
  3691 ;; This function uses a non-reentrant model
  3692 ;;
  3693                           psect	text6,local,class=CODE,delta=2,merge=1,group=1
  3694                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
  3695                           	line	10
  3696                           global __ptext6
  3697                           __ptext6:	;psect for function ___xxtofl
  3698  0D2D                     psect	text6
  3699                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
  3700                           	line	10
  3701                           	global	__size_of___xxtofl
  3702                           	__size_of___xxtofl	equ	__end_of___xxtofl-___xxtofl
  3703  00C4                     	
  3704                           ___xxtofl:	
  3705  0D2D                     ;incstack = 0
  3706                           	opt	stack 7
  3707                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  3708                           ;___xxtofl@sign stored from wreg
  3709                           	bcf	status, 5	;RP0=0, select bank0
  3710  0D2D  1283               	bcf	status, 6	;RP1=0, select bank0
  3711  0D2E  1303               	movwf	(___xxtofl@sign)
  3712  0D2F  00A0               	line	15
  3713                           	
  3714                           l2328:	
  3715  0D30                     	movf	((___xxtofl@sign)),w
  3716  0D30  0820               	btfsc	status,2
  3717  0D31  1903               	goto	u3021
  3718  0D32  2D34               	goto	u3020
  3719  0D33  2D35               u3021:
  3720  0D34                     	goto	l2334
  3721  0D34  2D49               u3020:
  3722  0D35                     	
  3723                           l2330:	
  3724  0D35                     	btfss	(___xxtofl@val+3),7
  3725  0D35  1FF8               	goto	u3031
  3726  0D36  2D38               	goto	u3030
  3727  0D37  2D39               u3031:
  3728  0D38                     	goto	l2334
  3729  0D38  2D49               u3030:
  3730  0D39                     	line	16
  3731                           	
  3732                           l2332:	
  3733  0D39                     	comf	(___xxtofl@val)+0,w
  3734  0D39  0975               	movwf	(___xxtofl@arg)
  3735  0D3A  00A2               	comf	(___xxtofl@val)+1,w
  3736  0D3B  0976               	movwf	(___xxtofl@arg+1)
  3737  0D3C  00A3               	comf	(___xxtofl@val)+2,w
  3738  0D3D  0977               	movwf	(___xxtofl@arg+2)
  3739  0D3E  00A4               	comf	(___xxtofl@val)+3,w
  3740  0D3F  0978               	movwf	(___xxtofl@arg+3)
  3741  0D40  00A5               	incf	(___xxtofl@arg),f
  3742  0D41  0AA2               	skipnz
  3743  0D42  1903               	incf	(___xxtofl@arg+1),f
  3744  0D43  0AA3               	skipnz
  3745  0D44  1903               	incf	(___xxtofl@arg+2),f
  3746  0D45  0AA4               	skipnz
  3747  0D46  1903               	incf	(___xxtofl@arg+3),f
  3748  0D47  0AA5               	line	17
  3749                           	goto	l687
  3750  0D48  2D51               	line	18
  3751                           	
  3752                           l686:	
  3753  0D49                     	line	19
  3754                           	
  3755                           l2334:	
  3756  0D49                     	movf	(___xxtofl@val+3),w
  3757  0D49  0878               	movwf	(___xxtofl@arg+3)
  3758  0D4A  00A5               	movf	(___xxtofl@val+2),w
  3759  0D4B  0877               	movwf	(___xxtofl@arg+2)
  3760  0D4C  00A4               	movf	(___xxtofl@val+1),w
  3761  0D4D  0876               	movwf	(___xxtofl@arg+1)
  3762  0D4E  00A3               	movf	(___xxtofl@val),w
  3763  0D4F  0875               	movwf	(___xxtofl@arg)
  3764  0D50  00A2               
  3765                           	line	20
  3766                           	
  3767                           l687:	
  3768  0D51                     	line	21
  3769                           	movf	(___xxtofl@val+3),w
  3770  0D51  0878               	iorwf	(___xxtofl@val+2),w
  3771  0D52  0477               	iorwf	(___xxtofl@val+1),w
  3772  0D53  0476               	iorwf	(___xxtofl@val),w
  3773  0D54  0475               	skipz
  3774  0D55  1D03               	goto	u3041
  3775  0D56  2D58               	goto	u3040
  3776  0D57  2D59               u3041:
  3777  0D58                     	goto	l2340
  3778  0D58  2D63               u3040:
  3779  0D59                     	line	22
  3780                           	
  3781                           l2336:	
  3782  0D59                     	movlw	0x0
  3783  0D59  3000               	movwf	(?___xxtofl+3)
  3784  0D5A  00F8               	movlw	0x0
  3785  0D5B  3000               	movwf	(?___xxtofl+2)
  3786  0D5C  00F7               	movlw	0x0
  3787  0D5D  3000               	movwf	(?___xxtofl+1)
  3788  0D5E  00F6               	movlw	0x0
  3789  0D5F  3000               	movwf	(?___xxtofl)
  3790  0D60  00F5               
  3791                           	goto	l689
  3792  0D61  2DF0               	
  3793                           l2338:	
  3794  0D62                     	goto	l689
  3795  0D62  2DF0               	
  3796                           l688:	
  3797  0D63                     	line	23
  3798                           	
  3799                           l2340:	
  3800  0D63                     	movlw	low(096h)
  3801  0D63  3096               	movwf	(??___xxtofl+0)+0
  3802  0D64  00F9               	movf	(??___xxtofl+0)+0,w
  3803  0D65  0879               	movwf	(___xxtofl@exp)
  3804  0D66  00A1               	line	24
  3805                           	goto	l2344
  3806  0D67  2D76               	
  3807                           l691:	
  3808  0D68                     	line	25
  3809                           	
  3810                           l2342:	
  3811  0D68                     	movlw	low(01h)
  3812  0D68  3001               	movwf	(??___xxtofl+0)+0
  3813  0D69  00F9               	movf	(??___xxtofl+0)+0,w
  3814  0D6A  0879               	addwf	(___xxtofl@exp),f
  3815  0D6B  07A1               	line	26
  3816                           	movlw	01h
  3817  0D6C  3001               u3055:
  3818  0D6D                     	clrc
  3819  0D6D  1003               	rrf	(___xxtofl@arg+3),f
  3820  0D6E  0CA5               	rrf	(___xxtofl@arg+2),f
  3821  0D6F  0CA4               	rrf	(___xxtofl@arg+1),f
  3822  0D70  0CA3               	rrf	(___xxtofl@arg),f
  3823  0D71  0CA2               	addlw	-1
  3824  0D72  3EFF               	skipz
  3825  0D73  1D03               	goto	u3055
  3826  0D74  2D6D               
  3827                           	goto	l2344
  3828  0D75  2D76               	line	27
  3829                           	
  3830                           l690:	
  3831  0D76                     	line	24
  3832                           	
  3833                           l2344:	
  3834  0D76                     	movlw	high highword(0FE000000h)
  3835  0D76  30FE               	andwf	(___xxtofl@arg+3),w
  3836  0D77  0525               	btfss	status,2
  3837  0D78  1D03               	goto	u3061
  3838  0D79  2D7B               	goto	u3060
  3839  0D7A  2D7C               u3061:
  3840  0D7B                     	goto	l2342
  3841  0D7B  2D68               u3060:
  3842  0D7C                     	goto	l693
  3843  0D7C  2D99               	
  3844                           l692:	
  3845  0D7D                     	line	28
  3846                           	goto	l693
  3847  0D7D  2D99               	
  3848                           l694:	
  3849  0D7E                     	line	29
  3850                           	
  3851                           l2346:	
  3852  0D7E                     	movlw	low(01h)
  3853  0D7E  3001               	movwf	(??___xxtofl+0)+0
  3854  0D7F  00F9               	movf	(??___xxtofl+0)+0,w
  3855  0D80  0879               	addwf	(___xxtofl@exp),f
  3856  0D81  07A1               	line	30
  3857                           	
  3858                           l2348:	
  3859  0D82                     	movlw	01h
  3860  0D82  3001               	addwf	(___xxtofl@arg),f
  3861  0D83  07A2               	movlw	0
  3862  0D84  3000               	skipnc
  3863  0D85  1803               movlw 1
  3864  0D86  3001               	addwf	(___xxtofl@arg+1),f
  3865  0D87  07A3               	movlw	0
  3866  0D88  3000               	skipnc
  3867  0D89  1803               movlw 1
  3868  0D8A  3001               	addwf	(___xxtofl@arg+2),f
  3869  0D8B  07A4               	movlw	0
  3870  0D8C  3000               	skipnc
  3871  0D8D  1803               movlw 1
  3872  0D8E  3001               	addwf	(___xxtofl@arg+3),f
  3873  0D8F  07A5               	line	31
  3874                           	
  3875                           l2350:	
  3876  0D90                     	movlw	01h
  3877  0D90  3001               u3075:
  3878  0D91                     	clrc
  3879  0D91  1003               	rrf	(___xxtofl@arg+3),f
  3880  0D92  0CA5               	rrf	(___xxtofl@arg+2),f
  3881  0D93  0CA4               	rrf	(___xxtofl@arg+1),f
  3882  0D94  0CA3               	rrf	(___xxtofl@arg),f
  3883  0D95  0CA2               	addlw	-1
  3884  0D96  3EFF               	skipz
  3885  0D97  1D03               	goto	u3075
  3886  0D98  2D91               
  3887                           	line	32
  3888                           	
  3889                           l693:	
  3890  0D99                     	line	28
  3891                           	movlw	high highword(0FF000000h)
  3892  0D99  30FF               	andwf	(___xxtofl@arg+3),w
  3893  0D9A  0525               	btfss	status,2
  3894  0D9B  1D03               	goto	u3081
  3895  0D9C  2D9E               	goto	u3080
  3896  0D9D  2D9F               u3081:
  3897  0D9E                     	goto	l2346
  3898  0D9E  2D7E               u3080:
  3899  0D9F                     	goto	l2354
  3900  0D9F  2DAD               	
  3901                           l695:	
  3902  0DA0                     	line	33
  3903                           	goto	l2354
  3904  0DA0  2DAD               	
  3905                           l697:	
  3906  0DA1                     	line	34
  3907                           	
  3908                           l2352:	
  3909  0DA1                     	movlw	01h
  3910  0DA1  3001               	subwf	(___xxtofl@exp),f
  3911  0DA2  02A1               	line	35
  3912                           	movlw	01h
  3913  0DA3  3001               	movwf	(??___xxtofl+0)+0
  3914  0DA4  00F9               u3095:
  3915  0DA5                     	clrc
  3916  0DA5  1003               	rlf	(___xxtofl@arg),f
  3917  0DA6  0DA2               	rlf	(___xxtofl@arg+1),f
  3918  0DA7  0DA3               	rlf	(___xxtofl@arg+2),f
  3919  0DA8  0DA4               	rlf	(___xxtofl@arg+3),f
  3920  0DA9  0DA5               	decfsz	(??___xxtofl+0)+0
  3921  0DAA  0BF9               	goto	u3095
  3922  0DAB  2DA5               	goto	l2354
  3923  0DAC  2DAD               	line	36
  3924                           	
  3925                           l696:	
  3926  0DAD                     	line	33
  3927                           	
  3928                           l2354:	
  3929  0DAD                     	btfsc	(___xxtofl@arg+2),(23)&7
  3930  0DAD  1BA4               	goto	u3101
  3931  0DAE  2DB0               	goto	u3100
  3932  0DAF  2DB1               u3101:
  3933  0DB0                     	goto	l700
  3934  0DB0  2DB8               u3100:
  3935  0DB1                     	
  3936                           l2356:	
  3937  0DB1                     	movlw	low(02h)
  3938  0DB1  3002               	subwf	(___xxtofl@exp),w
  3939  0DB2  0221               	skipnc
  3940  0DB3  1803               	goto	u3111
  3941  0DB4  2DB6               	goto	u3110
  3942  0DB5  2DB7               u3111:
  3943  0DB6                     	goto	l2352
  3944  0DB6  2DA1               u3110:
  3945  0DB7                     	goto	l700
  3946  0DB7  2DB8               	
  3947                           l699:	
  3948  0DB8                     	
  3949                           l700:	
  3950  0DB8                     	line	37
  3951                           	btfsc	(___xxtofl@exp),(0)&7
  3952  0DB8  1821               	goto	u3121
  3953  0DB9  2DBB               	goto	u3120
  3954  0DBA  2DBC               u3121:
  3955  0DBB                     	goto	l701
  3956  0DBB  2DC4               u3120:
  3957  0DBC                     	line	38
  3958                           	
  3959                           l2358:	
  3960  0DBC                     	movlw	0FFh
  3961  0DBC  30FF               	andwf	(___xxtofl@arg),f
  3962  0DBD  05A2               	movlw	0FFh
  3963  0DBE  30FF               	andwf	(___xxtofl@arg+1),f
  3964  0DBF  05A3               	movlw	07Fh
  3965  0DC0  307F               	andwf	(___xxtofl@arg+2),f
  3966  0DC1  05A4               	movlw	0FFh
  3967  0DC2  30FF               	andwf	(___xxtofl@arg+3),f
  3968  0DC3  05A5               	
  3969                           l701:	
  3970  0DC4                     	line	39
  3971                           	clrc
  3972  0DC4  1003               	rrf	(___xxtofl@exp),f
  3973  0DC5  0CA1               
  3974                           	line	40
  3975                           	
  3976                           l2360:	
  3977  0DC6                     	movf	(___xxtofl@exp),w
  3978  0DC6  0821               	movwf	(??___xxtofl+0)+0
  3979  0DC7  00F9               	clrf	(??___xxtofl+0)+0+1
  3980  0DC8  01FA               	clrf	(??___xxtofl+0)+0+2
  3981  0DC9  01FB               	clrf	(??___xxtofl+0)+0+3
  3982  0DCA  01FC               	movlw	018h
  3983  0DCB  3018               u3135:
  3984  0DCC                     	clrc
  3985  0DCC  1003               	rlf	(??___xxtofl+0)+0,f
  3986  0DCD  0DF9               	rlf	(??___xxtofl+0)+1,f
  3987  0DCE  0DFA               	rlf	(??___xxtofl+0)+2,f
  3988  0DCF  0DFB               	rlf	(??___xxtofl+0)+3,f
  3989  0DD0  0DFC               u3130:
  3990  0DD1                     	addlw	-1
  3991  0DD1  3EFF               	skipz
  3992  0DD2  1D03               	goto	u3135
  3993  0DD3  2DCC               	movf	0+(??___xxtofl+0)+0,w
  3994  0DD4  0879               	iorwf	(___xxtofl@arg),f
  3995  0DD5  04A2               	movf	1+(??___xxtofl+0)+0,w
  3996  0DD6  087A               	iorwf	(___xxtofl@arg+1),f
  3997  0DD7  04A3               	movf	2+(??___xxtofl+0)+0,w
  3998  0DD8  087B               	iorwf	(___xxtofl@arg+2),f
  3999  0DD9  04A4               	movf	3+(??___xxtofl+0)+0,w
  4000  0DDA  087C               	iorwf	(___xxtofl@arg+3),f
  4001  0DDB  04A5               	line	41
  4002                           	
  4003                           l2362:	
  4004  0DDC                     	movf	((___xxtofl@sign)),w
  4005  0DDC  0820               	btfsc	status,2
  4006  0DDD  1903               	goto	u3141
  4007  0DDE  2DE0               	goto	u3140
  4008  0DDF  2DE1               u3141:
  4009  0DE0                     	goto	l2368
  4010  0DE0  2DE7               u3140:
  4011  0DE1                     	
  4012                           l2364:	
  4013  0DE1                     	btfss	(___xxtofl@val+3),7
  4014  0DE1  1FF8               	goto	u3151
  4015  0DE2  2DE4               	goto	u3150
  4016  0DE3  2DE5               u3151:
  4017  0DE4                     	goto	l2368
  4018  0DE4  2DE7               u3150:
  4019  0DE5                     	line	42
  4020                           	
  4021                           l2366:	
  4022  0DE5                     	bsf	(___xxtofl@arg)+(31/8),(31)&7
  4023  0DE5  17A5               	goto	l2368
  4024  0DE6  2DE7               	
  4025                           l702:	
  4026  0DE7                     	line	43
  4027                           	
  4028                           l2368:	
  4029  0DE7                     	movf	(___xxtofl@arg+3),w
  4030  0DE7  0825               	movwf	(?___xxtofl+3)
  4031  0DE8  00F8               	movf	(___xxtofl@arg+2),w
  4032  0DE9  0824               	movwf	(?___xxtofl+2)
  4033  0DEA  00F7               	movf	(___xxtofl@arg+1),w
  4034  0DEB  0823               	movwf	(?___xxtofl+1)
  4035  0DEC  00F6               	movf	(___xxtofl@arg),w
  4036  0DED  0822               	movwf	(?___xxtofl)
  4037  0DEE  00F5               
  4038                           	goto	l689
  4039  0DEF  2DF0               	
  4040                           l2370:	
  4041  0DF0                     	line	44
  4042                           	
  4043                           l689:	
  4044  0DF0                     	return
  4045  0DF0  0008               	opt stack 0
  4046                           GLOBAL	__end_of___xxtofl
  4047                           	__end_of___xxtofl:
  4048  0DF1                     	signat	___xxtofl,8316
  4049                           	global	___fltol
  4050                           
  4051 ;; *************** function ___fltol *****************
  4052 ;; Defined at:
  4053 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
  4054 ;; Parameters:    Size  Location     Type
  4055 ;;  f1              4   21[BANK0 ] unsigned char 
  4056 ;; Auto vars:     Size  Location     Type
  4057 ;;  exp1            1   31[BANK0 ] unsigned char 
  4058 ;;  sign1           1   30[BANK0 ] unsigned char 
  4059 ;; Return value:  Size  Location     Type
  4060 ;;                  4   21[BANK0 ] long 
  4061 ;; Registers used:
  4062 ;;		wreg, status,2, status,0
  4063 ;; Tracked objects:
  4064 ;;		On entry : 0/0
  4065 ;;		On exit  : 0/0
  4066 ;;		Unchanged: 0/0
  4067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4068 ;;      Params:         0       4       0       0       0
  4069 ;;      Locals:         0       2       0       0       0
  4070 ;;      Temps:          0       5       0       0       0
  4071 ;;      Totals:         0      11       0       0       0
  4072 ;;Total ram usage:       11 bytes
  4073 ;; Hardware stack levels used:    1
  4074 ;; This function calls:
  4075 ;;		Nothing
  4076 ;; This function is called by:
  4077 ;;		_main
  4078 ;; This function uses a non-reentrant model
  4079 ;;
  4080                           psect	text7,local,class=CODE,delta=2,merge=1,group=1
  4081                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
  4082                           	line	43
  4083                           global __ptext7
  4084                           __ptext7:	;psect for function ___fltol
  4085  0C91                     psect	text7
  4086                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
  4087                           	line	43
  4088                           	global	__size_of___fltol
  4089                           	__size_of___fltol	equ	__end_of___fltol-___fltol
  4090  009C                     	
  4091                           ___fltol:	
  4092  0C91                     ;incstack = 0
  4093                           	opt	stack 7
  4094                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  4095                           	line	47
  4096                           	
  4097                           l2010:	
  4098  0C91                     	bcf	status, 5	;RP0=0, select bank0
  4099  0C91  1283               	bcf	status, 6	;RP1=0, select bank0
  4100  0C92  1303               	movf	(___fltol@f1),w
  4101  0C93  0835               	movwf	(??___fltol+0)+0
  4102  0C94  00B9               	movf	(___fltol@f1+1),w
  4103  0C95  0836               	movwf	((??___fltol+0)+0+1)
  4104  0C96  00BA               	movf	(___fltol@f1+2),w
  4105  0C97  0837               	movwf	((??___fltol+0)+0+2)
  4106  0C98  00BB               	movf	(___fltol@f1+3),w
  4107  0C99  0838               	movwf	((??___fltol+0)+0+3)
  4108  0C9A  00BC               	clrc
  4109  0C9B  1003               	rlf	(??___fltol+0)+2,w
  4110  0C9C  0D3B               	rlf	(??___fltol+0)+3,w
  4111  0C9D  0D3C               	movwf	(??___fltol+4)+0
  4112  0C9E  00BD               	movf	(??___fltol+4)+0,w
  4113  0C9F  083D               	movwf	(___fltol@exp1)
  4114  0CA0  00BF               	movf	(((___fltol@exp1))),w
  4115  0CA1  083F               	btfss	status,2
  4116  0CA2  1D03               	goto	u2251
  4117  0CA3  2CA5               	goto	u2250
  4118  0CA4  2CA6               u2251:
  4119  0CA5                     	goto	l2016
  4120  0CA5  2CB0               u2250:
  4121  0CA6                     	line	48
  4122                           	
  4123                           l2012:	
  4124  0CA6                     	movlw	high highword(0)
  4125  0CA6  3000               	movwf	(?___fltol+3)
  4126  0CA7  00B8               	movlw	low highword(0)
  4127  0CA8  3000               	movwf	(?___fltol+2)
  4128  0CA9  00B7               	movlw	high(0)
  4129  0CAA  3000               	movwf	(?___fltol+1)
  4130  0CAB  00B6               	movlw	low(0)
  4131  0CAC  3000               	movwf	(?___fltol)
  4132  0CAD  00B5               
  4133                           	goto	l465
  4134  0CAE  2D2C               	
  4135                           l2014:	
  4136  0CAF                     	goto	l465
  4137  0CAF  2D2C               	
  4138                           l464:	
  4139  0CB0                     	line	49
  4140                           	
  4141                           l2016:	
  4142  0CB0                     	movf	(___fltol@f1),w
  4143  0CB0  0835               	movwf	(??___fltol+0)+0
  4144  0CB1  00B9               	movf	(___fltol@f1+1),w
  4145  0CB2  0836               	movwf	((??___fltol+0)+0+1)
  4146  0CB3  00BA               	movf	(___fltol@f1+2),w
  4147  0CB4  0837               	movwf	((??___fltol+0)+0+2)
  4148  0CB5  00BB               	movf	(___fltol@f1+3),w
  4149  0CB6  0838               	movwf	((??___fltol+0)+0+3)
  4150  0CB7  00BC               	movlw	01Fh
  4151  0CB8  301F               u2265:
  4152  0CB9                     	clrc
  4153  0CB9  1003               	rrf	(??___fltol+0)+3,f
  4154  0CBA  0CBC               	rrf	(??___fltol+0)+2,f
  4155  0CBB  0CBB               	rrf	(??___fltol+0)+1,f
  4156  0CBC  0CBA               	rrf	(??___fltol+0)+0,f
  4157  0CBD  0CB9               u2260:
  4158  0CBE                     	addlw	-1
  4159  0CBE  3EFF               	skipz
  4160  0CBF  1D03               	goto	u2265
  4161  0CC0  2CB9               	movf	0+(??___fltol+0)+0,w
  4162  0CC1  0839               	movwf	(??___fltol+4)+0
  4163  0CC2  00BD               	movf	(??___fltol+4)+0,w
  4164  0CC3  083D               	movwf	(___fltol@sign1)
  4165  0CC4  00BE               	line	50
  4166                           	
  4167                           l2018:	
  4168  0CC5                     	bsf	(___fltol@f1)+(23/8),(23)&7
  4169  0CC5  17B7               	line	51
  4170                           	
  4171                           l2020:	
  4172  0CC6                     	movlw	0FFh
  4173  0CC6  30FF               	andwf	(___fltol@f1),f
  4174  0CC7  05B5               	movlw	0FFh
  4175  0CC8  30FF               	andwf	(___fltol@f1+1),f
  4176  0CC9  05B6               	movlw	0FFh
  4177  0CCA  30FF               	andwf	(___fltol@f1+2),f
  4178  0CCB  05B7               	movlw	0
  4179  0CCC  3000               	andwf	(___fltol@f1+3),f
  4180  0CCD  05B8               	line	52
  4181                           	
  4182                           l2022:	
  4183  0CCE                     	movlw	096h
  4184  0CCE  3096               	subwf	(___fltol@exp1),f
  4185  0CCF  02BF               	line	53
  4186                           	
  4187                           l2024:	
  4188  0CD0                     	btfss	(___fltol@exp1),7
  4189  0CD0  1FBF               	goto	u2271
  4190  0CD1  2CD3               	goto	u2270
  4191  0CD2  2CD4               u2271:
  4192  0CD3                     	goto	l2034
  4193  0CD3  2CF9               u2270:
  4194  0CD4                     	line	54
  4195                           	
  4196                           l2026:	
  4197  0CD4                     	movf	(___fltol@exp1),w
  4198  0CD4  083F               	xorlw	80h
  4199  0CD5  3A80               	addlw	-((-23)^80h)
  4200  0CD6  3E97               	skipnc
  4201  0CD7  1803               	goto	u2281
  4202  0CD8  2CDA               	goto	u2280
  4203  0CD9  2CDB               u2281:
  4204  0CDA                     	goto	l2032
  4205  0CDA  2CE6               u2280:
  4206  0CDB                     	line	55
  4207                           	
  4208                           l2028:	
  4209  0CDB                     	movlw	high highword(0)
  4210  0CDB  3000               	movwf	(?___fltol+3)
  4211  0CDC  00B8               	movlw	low highword(0)
  4212  0CDD  3000               	movwf	(?___fltol+2)
  4213  0CDE  00B7               	movlw	high(0)
  4214  0CDF  3000               	movwf	(?___fltol+1)
  4215  0CE0  00B6               	movlw	low(0)
  4216  0CE1  3000               	movwf	(?___fltol)
  4217  0CE2  00B5               
  4218                           	goto	l465
  4219  0CE3  2D2C               	
  4220                           l2030:	
  4221  0CE4                     	goto	l465
  4222  0CE4  2D2C               	
  4223                           l467:	
  4224  0CE5                     	goto	l2032
  4225  0CE5  2CE6               	line	56
  4226                           	
  4227                           l468:	
  4228  0CE6                     	line	57
  4229                           	
  4230                           l2032:	
  4231  0CE6                     	movlw	01h
  4232  0CE6  3001               u2295:
  4233  0CE7                     	clrc
  4234  0CE7  1003               	rrf	(___fltol@f1+3),f
  4235  0CE8  0CB8               	rrf	(___fltol@f1+2),f
  4236  0CE9  0CB7               	rrf	(___fltol@f1+1),f
  4237  0CEA  0CB6               	rrf	(___fltol@f1),f
  4238  0CEB  0CB5               	addlw	-1
  4239  0CEC  3EFF               	skipz
  4240  0CED  1D03               	goto	u2295
  4241  0CEE  2CE7               
  4242                           	line	58
  4243                           	movlw	low(01h)
  4244  0CEF  3001               	movwf	(??___fltol+0)+0
  4245  0CF0  00B9               	movf	(??___fltol+0)+0,w
  4246  0CF1  0839               	addwf	(___fltol@exp1),f
  4247  0CF2  07BF               	btfss	status,2
  4248  0CF3  1D03               	goto	u2301
  4249  0CF4  2CF6               	goto	u2300
  4250  0CF5  2CF7               u2301:
  4251  0CF6                     	goto	l2032
  4252  0CF6  2CE6               u2300:
  4253  0CF7                     	goto	l2042
  4254  0CF7  2D1C               	
  4255                           l469:	
  4256  0CF8                     	line	59
  4257                           	goto	l2042
  4258  0CF8  2D1C               	
  4259                           l466:	
  4260  0CF9                     	line	60
  4261                           	
  4262                           l2034:	
  4263  0CF9                     	movlw	low(020h)
  4264  0CF9  3020               	subwf	(___fltol@exp1),w
  4265  0CFA  023F               	skipc
  4266  0CFB  1C03               	goto	u2311
  4267  0CFC  2CFE               	goto	u2310
  4268  0CFD  2CFF               u2311:
  4269  0CFE                     	goto	l472
  4270  0CFE  2D15               u2310:
  4271  0CFF                     	line	61
  4272                           	
  4273                           l2036:	
  4274  0CFF                     	movlw	high highword(0)
  4275  0CFF  3000               	movwf	(?___fltol+3)
  4276  0D00  00B8               	movlw	low highword(0)
  4277  0D01  3000               	movwf	(?___fltol+2)
  4278  0D02  00B7               	movlw	high(0)
  4279  0D03  3000               	movwf	(?___fltol+1)
  4280  0D04  00B6               	movlw	low(0)
  4281  0D05  3000               	movwf	(?___fltol)
  4282  0D06  00B5               
  4283                           	goto	l465
  4284  0D07  2D2C               	
  4285                           l2038:	
  4286  0D08                     	goto	l465
  4287  0D08  2D2C               	
  4288                           l471:	
  4289  0D09                     	line	62
  4290                           	goto	l472
  4291  0D09  2D15               	
  4292                           l473:	
  4293  0D0A                     	line	63
  4294                           	
  4295                           l2040:	
  4296  0D0A                     	movlw	01h
  4297  0D0A  3001               	movwf	(??___fltol+0)+0
  4298  0D0B  00B9               u2325:
  4299  0D0C                     	clrc
  4300  0D0C  1003               	rlf	(___fltol@f1),f
  4301  0D0D  0DB5               	rlf	(___fltol@f1+1),f
  4302  0D0E  0DB6               	rlf	(___fltol@f1+2),f
  4303  0D0F  0DB7               	rlf	(___fltol@f1+3),f
  4304  0D10  0DB8               	decfsz	(??___fltol+0)+0
  4305  0D11  0BB9               	goto	u2325
  4306  0D12  2D0C               	line	64
  4307                           	movlw	01h
  4308  0D13  3001               	subwf	(___fltol@exp1),f
  4309  0D14  02BF               	line	65
  4310                           	
  4311                           l472:	
  4312  0D15                     	line	62
  4313                           	movf	((___fltol@exp1)),w
  4314  0D15  083F               	btfss	status,2
  4315  0D16  1D03               	goto	u2331
  4316  0D17  2D19               	goto	u2330
  4317  0D18  2D1A               u2331:
  4318  0D19                     	goto	l2040
  4319  0D19  2D0A               u2330:
  4320  0D1A                     	goto	l2042
  4321  0D1A  2D1C               	
  4322                           l474:	
  4323  0D1B                     	goto	l2042
  4324  0D1B  2D1C               	line	66
  4325                           	
  4326                           l470:	
  4327  0D1C                     	line	67
  4328                           	
  4329                           l2042:	
  4330  0D1C                     	movf	((___fltol@sign1)),w
  4331  0D1C  083E               	btfsc	status,2
  4332  0D1D  1903               	goto	u2341
  4333  0D1E  2D20               	goto	u2340
  4334  0D1F  2D21               u2341:
  4335  0D20                     	goto	l475
  4336  0D20  2D2C               u2340:
  4337  0D21                     	line	68
  4338                           	
  4339                           l2044:	
  4340  0D21                     	comf	(___fltol@f1),f
  4341  0D21  09B5               	comf	(___fltol@f1+1),f
  4342  0D22  09B6               	comf	(___fltol@f1+2),f
  4343  0D23  09B7               	comf	(___fltol@f1+3),f
  4344  0D24  09B8               	incf	(___fltol@f1),f
  4345  0D25  0AB5               	skipnz
  4346  0D26  1903               	incf	(___fltol@f1+1),f
  4347  0D27  0AB6               	skipnz
  4348  0D28  1903               	incf	(___fltol@f1+2),f
  4349  0D29  0AB7               	skipnz
  4350  0D2A  1903               	incf	(___fltol@f1+3),f
  4351  0D2B  0AB8               	
  4352                           l475:	
  4353  0D2C                     	line	69
  4354                           	line	70
  4355                           	
  4356                           l465:	
  4357  0D2C                     	return
  4358  0D2C  0008               	opt stack 0
  4359                           GLOBAL	__end_of___fltol
  4360                           	__end_of___fltol:
  4361  0D2D                     	signat	___fltol,4220
  4362                           	global	___flmul
  4363                           
  4364 ;; *************** function ___flmul *****************
  4365 ;; Defined at:
  4366 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcmul.c"
  4367 ;; Parameters:    Size  Location     Type
  4368 ;;  b               4    0[BANK0 ] long 
  4369 ;;  a               4    4[BANK0 ] long 
  4370 ;; Auto vars:     Size  Location     Type
  4371 ;;  prod            4   15[BANK0 ] struct .
  4372 ;;  grs             4    9[BANK0 ] unsigned long 
  4373 ;;  temp            2   19[BANK0 ] struct .
  4374 ;;  bexp            1   14[BANK0 ] unsigned char 
  4375 ;;  aexp            1   13[BANK0 ] unsigned char 
  4376 ;;  sign            1    8[BANK0 ] unsigned char 
  4377 ;; Return value:  Size  Location     Type
  4378 ;;                  4    0[BANK0 ] unsigned char 
  4379 ;; Registers used:
  4380 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4381 ;; Tracked objects:
  4382 ;;		On entry : 0/0
  4383 ;;		On exit  : 0/0
  4384 ;;		Unchanged: 0/0
  4385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4386 ;;      Params:         0       8       0       0       0
  4387 ;;      Locals:         0      13       0       0       0
  4388 ;;      Temps:          5       0       0       0       0
  4389 ;;      Totals:         5      21       0       0       0
  4390 ;;Total ram usage:       26 bytes
  4391 ;; Hardware stack levels used:    1
  4392 ;; Hardware stack levels required when called:    1
  4393 ;; This function calls:
  4394 ;;		__Umul8_16
  4395 ;; This function is called by:
  4396 ;;		_main
  4397 ;; This function uses a non-reentrant model
  4398 ;;
  4399                           psect	text8,local,class=CODE,delta=2,merge=1,group=1
  4400                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcmul.c"
  4401                           	line	8
  4402                           global __ptext8
  4403                           __ptext8:	;psect for function ___flmul
  4404  0487                     psect	text8
  4405                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcmul.c"
  4406                           	line	8
  4407                           	global	__size_of___flmul
  4408                           	__size_of___flmul	equ	__end_of___flmul-___flmul
  4409  0375                     	
  4410                           ___flmul:	
  4411  0487                     ;incstack = 0
  4412                           	opt	stack 6
  4413                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4414                           	line	17
  4415                           	
  4416                           l2188:	
  4417  0487                     	bcf	status, 5	;RP0=0, select bank0
  4418  0487  1283               	bcf	status, 6	;RP1=0, select bank0
  4419  0488  1303               	movf	0+(___flmul@b)+03h,w
  4420  0489  0823               	andlw	080h
  4421  048A  3980               	movwf	(??___flmul+0)+0
  4422  048B  00F9               	movf	(??___flmul+0)+0,w
  4423  048C  0879               	movwf	(___flmul@sign)
  4424  048D  00A8               	line	18
  4425                           	
  4426                           l2190:	
  4427  048E                     	movf	0+(___flmul@b)+03h,w
  4428  048E  0823               	movwf	(??___flmul+0)+0
  4429  048F  00F9               	addwf	(??___flmul+0)+0,w
  4430  0490  0779               	movwf	(??___flmul+1)+0
  4431  0491  00FA               	movf	(??___flmul+1)+0,w
  4432  0492  087A               	movwf	(___flmul@bexp)
  4433  0493  00AE               	line	19
  4434                           	
  4435                           l2192:	
  4436  0494                     	btfss	0+(___flmul@b)+02h,(7)&7
  4437  0494  1FA2               	goto	u2651
  4438  0495  2C97               	goto	u2650
  4439  0496  2C98               u2651:
  4440  0497                     	goto	l2196
  4441  0497  2C9A               u2650:
  4442  0498                     	line	20
  4443                           	
  4444                           l2194:	
  4445  0498                     	bsf	(___flmul@bexp)+(0/8),(0)&7
  4446  0498  142E               	goto	l2196
  4447  0499  2C9A               	line	21
  4448                           	
  4449                           l657:	
  4450  049A                     	line	24
  4451                           	
  4452                           l2196:	
  4453  049A                     	movf	((___flmul@bexp)),w
  4454  049A  082E               	btfsc	status,2
  4455  049B  1903               	goto	u2661
  4456  049C  2C9E               	goto	u2660
  4457  049D  2C9F               u2661:
  4458  049E                     	goto	l2204
  4459  049E  2CAF               u2660:
  4460  049F                     	line	26
  4461                           	
  4462                           l2198:	
  4463  049F                     		incf	((___flmul@bexp)),w
  4464  049F  0A2E               	btfss	status,2
  4465  04A0  1D03               	goto	u2671
  4466  04A1  2CA3               	goto	u2670
  4467  04A2  2CA4               u2671:
  4468  04A3                     	goto	l2202
  4469  04A3  2CAD               u2670:
  4470  04A4                     	line	28
  4471                           	
  4472                           l2200:	
  4473  04A4                     	movlw	0x0
  4474  04A4  3000               	movwf	(___flmul@b+3)
  4475  04A5  00A3               	movlw	0x0
  4476  04A6  3000               	movwf	(___flmul@b+2)
  4477  04A7  00A2               	movlw	0x0
  4478  04A8  3000               	movwf	(___flmul@b+1)
  4479  04A9  00A1               	movlw	0x0
  4480  04AA  3000               	movwf	(___flmul@b)
  4481  04AB  00A0               
  4482                           	goto	l2202
  4483  04AC  2CAD               	line	29
  4484                           	
  4485                           l659:	
  4486  04AD                     	line	31
  4487                           	
  4488                           l2202:	
  4489  04AD                     	bsf	(___flmul@b)+(23/8),(23)&7
  4490  04AD  17A2               	line	33
  4491                           	goto	l2206
  4492  04AE  2CB8               	line	34
  4493                           	
  4494                           l658:	
  4495  04AF                     	line	36
  4496                           	
  4497                           l2204:	
  4498  04AF                     	movlw	0x0
  4499  04AF  3000               	movwf	(___flmul@b+3)
  4500  04B0  00A3               	movlw	0x0
  4501  04B1  3000               	movwf	(___flmul@b+2)
  4502  04B2  00A2               	movlw	0x0
  4503  04B3  3000               	movwf	(___flmul@b+1)
  4504  04B4  00A1               	movlw	0x0
  4505  04B5  3000               	movwf	(___flmul@b)
  4506  04B6  00A0               
  4507                           	goto	l2206
  4508  04B7  2CB8               	line	37
  4509                           	
  4510                           l660:	
  4511  04B8                     	line	39
  4512                           	
  4513                           l2206:	
  4514  04B8                     	movf	0+(___flmul@a)+03h,w
  4515  04B8  0827               	andlw	080h
  4516  04B9  3980               	movwf	(??___flmul+0)+0
  4517  04BA  00F9               	movf	(??___flmul+0)+0,w
  4518  04BB  0879               	xorwf	(___flmul@sign),f
  4519  04BC  06A8               	line	40
  4520                           	
  4521                           l2208:	
  4522  04BD                     	movf	0+(___flmul@a)+03h,w
  4523  04BD  0827               	movwf	(??___flmul+0)+0
  4524  04BE  00F9               	addwf	(??___flmul+0)+0,w
  4525  04BF  0779               	movwf	(??___flmul+1)+0
  4526  04C0  00FA               	movf	(??___flmul+1)+0,w
  4527  04C1  087A               	movwf	(___flmul@aexp)
  4528  04C2  00AD               	line	41
  4529                           	
  4530                           l2210:	
  4531  04C3                     	btfss	0+(___flmul@a)+02h,(7)&7
  4532  04C3  1FA6               	goto	u2681
  4533  04C4  2CC6               	goto	u2680
  4534  04C5  2CC7               u2681:
  4535  04C6                     	goto	l2214
  4536  04C6  2CC9               u2680:
  4537  04C7                     	line	42
  4538                           	
  4539                           l2212:	
  4540  04C7                     	bsf	(___flmul@aexp)+(0/8),(0)&7
  4541  04C7  142D               	goto	l2214
  4542  04C8  2CC9               	line	43
  4543                           	
  4544                           l661:	
  4545  04C9                     	line	45
  4546                           	
  4547                           l2214:	
  4548  04C9                     	movf	((___flmul@aexp)),w
  4549  04C9  082D               	btfsc	status,2
  4550  04CA  1903               	goto	u2691
  4551  04CB  2CCD               	goto	u2690
  4552  04CC  2CCE               u2691:
  4553  04CD                     	goto	l2222
  4554  04CD  2CDE               u2690:
  4555  04CE                     	line	48
  4556                           	
  4557                           l2216:	
  4558  04CE                     		incf	((___flmul@aexp)),w
  4559  04CE  0A2D               	btfss	status,2
  4560  04CF  1D03               	goto	u2701
  4561  04D0  2CD2               	goto	u2700
  4562  04D1  2CD3               u2701:
  4563  04D2                     	goto	l2220
  4564  04D2  2CDC               u2700:
  4565  04D3                     	line	50
  4566                           	
  4567                           l2218:	
  4568  04D3                     	movlw	0x0
  4569  04D3  3000               	movwf	(___flmul@a+3)
  4570  04D4  00A7               	movlw	0x0
  4571  04D5  3000               	movwf	(___flmul@a+2)
  4572  04D6  00A6               	movlw	0x0
  4573  04D7  3000               	movwf	(___flmul@a+1)
  4574  04D8  00A5               	movlw	0x0
  4575  04D9  3000               	movwf	(___flmul@a)
  4576  04DA  00A4               
  4577                           	goto	l2220
  4578  04DB  2CDC               	line	51
  4579                           	
  4580                           l663:	
  4581  04DC                     	line	53
  4582                           	
  4583                           l2220:	
  4584  04DC                     	bsf	(___flmul@a)+(23/8),(23)&7
  4585  04DC  17A6               	line	54
  4586                           	goto	l2224
  4587  04DD  2CE7               	line	55
  4588                           	
  4589                           l662:	
  4590  04DE                     	line	57
  4591                           	
  4592                           l2222:	
  4593  04DE                     	movlw	0x0
  4594  04DE  3000               	movwf	(___flmul@a+3)
  4595  04DF  00A7               	movlw	0x0
  4596  04E0  3000               	movwf	(___flmul@a+2)
  4597  04E1  00A6               	movlw	0x0
  4598  04E2  3000               	movwf	(___flmul@a+1)
  4599  04E3  00A5               	movlw	0x0
  4600  04E4  3000               	movwf	(___flmul@a)
  4601  04E5  00A4               
  4602                           	goto	l2224
  4603  04E6  2CE7               	line	58
  4604                           	
  4605                           l664:	
  4606  04E7                     	line	65
  4607                           	
  4608                           l2224:	
  4609  04E7                     	movf	((___flmul@aexp)),w
  4610  04E7  082D               	btfsc	status,2
  4611  04E8  1903               	goto	u2711
  4612  04E9  2CEB               	goto	u2710
  4613  04EA  2CEC               u2711:
  4614  04EB                     	goto	l2228
  4615  04EB  2CF2               u2710:
  4616  04EC                     	
  4617                           l2226:	
  4618  04EC                     	movf	((___flmul@bexp)),w
  4619  04EC  082E               	btfss	status,2
  4620  04ED  1D03               	goto	u2721
  4621  04EE  2CF0               	goto	u2720
  4622  04EF  2CF1               u2721:
  4623  04F0                     	goto	l2232
  4624  04F0  2CFC               u2720:
  4625  04F1                     	goto	l2228
  4626  04F1  2CF2               	
  4627                           l667:	
  4628  04F2                     	line	66
  4629                           	
  4630                           l2228:	
  4631  04F2                     	movlw	0x0
  4632  04F2  3000               	movwf	(?___flmul+3)
  4633  04F3  00A3               	movlw	0x0
  4634  04F4  3000               	movwf	(?___flmul+2)
  4635  04F5  00A2               	movlw	0x0
  4636  04F6  3000               	movwf	(?___flmul+1)
  4637  04F7  00A1               	movlw	0x0
  4638  04F8  3000               	movwf	(?___flmul)
  4639  04F9  00A0               
  4640                           	goto	l668
  4641  04FA  2FFB               	
  4642                           l2230:	
  4643  04FB                     	goto	l668
  4644  04FB  2FFB               	line	67
  4645                           	
  4646                           l665:	
  4647  04FC                     	line	119
  4648                           	
  4649                           l2232:	
  4650  04FC                     	movf	(___flmul@b),w
  4651  04FC  0820               	movwf	(??___flmul+0)+0
  4652  04FD  00F9               	movf	(??___flmul+0)+0,w
  4653  04FE  0879               	movwf	(__Umul8_16@multiplicand)
  4654  04FF  00F0               	movf	0+(___flmul@a)+02h,w
  4655  0500  0826               	fcall	__Umul8_16
  4656  0501  120A  158A  216A  120A  118A  	movf	(1+(?__Umul8_16)),w
  4657  0506  0871               	bcf	status, 5	;RP0=0, select bank0
  4658  0507  1283               	bcf	status, 6	;RP1=0, select bank0
  4659  0508  1303               	movwf	(___flmul@temp+1)
  4660  0509  00B4               	movf	(0+(?__Umul8_16)),w
  4661  050A  0870               	movwf	(___flmul@temp)
  4662  050B  00B3               	line	120
  4663                           	
  4664                           l2234:	
  4665  050C                     	movf	(___flmul@temp),w
  4666  050C  0833               	movwf	(??___flmul+0)+0
  4667  050D  00F9               	clrf	(??___flmul+0)+0+1
  4668  050E  01FA               	clrf	(??___flmul+0)+0+2
  4669  050F  01FB               	clrf	(??___flmul+0)+0+3
  4670  0510  01FC               	movf	3+(??___flmul+0)+0,w
  4671  0511  087C               	movwf	(___flmul@grs+3)
  4672  0512  00AC               	movf	2+(??___flmul+0)+0,w
  4673  0513  087B               	movwf	(___flmul@grs+2)
  4674  0514  00AB               	movf	1+(??___flmul+0)+0,w
  4675  0515  087A               	movwf	(___flmul@grs+1)
  4676  0516  00AA               	movf	0+(??___flmul+0)+0,w
  4677  0517  0879               	movwf	(___flmul@grs)
  4678  0518  00A9               
  4679                           	line	121
  4680                           	
  4681                           l2236:	
  4682  0519                     	movf	0+(___flmul@temp)+01h,w
  4683  0519  0834               	movwf	(??___flmul+0)+0
  4684  051A  00F9               	clrf	(??___flmul+0)+0+1
  4685  051B  01FA               	clrf	(??___flmul+0)+0+2
  4686  051C  01FB               	clrf	(??___flmul+0)+0+3
  4687  051D  01FC               	movf	3+(??___flmul+0)+0,w
  4688  051E  087C               	movwf	(___flmul@prod+3)
  4689  051F  00B2               	movf	2+(??___flmul+0)+0,w
  4690  0520  087B               	movwf	(___flmul@prod+2)
  4691  0521  00B1               	movf	1+(??___flmul+0)+0,w
  4692  0522  087A               	movwf	(___flmul@prod+1)
  4693  0523  00B0               	movf	0+(??___flmul+0)+0,w
  4694  0524  0879               	movwf	(___flmul@prod)
  4695  0525  00AF               
  4696                           	line	122
  4697                           	movf	0+(___flmul@b)+01h,w
  4698  0526  0821               	movwf	(??___flmul+0)+0
  4699  0527  00F9               	movf	(??___flmul+0)+0,w
  4700  0528  0879               	movwf	(__Umul8_16@multiplicand)
  4701  0529  00F0               	movf	0+(___flmul@a)+01h,w
  4702  052A  0825               	fcall	__Umul8_16
  4703  052B  120A  158A  216A  120A  118A  	movf	(1+(?__Umul8_16)),w
  4704  0530  0871               	bcf	status, 5	;RP0=0, select bank0
  4705  0531  1283               	bcf	status, 6	;RP1=0, select bank0
  4706  0532  1303               	movwf	(___flmul@temp+1)
  4707  0533  00B4               	movf	(0+(?__Umul8_16)),w
  4708  0534  0870               	movwf	(___flmul@temp)
  4709  0535  00B3               	line	123
  4710                           	
  4711                           l2238:	
  4712  0536                     	movf	(___flmul@temp),w
  4713  0536  0833               	movwf	(??___flmul+0)+0
  4714  0537  00F9               	clrf	(??___flmul+0)+0+1
  4715  0538  01FA               	clrf	(??___flmul+0)+0+2
  4716  0539  01FB               	clrf	(??___flmul+0)+0+3
  4717  053A  01FC               	movf	0+(??___flmul+0)+0,w
  4718  053B  0879               	addwf	(___flmul@grs),f
  4719  053C  07A9               	movf	1+(??___flmul+0)+0,w
  4720  053D  087A               	clrz
  4721  053E  1103               	skipnc
  4722  053F  1803               	addlw	1
  4723  0540  3E01               	skipnz
  4724  0541  1903               	goto	u2731
  4725  0542  2D44               	addwf	(___flmul@grs+1),f
  4726  0543  07AA               u2731:
  4727  0544                     	movf	2+(??___flmul+0)+0,w
  4728  0544  087B               	clrz
  4729  0545  1103               	skipnc
  4730  0546  1803               	addlw	1
  4731  0547  3E01               	skipnz
  4732  0548  1903               	goto	u2732
  4733  0549  2D4B               	addwf	(___flmul@grs+2),f
  4734  054A  07AB               u2732:
  4735  054B                     	movf	3+(??___flmul+0)+0,w
  4736  054B  087C               	clrz
  4737  054C  1103               	skipnc
  4738  054D  1803               	addlw	1
  4739  054E  3E01               	skipnz
  4740  054F  1903               	goto	u2733
  4741  0550  2D52               	addwf	(___flmul@grs+3),f
  4742  0551  07AC               u2733:
  4743  0552                     
  4744                           	line	124
  4745                           	
  4746                           l2240:	
  4747  0552                     	movf	0+(___flmul@temp)+01h,w
  4748  0552  0834               	movwf	(??___flmul+0)+0
  4749  0553  00F9               	clrf	(??___flmul+0)+0+1
  4750  0554  01FA               	clrf	(??___flmul+0)+0+2
  4751  0555  01FB               	clrf	(??___flmul+0)+0+3
  4752  0556  01FC               	movf	0+(??___flmul+0)+0,w
  4753  0557  0879               	addwf	(___flmul@prod),f
  4754  0558  07AF               	movf	1+(??___flmul+0)+0,w
  4755  0559  087A               	clrz
  4756  055A  1103               	skipnc
  4757  055B  1803               	addlw	1
  4758  055C  3E01               	skipnz
  4759  055D  1903               	goto	u2741
  4760  055E  2D60               	addwf	(___flmul@prod+1),f
  4761  055F  07B0               u2741:
  4762  0560                     	movf	2+(??___flmul+0)+0,w
  4763  0560  087B               	clrz
  4764  0561  1103               	skipnc
  4765  0562  1803               	addlw	1
  4766  0563  3E01               	skipnz
  4767  0564  1903               	goto	u2742
  4768  0565  2D67               	addwf	(___flmul@prod+2),f
  4769  0566  07B1               u2742:
  4770  0567                     	movf	3+(??___flmul+0)+0,w
  4771  0567  087C               	clrz
  4772  0568  1103               	skipnc
  4773  0569  1803               	addlw	1
  4774  056A  3E01               	skipnz
  4775  056B  1903               	goto	u2743
  4776  056C  2D6E               	addwf	(___flmul@prod+3),f
  4777  056D  07B2               u2743:
  4778  056E                     
  4779                           	line	125
  4780                           	movf	0+(___flmul@b)+02h,w
  4781  056E  0822               	movwf	(??___flmul+0)+0
  4782  056F  00F9               	movf	(??___flmul+0)+0,w
  4783  0570  0879               	movwf	(__Umul8_16@multiplicand)
  4784  0571  00F0               	movf	(___flmul@a),w
  4785  0572  0824               	fcall	__Umul8_16
  4786  0573  120A  158A  216A  120A  118A  	movf	(1+(?__Umul8_16)),w
  4787  0578  0871               	bcf	status, 5	;RP0=0, select bank0
  4788  0579  1283               	bcf	status, 6	;RP1=0, select bank0
  4789  057A  1303               	movwf	(___flmul@temp+1)
  4790  057B  00B4               	movf	(0+(?__Umul8_16)),w
  4791  057C  0870               	movwf	(___flmul@temp)
  4792  057D  00B3               	line	126
  4793                           	
  4794                           l2242:	
  4795  057E                     	movf	(___flmul@temp),w
  4796  057E  0833               	movwf	(??___flmul+0)+0
  4797  057F  00F9               	clrf	(??___flmul+0)+0+1
  4798  0580  01FA               	clrf	(??___flmul+0)+0+2
  4799  0581  01FB               	clrf	(??___flmul+0)+0+3
  4800  0582  01FC               	movf	0+(??___flmul+0)+0,w
  4801  0583  0879               	addwf	(___flmul@grs),f
  4802  0584  07A9               	movf	1+(??___flmul+0)+0,w
  4803  0585  087A               	clrz
  4804  0586  1103               	skipnc
  4805  0587  1803               	addlw	1
  4806  0588  3E01               	skipnz
  4807  0589  1903               	goto	u2751
  4808  058A  2D8C               	addwf	(___flmul@grs+1),f
  4809  058B  07AA               u2751:
  4810  058C                     	movf	2+(??___flmul+0)+0,w
  4811  058C  087B               	clrz
  4812  058D  1103               	skipnc
  4813  058E  1803               	addlw	1
  4814  058F  3E01               	skipnz
  4815  0590  1903               	goto	u2752
  4816  0591  2D93               	addwf	(___flmul@grs+2),f
  4817  0592  07AB               u2752:
  4818  0593                     	movf	3+(??___flmul+0)+0,w
  4819  0593  087C               	clrz
  4820  0594  1103               	skipnc
  4821  0595  1803               	addlw	1
  4822  0596  3E01               	skipnz
  4823  0597  1903               	goto	u2753
  4824  0598  2D9A               	addwf	(___flmul@grs+3),f
  4825  0599  07AC               u2753:
  4826  059A                     
  4827                           	line	127
  4828                           	
  4829                           l2244:	
  4830  059A                     	movf	0+(___flmul@temp)+01h,w
  4831  059A  0834               	movwf	(??___flmul+0)+0
  4832  059B  00F9               	clrf	(??___flmul+0)+0+1
  4833  059C  01FA               	clrf	(??___flmul+0)+0+2
  4834  059D  01FB               	clrf	(??___flmul+0)+0+3
  4835  059E  01FC               	movf	0+(??___flmul+0)+0,w
  4836  059F  0879               	addwf	(___flmul@prod),f
  4837  05A0  07AF               	movf	1+(??___flmul+0)+0,w
  4838  05A1  087A               	clrz
  4839  05A2  1103               	skipnc
  4840  05A3  1803               	addlw	1
  4841  05A4  3E01               	skipnz
  4842  05A5  1903               	goto	u2761
  4843  05A6  2DA8               	addwf	(___flmul@prod+1),f
  4844  05A7  07B0               u2761:
  4845  05A8                     	movf	2+(??___flmul+0)+0,w
  4846  05A8  087B               	clrz
  4847  05A9  1103               	skipnc
  4848  05AA  1803               	addlw	1
  4849  05AB  3E01               	skipnz
  4850  05AC  1903               	goto	u2762
  4851  05AD  2DAF               	addwf	(___flmul@prod+2),f
  4852  05AE  07B1               u2762:
  4853  05AF                     	movf	3+(??___flmul+0)+0,w
  4854  05AF  087C               	clrz
  4855  05B0  1103               	skipnc
  4856  05B1  1803               	addlw	1
  4857  05B2  3E01               	skipnz
  4858  05B3  1903               	goto	u2763
  4859  05B4  2DB6               	addwf	(___flmul@prod+3),f
  4860  05B5  07B2               u2763:
  4861  05B6                     
  4862                           	line	128
  4863                           	
  4864                           l2246:	
  4865  05B6                     	movlw	08h
  4866  05B6  3008               	movwf	(??___flmul+0)+0
  4867  05B7  00F9               u2775:
  4868  05B8                     	clrc
  4869  05B8  1003               	rlf	(___flmul@grs),f
  4870  05B9  0DA9               	rlf	(___flmul@grs+1),f
  4871  05BA  0DAA               	rlf	(___flmul@grs+2),f
  4872  05BB  0DAB               	rlf	(___flmul@grs+3),f
  4873  05BC  0DAC               	decfsz	(??___flmul+0)+0
  4874  05BD  0BF9               	goto	u2775
  4875  05BE  2DB8               	line	129
  4876                           	
  4877                           l2248:	
  4878  05BF                     	movf	0+(___flmul@b)+01h,w
  4879  05BF  0821               	movwf	(??___flmul+0)+0
  4880  05C0  00F9               	movf	(??___flmul+0)+0,w
  4881  05C1  0879               	movwf	(__Umul8_16@multiplicand)
  4882  05C2  00F0               	movf	(___flmul@a),w
  4883  05C3  0824               	fcall	__Umul8_16
  4884  05C4  120A  158A  216A  120A  118A  	movf	(1+(?__Umul8_16)),w
  4885  05C9  0871               	bcf	status, 5	;RP0=0, select bank0
  4886  05CA  1283               	bcf	status, 6	;RP1=0, select bank0
  4887  05CB  1303               	movwf	(___flmul@temp+1)
  4888  05CC  00B4               	movf	(0+(?__Umul8_16)),w
  4889  05CD  0870               	movwf	(___flmul@temp)
  4890  05CE  00B3               	line	130
  4891                           	
  4892                           l2250:	
  4893  05CF                     	movf	(___flmul@temp),w
  4894  05CF  0833               	movwf	((??___flmul+0)+0)
  4895  05D0  00F9               	movf	(___flmul@temp+1),w
  4896  05D1  0834               	movwf	((??___flmul+0)+0+1)
  4897  05D2  00FA               	clrf	((??___flmul+0)+0+2)
  4898  05D3  01FB               	clrf	((??___flmul+0)+0+3)
  4899  05D4  01FC               	movf	0+(??___flmul+0)+0,w
  4900  05D5  0879               	addwf	(___flmul@grs),f
  4901  05D6  07A9               	movf	1+(??___flmul+0)+0,w
  4902  05D7  087A               	clrz
  4903  05D8  1103               	skipnc
  4904  05D9  1803               	addlw	1
  4905  05DA  3E01               	skipnz
  4906  05DB  1903               	goto	u2781
  4907  05DC  2DDE               	addwf	(___flmul@grs+1),f
  4908  05DD  07AA               u2781:
  4909  05DE                     	movf	2+(??___flmul+0)+0,w
  4910  05DE  087B               	clrz
  4911  05DF  1103               	skipnc
  4912  05E0  1803               	addlw	1
  4913  05E1  3E01               	skipnz
  4914  05E2  1903               	goto	u2782
  4915  05E3  2DE5               	addwf	(___flmul@grs+2),f
  4916  05E4  07AB               u2782:
  4917  05E5                     	movf	3+(??___flmul+0)+0,w
  4918  05E5  087C               	clrz
  4919  05E6  1103               	skipnc
  4920  05E7  1803               	addlw	1
  4921  05E8  3E01               	skipnz
  4922  05E9  1903               	goto	u2783
  4923  05EA  2DEC               	addwf	(___flmul@grs+3),f
  4924  05EB  07AC               u2783:
  4925  05EC                     
  4926                           	line	131
  4927                           	
  4928                           l2252:	
  4929  05EC                     	movf	(___flmul@b),w
  4930  05EC  0820               	movwf	(??___flmul+0)+0
  4931  05ED  00F9               	movf	(??___flmul+0)+0,w
  4932  05EE  0879               	movwf	(__Umul8_16@multiplicand)
  4933  05EF  00F0               	movf	0+(___flmul@a)+01h,w
  4934  05F0  0825               	fcall	__Umul8_16
  4935  05F1  120A  158A  216A  120A  118A  	movf	(1+(?__Umul8_16)),w
  4936  05F6  0871               	bcf	status, 5	;RP0=0, select bank0
  4937  05F7  1283               	bcf	status, 6	;RP1=0, select bank0
  4938  05F8  1303               	movwf	(___flmul@temp+1)
  4939  05F9  00B4               	movf	(0+(?__Umul8_16)),w
  4940  05FA  0870               	movwf	(___flmul@temp)
  4941  05FB  00B3               	line	132
  4942                           	
  4943                           l2254:	
  4944  05FC                     	movf	(___flmul@temp),w
  4945  05FC  0833               	movwf	((??___flmul+0)+0)
  4946  05FD  00F9               	movf	(___flmul@temp+1),w
  4947  05FE  0834               	movwf	((??___flmul+0)+0+1)
  4948  05FF  00FA               	clrf	((??___flmul+0)+0+2)
  4949  0600  01FB               	clrf	((??___flmul+0)+0+3)
  4950  0601  01FC               	movf	0+(??___flmul+0)+0,w
  4951  0602  0879               	addwf	(___flmul@grs),f
  4952  0603  07A9               	movf	1+(??___flmul+0)+0,w
  4953  0604  087A               	clrz
  4954  0605  1103               	skipnc
  4955  0606  1803               	addlw	1
  4956  0607  3E01               	skipnz
  4957  0608  1903               	goto	u2791
  4958  0609  2E0B               	addwf	(___flmul@grs+1),f
  4959  060A  07AA               u2791:
  4960  060B                     	movf	2+(??___flmul+0)+0,w
  4961  060B  087B               	clrz
  4962  060C  1103               	skipnc
  4963  060D  1803               	addlw	1
  4964  060E  3E01               	skipnz
  4965  060F  1903               	goto	u2792
  4966  0610  2E12               	addwf	(___flmul@grs+2),f
  4967  0611  07AB               u2792:
  4968  0612                     	movf	3+(??___flmul+0)+0,w
  4969  0612  087C               	clrz
  4970  0613  1103               	skipnc
  4971  0614  1803               	addlw	1
  4972  0615  3E01               	skipnz
  4973  0616  1903               	goto	u2793
  4974  0617  2E19               	addwf	(___flmul@grs+3),f
  4975  0618  07AC               u2793:
  4976  0619                     
  4977                           	line	133
  4978                           	
  4979                           l2256:	
  4980  0619                     	movlw	08h
  4981  0619  3008               	movwf	(??___flmul+0)+0
  4982  061A  00F9               u2805:
  4983  061B                     	clrc
  4984  061B  1003               	rlf	(___flmul@grs),f
  4985  061C  0DA9               	rlf	(___flmul@grs+1),f
  4986  061D  0DAA               	rlf	(___flmul@grs+2),f
  4987  061E  0DAB               	rlf	(___flmul@grs+3),f
  4988  061F  0DAC               	decfsz	(??___flmul+0)+0
  4989  0620  0BF9               	goto	u2805
  4990  0621  2E1B               	line	134
  4991                           	movf	(___flmul@b),w
  4992  0622  0820               	movwf	(??___flmul+0)+0
  4993  0623  00F9               	movf	(??___flmul+0)+0,w
  4994  0624  0879               	movwf	(__Umul8_16@multiplicand)
  4995  0625  00F0               	movf	(___flmul@a),w
  4996  0626  0824               	fcall	__Umul8_16
  4997  0627  120A  158A  216A  120A  118A  	movf	(1+(?__Umul8_16)),w
  4998  062C  0871               	bcf	status, 5	;RP0=0, select bank0
  4999  062D  1283               	bcf	status, 6	;RP1=0, select bank0
  5000  062E  1303               	movwf	(___flmul@temp+1)
  5001  062F  00B4               	movf	(0+(?__Umul8_16)),w
  5002  0630  0870               	movwf	(___flmul@temp)
  5003  0631  00B3               	line	135
  5004                           	
  5005                           l2258:	
  5006  0632                     	movf	(___flmul@temp),w
  5007  0632  0833               	movwf	((??___flmul+0)+0)
  5008  0633  00F9               	movf	(___flmul@temp+1),w
  5009  0634  0834               	movwf	((??___flmul+0)+0+1)
  5010  0635  00FA               	clrf	((??___flmul+0)+0+2)
  5011  0636  01FB               	clrf	((??___flmul+0)+0+3)
  5012  0637  01FC               	movf	0+(??___flmul+0)+0,w
  5013  0638  0879               	addwf	(___flmul@grs),f
  5014  0639  07A9               	movf	1+(??___flmul+0)+0,w
  5015  063A  087A               	clrz
  5016  063B  1103               	skipnc
  5017  063C  1803               	addlw	1
  5018  063D  3E01               	skipnz
  5019  063E  1903               	goto	u2811
  5020  063F  2E41               	addwf	(___flmul@grs+1),f
  5021  0640  07AA               u2811:
  5022  0641                     	movf	2+(??___flmul+0)+0,w
  5023  0641  087B               	clrz
  5024  0642  1103               	skipnc
  5025  0643  1803               	addlw	1
  5026  0644  3E01               	skipnz
  5027  0645  1903               	goto	u2812
  5028  0646  2E48               	addwf	(___flmul@grs+2),f
  5029  0647  07AB               u2812:
  5030  0648                     	movf	3+(??___flmul+0)+0,w
  5031  0648  087C               	clrz
  5032  0649  1103               	skipnc
  5033  064A  1803               	addlw	1
  5034  064B  3E01               	skipnz
  5035  064C  1903               	goto	u2813
  5036  064D  2E4F               	addwf	(___flmul@grs+3),f
  5037  064E  07AC               u2813:
  5038  064F                     
  5039                           	line	136
  5040                           	
  5041                           l2260:	
  5042  064F                     	movf	0+(___flmul@b)+01h,w
  5043  064F  0821               	movwf	(??___flmul+0)+0
  5044  0650  00F9               	movf	(??___flmul+0)+0,w
  5045  0651  0879               	movwf	(__Umul8_16@multiplicand)
  5046  0652  00F0               	movf	0+(___flmul@a)+02h,w
  5047  0653  0826               	fcall	__Umul8_16
  5048  0654  120A  158A  216A  120A  118A  	movf	(1+(?__Umul8_16)),w
  5049  0659  0871               	bcf	status, 5	;RP0=0, select bank0
  5050  065A  1283               	bcf	status, 6	;RP1=0, select bank0
  5051  065B  1303               	movwf	(___flmul@temp+1)
  5052  065C  00B4               	movf	(0+(?__Umul8_16)),w
  5053  065D  0870               	movwf	(___flmul@temp)
  5054  065E  00B3               	line	137
  5055                           	movf	(___flmul@temp),w
  5056  065F  0833               	movwf	((??___flmul+0)+0)
  5057  0660  00F9               	movf	(___flmul@temp+1),w
  5058  0661  0834               	movwf	((??___flmul+0)+0+1)
  5059  0662  00FA               	clrf	((??___flmul+0)+0+2)
  5060  0663  01FB               	clrf	((??___flmul+0)+0+3)
  5061  0664  01FC               	movf	0+(??___flmul+0)+0,w
  5062  0665  0879               	addwf	(___flmul@prod),f
  5063  0666  07AF               	movf	1+(??___flmul+0)+0,w
  5064  0667  087A               	clrz
  5065  0668  1103               	skipnc
  5066  0669  1803               	addlw	1
  5067  066A  3E01               	skipnz
  5068  066B  1903               	goto	u2821
  5069  066C  2E6E               	addwf	(___flmul@prod+1),f
  5070  066D  07B0               u2821:
  5071  066E                     	movf	2+(??___flmul+0)+0,w
  5072  066E  087B               	clrz
  5073  066F  1103               	skipnc
  5074  0670  1803               	addlw	1
  5075  0671  3E01               	skipnz
  5076  0672  1903               	goto	u2822
  5077  0673  2E75               	addwf	(___flmul@prod+2),f
  5078  0674  07B1               u2822:
  5079  0675                     	movf	3+(??___flmul+0)+0,w
  5080  0675  087C               	clrz
  5081  0676  1103               	skipnc
  5082  0677  1803               	addlw	1
  5083  0678  3E01               	skipnz
  5084  0679  1903               	goto	u2823
  5085  067A  2E7C               	addwf	(___flmul@prod+3),f
  5086  067B  07B2               u2823:
  5087  067C                     
  5088                           	line	138
  5089                           	
  5090                           l2262:	
  5091  067C                     	movf	0+(___flmul@b)+02h,w
  5092  067C  0822               	movwf	(??___flmul+0)+0
  5093  067D  00F9               	movf	(??___flmul+0)+0,w
  5094  067E  0879               	movwf	(__Umul8_16@multiplicand)
  5095  067F  00F0               	movf	0+(___flmul@a)+01h,w
  5096  0680  0825               	fcall	__Umul8_16
  5097  0681  120A  158A  216A  120A  118A  	movf	(1+(?__Umul8_16)),w
  5098  0686  0871               	bcf	status, 5	;RP0=0, select bank0
  5099  0687  1283               	bcf	status, 6	;RP1=0, select bank0
  5100  0688  1303               	movwf	(___flmul@temp+1)
  5101  0689  00B4               	movf	(0+(?__Umul8_16)),w
  5102  068A  0870               	movwf	(___flmul@temp)
  5103  068B  00B3               	line	139
  5104                           	
  5105                           l2264:	
  5106  068C                     	movf	(___flmul@temp),w
  5107  068C  0833               	movwf	((??___flmul+0)+0)
  5108  068D  00F9               	movf	(___flmul@temp+1),w
  5109  068E  0834               	movwf	((??___flmul+0)+0+1)
  5110  068F  00FA               	clrf	((??___flmul+0)+0+2)
  5111  0690  01FB               	clrf	((??___flmul+0)+0+3)
  5112  0691  01FC               	movf	0+(??___flmul+0)+0,w
  5113  0692  0879               	addwf	(___flmul@prod),f
  5114  0693  07AF               	movf	1+(??___flmul+0)+0,w
  5115  0694  087A               	clrz
  5116  0695  1103               	skipnc
  5117  0696  1803               	addlw	1
  5118  0697  3E01               	skipnz
  5119  0698  1903               	goto	u2831
  5120  0699  2E9B               	addwf	(___flmul@prod+1),f
  5121  069A  07B0               u2831:
  5122  069B                     	movf	2+(??___flmul+0)+0,w
  5123  069B  087B               	clrz
  5124  069C  1103               	skipnc
  5125  069D  1803               	addlw	1
  5126  069E  3E01               	skipnz
  5127  069F  1903               	goto	u2832
  5128  06A0  2EA2               	addwf	(___flmul@prod+2),f
  5129  06A1  07B1               u2832:
  5130  06A2                     	movf	3+(??___flmul+0)+0,w
  5131  06A2  087C               	clrz
  5132  06A3  1103               	skipnc
  5133  06A4  1803               	addlw	1
  5134  06A5  3E01               	skipnz
  5135  06A6  1903               	goto	u2833
  5136  06A7  2EA9               	addwf	(___flmul@prod+3),f
  5137  06A8  07B2               u2833:
  5138  06A9                     
  5139                           	line	140
  5140                           	movf	0+(___flmul@b)+02h,w
  5141  06A9  0822               	movwf	(??___flmul+0)+0
  5142  06AA  00F9               	movf	(??___flmul+0)+0,w
  5143  06AB  0879               	movwf	(__Umul8_16@multiplicand)
  5144  06AC  00F0               	movf	0+(___flmul@a)+02h,w
  5145  06AD  0826               	fcall	__Umul8_16
  5146  06AE  120A  158A  216A  120A  118A  	movf	(1+(?__Umul8_16)),w
  5147  06B3  0871               	bcf	status, 5	;RP0=0, select bank0
  5148  06B4  1283               	bcf	status, 6	;RP1=0, select bank0
  5149  06B5  1303               	movwf	(___flmul@temp+1)
  5150  06B6  00B4               	movf	(0+(?__Umul8_16)),w
  5151  06B7  0870               	movwf	(___flmul@temp)
  5152  06B8  00B3               	line	141
  5153                           	
  5154                           l2266:	
  5155  06B9                     	movf	(___flmul@temp),w
  5156  06B9  0833               	movwf	((??___flmul+0)+0)
  5157  06BA  00F9               	movf	(___flmul@temp+1),w
  5158  06BB  0834               	movwf	((??___flmul+0)+0+1)
  5159  06BC  00FA               	clrf	((??___flmul+0)+0+2)
  5160  06BD  01FB               	clrf	((??___flmul+0)+0+3)
  5161  06BE  01FC               	movlw	08h
  5162  06BF  3008               u2845:
  5163  06C0                     	clrc
  5164  06C0  1003               	rlf	(??___flmul+0)+0,f
  5165  06C1  0DF9               	rlf	(??___flmul+0)+1,f
  5166  06C2  0DFA               	rlf	(??___flmul+0)+2,f
  5167  06C3  0DFB               	rlf	(??___flmul+0)+3,f
  5168  06C4  0DFC               u2840:
  5169  06C5                     	addlw	-1
  5170  06C5  3EFF               	skipz
  5171  06C6  1D03               	goto	u2845
  5172  06C7  2EC0               	movf	0+(??___flmul+0)+0,w
  5173  06C8  0879               	addwf	(___flmul@prod),f
  5174  06C9  07AF               	movf	1+(??___flmul+0)+0,w
  5175  06CA  087A               	clrz
  5176  06CB  1103               	skipnc
  5177  06CC  1803               	addlw	1
  5178  06CD  3E01               	skipnz
  5179  06CE  1903               	goto	u2851
  5180  06CF  2ED1               	addwf	(___flmul@prod+1),f
  5181  06D0  07B0               u2851:
  5182  06D1                     	movf	2+(??___flmul+0)+0,w
  5183  06D1  087B               	clrz
  5184  06D2  1103               	skipnc
  5185  06D3  1803               	addlw	1
  5186  06D4  3E01               	skipnz
  5187  06D5  1903               	goto	u2852
  5188  06D6  2ED8               	addwf	(___flmul@prod+2),f
  5189  06D7  07B1               u2852:
  5190  06D8                     	movf	3+(??___flmul+0)+0,w
  5191  06D8  087C               	clrz
  5192  06D9  1103               	skipnc
  5193  06DA  1803               	addlw	1
  5194  06DB  3E01               	skipnz
  5195  06DC  1903               	goto	u2853
  5196  06DD  2EDF               	addwf	(___flmul@prod+3),f
  5197  06DE  07B2               u2853:
  5198  06DF                     
  5199                           	line	145
  5200                           	
  5201                           l2268:	
  5202  06DF                     	movf	(___flmul@grs),w
  5203  06DF  0829               	movwf	(??___flmul+0)+0
  5204  06E0  00F9               	movf	(___flmul@grs+1),w
  5205  06E1  082A               	movwf	((??___flmul+0)+0+1)
  5206  06E2  00FA               	movf	(___flmul@grs+2),w
  5207  06E3  082B               	movwf	((??___flmul+0)+0+2)
  5208  06E4  00FB               	movf	(___flmul@grs+3),w
  5209  06E5  082C               	movwf	((??___flmul+0)+0+3)
  5210  06E6  00FC               	movlw	018h
  5211  06E7  3018               u2865:
  5212  06E8                     	clrc
  5213  06E8  1003               	rrf	(??___flmul+0)+3,f
  5214  06E9  0CFC               	rrf	(??___flmul+0)+2,f
  5215  06EA  0CFB               	rrf	(??___flmul+0)+1,f
  5216  06EB  0CFA               	rrf	(??___flmul+0)+0,f
  5217  06EC  0CF9               u2860:
  5218  06ED                     	addlw	-1
  5219  06ED  3EFF               	skipz
  5220  06EE  1D03               	goto	u2865
  5221  06EF  2EE8               	movf	0+(??___flmul+0)+0,w
  5222  06F0  0879               	addwf	(___flmul@prod),f
  5223  06F1  07AF               	movf	1+(??___flmul+0)+0,w
  5224  06F2  087A               	clrz
  5225  06F3  1103               	skipnc
  5226  06F4  1803               	addlw	1
  5227  06F5  3E01               	skipnz
  5228  06F6  1903               	goto	u2871
  5229  06F7  2EF9               	addwf	(___flmul@prod+1),f
  5230  06F8  07B0               u2871:
  5231  06F9                     	movf	2+(??___flmul+0)+0,w
  5232  06F9  087B               	clrz
  5233  06FA  1103               	skipnc
  5234  06FB  1803               	addlw	1
  5235  06FC  3E01               	skipnz
  5236  06FD  1903               	goto	u2872
  5237  06FE  2F00               	addwf	(___flmul@prod+2),f
  5238  06FF  07B1               u2872:
  5239  0700                     	movf	3+(??___flmul+0)+0,w
  5240  0700  087C               	clrz
  5241  0701  1103               	skipnc
  5242  0702  1803               	addlw	1
  5243  0703  3E01               	skipnz
  5244  0704  1903               	goto	u2873
  5245  0705  2F07               	addwf	(___flmul@prod+3),f
  5246  0706  07B2               u2873:
  5247  0707                     
  5248                           	line	146
  5249                           	
  5250                           l2270:	
  5251  0707                     	movlw	08h
  5252  0707  3008               	movwf	(??___flmul+0)+0
  5253  0708  00F9               u2885:
  5254  0709                     	clrc
  5255  0709  1003               	rlf	(___flmul@grs),f
  5256  070A  0DA9               	rlf	(___flmul@grs+1),f
  5257  070B  0DAA               	rlf	(___flmul@grs+2),f
  5258  070C  0DAB               	rlf	(___flmul@grs+3),f
  5259  070D  0DAC               	decfsz	(??___flmul+0)+0
  5260  070E  0BF9               	goto	u2885
  5261  070F  2F09               	line	149
  5262                           	
  5263                           l2272:	
  5264  0710                     	movf	(___flmul@bexp),w
  5265  0710  082E               	addwf	(___flmul@aexp),w
  5266  0711  072D               	movwf	(??___flmul+0)+0
  5267  0712  00F9               	clrf	(??___flmul+0)+0+1
  5268  0713  01FA               	rlf	1+(??___flmul+0)+0,f
  5269  0714  0DFA               	
  5270                           	movf	0+(??___flmul+0)+0,w
  5271  0715  0879               	addlw	low(-126)
  5272  0716  3E82               	movwf	(___flmul@temp)
  5273  0717  00B3               	movf	1+(??___flmul+0)+0,w
  5274  0718  087A               	skipnc
  5275  0719  1803               	addlw	1
  5276  071A  3E01               	addlw	high(-126)
  5277  071B  3EFF               	movwf	1+(___flmul@temp)
  5278  071C  00B4               	line	152
  5279                           	goto	l2284
  5280  071D  2F3D               	
  5281                           l670:	
  5282  071E                     	line	153
  5283                           	
  5284                           l2274:	
  5285  071E                     	movlw	01h
  5286  071E  3001               	movwf	(??___flmul+0)+0
  5287  071F  00F9               u2895:
  5288  0720                     	clrc
  5289  0720  1003               	rlf	(___flmul@prod),f
  5290  0721  0DAF               	rlf	(___flmul@prod+1),f
  5291  0722  0DB0               	rlf	(___flmul@prod+2),f
  5292  0723  0DB1               	rlf	(___flmul@prod+3),f
  5293  0724  0DB2               	decfsz	(??___flmul+0)+0
  5294  0725  0BF9               	goto	u2895
  5295  0726  2F20               	line	154
  5296                           	
  5297                           l2276:	
  5298  0727                     	btfss	(___flmul@grs+3),(31)&7
  5299  0727  1FAC               	goto	u2901
  5300  0728  2F2A               	goto	u2900
  5301  0729  2F2B               u2901:
  5302  072A                     	goto	l2280
  5303  072A  2F2D               u2900:
  5304  072B                     	line	155
  5305                           	
  5306                           l2278:	
  5307  072B                     	bsf	(___flmul@prod)+(0/8),(0)&7
  5308  072B  142F               	goto	l2280
  5309  072C  2F2D               	line	156
  5310                           	
  5311                           l671:	
  5312  072D                     	line	157
  5313                           	
  5314                           l2280:	
  5315  072D                     	movlw	01h
  5316  072D  3001               	movwf	(??___flmul+0)+0
  5317  072E  00F9               u2915:
  5318  072F                     	clrc
  5319  072F  1003               	rlf	(___flmul@grs),f
  5320  0730  0DA9               	rlf	(___flmul@grs+1),f
  5321  0731  0DAA               	rlf	(___flmul@grs+2),f
  5322  0732  0DAB               	rlf	(___flmul@grs+3),f
  5323  0733  0DAC               	decfsz	(??___flmul+0)+0
  5324  0734  0BF9               	goto	u2915
  5325  0735  2F2F               	line	158
  5326                           	
  5327                           l2282:	
  5328  0736                     	movlw	0FFh
  5329  0736  30FF               	addwf	(___flmul@temp),f
  5330  0737  07B3               	skipnc
  5331  0738  1803               	incf	(___flmul@temp+1),f
  5332  0739  0AB4               	movlw	0FFh
  5333  073A  30FF               	addwf	(___flmul@temp+1),f
  5334  073B  07B4               	goto	l2284
  5335  073C  2F3D               	line	159
  5336                           	
  5337                           l669:	
  5338  073D                     	line	152
  5339                           	
  5340                           l2284:	
  5341  073D                     	btfss	(___flmul@prod+2),(23)&7
  5342  073D  1FB1               	goto	u2921
  5343  073E  2F40               	goto	u2920
  5344  073F  2F41               u2921:
  5345  0740                     	goto	l2274
  5346  0740  2F1E               u2920:
  5347  0741                     	goto	l2286
  5348  0741  2F42               	
  5349                           l672:	
  5350  0742                     	line	163
  5351                           	
  5352                           l2286:	
  5353  0742                     	clrf	(___flmul@aexp)
  5354  0742  01AD               	line	164
  5355                           	
  5356                           l2288:	
  5357  0743                     	btfss	(___flmul@grs+3),(31)&7
  5358  0743  1FAC               	goto	u2931
  5359  0744  2F46               	goto	u2930
  5360  0745  2F47               u2931:
  5361  0746                     	goto	l2296
  5362  0746  2F67               u2930:
  5363  0747                     	line	165
  5364                           	
  5365                           l2290:	
  5366  0747                     	movlw	0FFh
  5367  0747  30FF               	andwf	(___flmul@grs),w
  5368  0748  0529               	movwf	(??___flmul+0)+0
  5369  0749  00F9               	movlw	0FFh
  5370  074A  30FF               	andwf	(___flmul@grs+1),w
  5371  074B  052A               	movwf	((??___flmul+0)+0+1)
  5372  074C  00FA               	movlw	0FFh
  5373  074D  30FF               	andwf	(___flmul@grs+2),w
  5374  074E  052B               	movwf	((??___flmul+0)+0+2)
  5375  074F  00FB               	movlw	07Fh
  5376  0750  307F               	andwf	(___flmul@grs+3),w
  5377  0751  052C               	movwf	((??___flmul+0)+0+3)
  5378  0752  00FC               	movf	3+(??___flmul+0)+0,w
  5379  0753  087C               	iorwf	2+(??___flmul+0)+0,w
  5380  0754  047B               	iorwf	1+(??___flmul+0)+0,w
  5381  0755  047A               	iorwf	0+(??___flmul+0)+0,w
  5382  0756  0479               	skipnz
  5383  0757  1903               	goto	u2941
  5384  0758  2F5A               	goto	u2940
  5385  0759  2F5B               u2941:
  5386  075A                     	goto	l674
  5387  075A  2F5E               u2940:
  5388  075B                     	line	166
  5389                           	
  5390                           l2292:	
  5391  075B                     	clrf	(___flmul@aexp)
  5392  075B  01AD               	incf	(___flmul@aexp),f
  5393  075C  0AAD               	line	167
  5394                           	goto	l2296
  5395  075D  2F67               	line	168
  5396                           	
  5397                           l674:	
  5398  075E                     	line	169
  5399                           	btfss	(___flmul@prod),(0)&7
  5400  075E  1C2F               	goto	u2951
  5401  075F  2F61               	goto	u2950
  5402  0760  2F62               u2951:
  5403  0761                     	goto	l2296
  5404  0761  2F67               u2950:
  5405  0762                     	line	170
  5406                           	
  5407                           l2294:	
  5408  0762                     	clrf	(___flmul@aexp)
  5409  0762  01AD               	incf	(___flmul@aexp),f
  5410  0763  0AAD               	goto	l2296
  5411  0764  2F67               	line	171
  5412                           	
  5413                           l676:	
  5414  0765                     	goto	l2296
  5415  0765  2F67               	line	172
  5416                           	
  5417                           l675:	
  5418  0766                     	goto	l2296
  5419  0766  2F67               	line	173
  5420                           	
  5421                           l673:	
  5422  0767                     	line	174
  5423                           	
  5424                           l2296:	
  5425  0767                     	movf	((___flmul@aexp)),w
  5426  0767  082D               	btfsc	status,2
  5427  0768  1903               	goto	u2961
  5428  0769  2F6B               	goto	u2960
  5429  076A  2F6C               u2961:
  5430  076B                     	goto	l2306
  5431  076B  2F9F               u2960:
  5432  076C                     	line	175
  5433                           	
  5434                           l2298:	
  5435  076C                     	movlw	01h
  5436  076C  3001               	addwf	(___flmul@prod),f
  5437  076D  07AF               	movlw	0
  5438  076E  3000               	skipnc
  5439  076F  1803               movlw 1
  5440  0770  3001               	addwf	(___flmul@prod+1),f
  5441  0771  07B0               	movlw	0
  5442  0772  3000               	skipnc
  5443  0773  1803               movlw 1
  5444  0774  3001               	addwf	(___flmul@prod+2),f
  5445  0775  07B1               	movlw	0
  5446  0776  3000               	skipnc
  5447  0777  1803               movlw 1
  5448  0778  3001               	addwf	(___flmul@prod+3),f
  5449  0779  07B2               	line	176
  5450                           	
  5451                           l2300:	
  5452  077A                     	btfss	(___flmul@prod+3),(24)&7
  5453  077A  1C32               	goto	u2971
  5454  077B  2F7D               	goto	u2970
  5455  077C  2F7E               u2971:
  5456  077D                     	goto	l2306
  5457  077D  2F9F               u2970:
  5458  077E                     	line	177
  5459                           	
  5460                           l2302:	
  5461  077E                     	movf	(___flmul@prod),w
  5462  077E  082F               	movwf	(??___flmul+0)+0
  5463  077F  00F9               	movf	(___flmul@prod+1),w
  5464  0780  0830               	movwf	((??___flmul+0)+0+1)
  5465  0781  00FA               	movf	(___flmul@prod+2),w
  5466  0782  0831               	movwf	((??___flmul+0)+0+2)
  5467  0783  00FB               	movf	(___flmul@prod+3),w
  5468  0784  0832               	movwf	((??___flmul+0)+0+3)
  5469  0785  00FC               	movlw	01h
  5470  0786  3001               	movwf	(??___flmul+4)+0
  5471  0787  00FD               u2985:
  5472  0788                     	rlf	(??___flmul+0)+3,w
  5473  0788  0D7C               	rrf	(??___flmul+0)+3,f
  5474  0789  0CFC               	rrf	(??___flmul+0)+2,f
  5475  078A  0CFB               	rrf	(??___flmul+0)+1,f
  5476  078B  0CFA               	rrf	(??___flmul+0)+0,f
  5477  078C  0CF9               u2980:
  5478  078D                     	decfsz	(??___flmul+4)+0,f
  5479  078D  0BFD               	goto	u2985
  5480  078E  2F88               	movf	3+(??___flmul+0)+0,w
  5481  078F  087C               	movwf	(___flmul@prod+3)
  5482  0790  00B2               	movf	2+(??___flmul+0)+0,w
  5483  0791  087B               	movwf	(___flmul@prod+2)
  5484  0792  00B1               	movf	1+(??___flmul+0)+0,w
  5485  0793  087A               	movwf	(___flmul@prod+1)
  5486  0794  00B0               	movf	0+(??___flmul+0)+0,w
  5487  0795  0879               	movwf	(___flmul@prod)
  5488  0796  00AF               
  5489                           	line	178
  5490                           	
  5491                           l2304:	
  5492  0797                     	movlw	01h
  5493  0797  3001               	addwf	(___flmul@temp),f
  5494  0798  07B3               	skipnc
  5495  0799  1803               	incf	(___flmul@temp+1),f
  5496  079A  0AB4               	movlw	0
  5497  079B  3000               	addwf	(___flmul@temp+1),f
  5498  079C  07B4               	goto	l2306
  5499  079D  2F9F               	line	179
  5500                           	
  5501                           l678:	
  5502  079E                     	goto	l2306
  5503  079E  2F9F               	line	180
  5504                           	
  5505                           l677:	
  5506  079F                     	line	183
  5507                           	
  5508                           l2306:	
  5509  079F                     	movf	(___flmul@temp+1),w
  5510  079F  0834               	xorlw	80h
  5511  07A0  3A80               	movwf	btemp+1
  5512  07A1  00FF               	movlw	(0)^80h
  5513  07A2  3080               	subwf	btemp+1,w
  5514  07A3  027F               	skipz
  5515  07A4  1D03               	goto	u2995
  5516  07A5  2FA8               	movlw	0FFh
  5517  07A6  30FF               	subwf	(___flmul@temp),w
  5518  07A7  0233               u2995:
  5519  07A8                     
  5520                           	skipc
  5521  07A8  1C03               	goto	u2991
  5522  07A9  2FAB               	goto	u2990
  5523  07AA  2FAC               u2991:
  5524  07AB                     	goto	l2310
  5525  07AB  2FB7               u2990:
  5526  07AC                     	line	184
  5527                           	
  5528                           l2308:	
  5529  07AC                     	movlw	07Fh
  5530  07AC  307F               	bcf	status, 5	;RP0=0, select bank0
  5531  07AD  1283               	bcf	status, 6	;RP1=0, select bank0
  5532  07AE  1303               	movwf	(___flmul@prod+3)
  5533  07AF  00B2               	movlw	080h
  5534  07B0  3080               	movwf	(___flmul@prod+2)
  5535  07B1  00B1               	movlw	0
  5536  07B2  3000               	movwf	(___flmul@prod+1)
  5537  07B3  00B0               	movlw	0
  5538  07B4  3000               	movwf	(___flmul@prod)
  5539  07B5  00AF               
  5540                           	line	185
  5541                           	goto	l680
  5542  07B6  2FEE               	line	187
  5543                           	
  5544                           l679:	
  5545  07B7                     	
  5546                           l2310:	
  5547  07B7                     	bcf	status, 5	;RP0=0, select bank0
  5548  07B7  1283               	bcf	status, 6	;RP1=0, select bank0
  5549  07B8  1303               	movf	(___flmul@temp+1),w
  5550  07B9  0834               	xorlw	80h
  5551  07BA  3A80               	movwf	btemp+1
  5552  07BB  00FF               	movlw	(0)^80h
  5553  07BC  3080               	subwf	btemp+1,w
  5554  07BD  027F               	skipz
  5555  07BE  1D03               	goto	u3005
  5556  07BF  2FC2               	movlw	01h
  5557  07C0  3001               	subwf	(___flmul@temp),w
  5558  07C1  0233               u3005:
  5559  07C2                     
  5560                           	skipnc
  5561  07C2  1803               	goto	u3001
  5562  07C3  2FC5               	goto	u3000
  5563  07C4  2FC6               u3001:
  5564  07C5                     	goto	l2316
  5565  07C5  2FD2               u3000:
  5566  07C6                     	line	188
  5567                           	
  5568                           l2312:	
  5569  07C6                     	movlw	high highword(0)
  5570  07C6  3000               	bcf	status, 5	;RP0=0, select bank0
  5571  07C7  1283               	bcf	status, 6	;RP1=0, select bank0
  5572  07C8  1303               	movwf	(___flmul@prod+3)
  5573  07C9  00B2               	movlw	low highword(0)
  5574  07CA  3000               	movwf	(___flmul@prod+2)
  5575  07CB  00B1               	movlw	high(0)
  5576  07CC  3000               	movwf	(___flmul@prod+1)
  5577  07CD  00B0               	movlw	low(0)
  5578  07CE  3000               	movwf	(___flmul@prod)
  5579  07CF  00AF               
  5580                           	line	190
  5581                           	
  5582                           l2314:	
  5583  07D0                     	clrf	(___flmul@sign)
  5584  07D0  01A8               	line	191
  5585                           	goto	l680
  5586  07D1  2FEE               	line	192
  5587                           	
  5588                           l681:	
  5589  07D2                     	line	194
  5590                           	
  5591                           l2316:	
  5592  07D2                     	bcf	status, 5	;RP0=0, select bank0
  5593  07D2  1283               	bcf	status, 6	;RP1=0, select bank0
  5594  07D3  1303               	movf	(___flmul@temp),w
  5595  07D4  0833               	movwf	(??___flmul+0)+0
  5596  07D5  00F9               	movf	(??___flmul+0)+0,w
  5597  07D6  0879               	movwf	(___flmul@bexp)
  5598  07D7  00AE               	line	195
  5599                           	movlw	0FFh
  5600  07D8  30FF               	andwf	(___flmul@prod),f
  5601  07D9  05AF               	movlw	0FFh
  5602  07DA  30FF               	andwf	(___flmul@prod+1),f
  5603  07DB  05B0               	movlw	07Fh
  5604  07DC  307F               	andwf	(___flmul@prod+2),f
  5605  07DD  05B1               	movlw	0
  5606  07DE  3000               	andwf	(___flmul@prod+3),f
  5607  07DF  05B2               	line	196
  5608                           	
  5609                           l2318:	
  5610  07E0                     	btfss	(___flmul@bexp),(0)&7
  5611  07E0  1C2E               	goto	u3011
  5612  07E1  2FE3               	goto	u3010
  5613  07E2  2FE4               u3011:
  5614  07E3                     	goto	l2322
  5615  07E3  2FE6               u3010:
  5616  07E4                     	line	197
  5617                           	
  5618                           l2320:	
  5619  07E4                     	bsf	0+(___flmul@prod)+02h+(7/8),(7)&7
  5620  07E4  17B1               	goto	l2322
  5621  07E5  2FE6               	line	198
  5622                           	
  5623                           l683:	
  5624  07E6                     	line	199
  5625                           	
  5626                           l2322:	
  5627  07E6                     	movf	(___flmul@bexp),w
  5628  07E6  082E               	movwf	(??___flmul+0)+0
  5629  07E7  00F9               	clrc
  5630  07E8  1003               	rrf	(??___flmul+0)+0,w
  5631  07E9  0C79               	movwf	(??___flmul+1)+0
  5632  07EA  00FA               	movf	(??___flmul+1)+0,w
  5633  07EB  087A               	movwf	0+(___flmul@prod)+03h
  5634  07EC  00B2               	goto	l680
  5635  07ED  2FEE               	line	200
  5636                           	
  5637                           l682:	
  5638  07EE                     	
  5639                           l680:	
  5640  07EE                     	line	201
  5641                           	movf	(___flmul@sign),w
  5642  07EE  0828               	movwf	(??___flmul+0)+0
  5643  07EF  00F9               	movf	(??___flmul+0)+0,w
  5644  07F0  0879               	iorwf	0+(___flmul@prod)+03h,f
  5645  07F1  04B2               	line	203
  5646                           	
  5647                           l2324:	
  5648  07F2                     	movf	(___flmul@prod+3),w
  5649  07F2  0832               	movwf	(?___flmul+3)
  5650  07F3  00A3               	movf	(___flmul@prod+2),w
  5651  07F4  0831               	movwf	(?___flmul+2)
  5652  07F5  00A2               	movf	(___flmul@prod+1),w
  5653  07F6  0830               	movwf	(?___flmul+1)
  5654  07F7  00A1               	movf	(___flmul@prod),w
  5655  07F8  082F               	movwf	(?___flmul)
  5656  07F9  00A0               
  5657                           	goto	l668
  5658  07FA  2FFB               	
  5659                           l2326:	
  5660  07FB                     	line	205
  5661                           	
  5662                           l668:	
  5663  07FB                     	return
  5664  07FB  0008               	opt stack 0
  5665                           GLOBAL	__end_of___flmul
  5666                           	__end_of___flmul:
  5667  07FC                     	signat	___flmul,8316
  5668                           	global	__Umul8_16
  5669                           
  5670 ;; *************** function __Umul8_16 *****************
  5671 ;; Defined at:
  5672 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul8_16.c"
  5673 ;; Parameters:    Size  Location     Type
  5674 ;;  multiplier      1    wreg     unsigned char 
  5675 ;;  multiplicand    1    0[COMMON] unsigned char 
  5676 ;; Auto vars:     Size  Location     Type
  5677 ;;  multiplier      1    8[COMMON] unsigned char 
  5678 ;;  word_mpld       2    6[COMMON] unsigned int 
  5679 ;;  product         2    4[COMMON] unsigned int 
  5680 ;; Return value:  Size  Location     Type
  5681 ;;                  2    0[COMMON] unsigned int 
  5682 ;; Registers used:
  5683 ;;		wreg, status,2, status,0
  5684 ;; Tracked objects:
  5685 ;;		On entry : 0/0
  5686 ;;		On exit  : 0/0
  5687 ;;		Unchanged: 0/0
  5688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5689 ;;      Params:         2       0       0       0       0
  5690 ;;      Locals:         5       0       0       0       0
  5691 ;;      Temps:          2       0       0       0       0
  5692 ;;      Totals:         9       0       0       0       0
  5693 ;;Total ram usage:        9 bytes
  5694 ;; Hardware stack levels used:    1
  5695 ;; This function calls:
  5696 ;;		Nothing
  5697 ;; This function is called by:
  5698 ;;		___flmul
  5699 ;; This function uses a non-reentrant model
  5700 ;;
  5701                           psect	text9,local,class=CODE,delta=2,merge=1,group=1
  5702                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul8_16.c"
  5703                           	line	4
  5704                           global __ptext9
  5705                           __ptext9:	;psect for function __Umul8_16
  5706  096A                     psect	text9
  5707                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul8_16.c"
  5708                           	line	4
  5709                           	global	__size_of__Umul8_16
  5710                           	__size_of__Umul8_16	equ	__end_of__Umul8_16-__Umul8_16
  5711  002A                     	
  5712                           __Umul8_16:	
  5713  096A                     ;incstack = 0
  5714                           	opt	stack 6
  5715                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5716                           ;__Umul8_16@multiplier stored from wreg
  5717                           	movwf	(__Umul8_16@multiplier)
  5718  096A  00F8               	line	5
  5719                           	
  5720                           l1764:	
  5721  096B                     	clrf	(__Umul8_16@product)
  5722  096B  01F4               	clrf	(__Umul8_16@product+1)
  5723  096C  01F5               	line	6
  5724                           	
  5725                           l1766:	
  5726  096D                     	movf	(__Umul8_16@multiplicand),w
  5727  096D  0870               	movwf	(??__Umul8_16+0)+0
  5728  096E  00F2               	clrf	(??__Umul8_16+0)+0+1
  5729  096F  01F3               	movf	0+(??__Umul8_16+0)+0,w
  5730  0970  0872               	movwf	(__Umul8_16@word_mpld)
  5731  0971  00F6               	movf	1+(??__Umul8_16+0)+0,w
  5732  0972  0873               	movwf	(__Umul8_16@word_mpld+1)
  5733  0973  00F7               	goto	l1768
  5734  0974  2975               	line	50
  5735                           	
  5736                           l705:	
  5737  0975                     	line	51
  5738                           	
  5739                           l1768:	
  5740  0975                     	btfss	(__Umul8_16@multiplier),(0)&7
  5741  0975  1C78               	goto	u1801
  5742  0976  2978               	goto	u1800
  5743  0977  2979               u1801:
  5744  0978                     	goto	l706
  5745  0978  297F               u1800:
  5746  0979                     	line	52
  5747                           	
  5748                           l1770:	
  5749  0979                     	movf	(__Umul8_16@word_mpld),w
  5750  0979  0876               	addwf	(__Umul8_16@product),f
  5751  097A  07F4               	skipnc
  5752  097B  1803               	incf	(__Umul8_16@product+1),f
  5753  097C  0AF5               	movf	(__Umul8_16@word_mpld+1),w
  5754  097D  0877               	addwf	(__Umul8_16@product+1),f
  5755  097E  07F5               	line	53
  5756                           	
  5757                           l706:	
  5758  097F                     	line	54
  5759                           	movlw	01h
  5760  097F  3001               	
  5761                           u1815:
  5762  0980                     	clrc
  5763  0980  1003               	rlf	(__Umul8_16@word_mpld),f
  5764  0981  0DF6               	rlf	(__Umul8_16@word_mpld+1),f
  5765  0982  0DF7               	addlw	-1
  5766  0983  3EFF               	skipz
  5767  0984  1D03               	goto	u1815
  5768  0985  2980               	line	55
  5769                           	clrc
  5770  0986  1003               	rrf	(__Umul8_16@multiplier),f
  5771  0987  0CF8               
  5772                           	line	56
  5773                           	
  5774                           l1772:	
  5775  0988                     	movf	((__Umul8_16@multiplier)),w
  5776  0988  0878               	btfss	status,2
  5777  0989  1D03               	goto	u1821
  5778  098A  298C               	goto	u1820
  5779  098B  298D               u1821:
  5780  098C                     	goto	l1768
  5781  098C  2975               u1820:
  5782  098D                     	goto	l1774
  5783  098D  298E               	
  5784                           l707:	
  5785  098E                     	line	59
  5786                           	
  5787                           l1774:	
  5788  098E                     	movf	(__Umul8_16@product+1),w
  5789  098E  0875               	movwf	(?__Umul8_16+1)
  5790  098F  00F1               	movf	(__Umul8_16@product),w
  5791  0990  0874               	movwf	(?__Umul8_16)
  5792  0991  00F0               	goto	l708
  5793  0992  2993               	
  5794                           l1776:	
  5795  0993                     	line	60
  5796                           	
  5797                           l708:	
  5798  0993                     	return
  5799  0993  0008               	opt stack 0
  5800                           GLOBAL	__end_of__Umul8_16
  5801                           	__end_of__Umul8_16:
  5802  0994                     	signat	__Umul8_16,8314
  5803                           	global	___fldiv
  5804                           
  5805 ;; *************** function ___fldiv *****************
  5806 ;; Defined at:
  5807 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcdiv.c"
  5808 ;; Parameters:    Size  Location     Type
  5809 ;;  a               4    0[COMMON] unsigned int 
  5810 ;;  b               4    4[COMMON] unsigned int 
  5811 ;; Auto vars:     Size  Location     Type
  5812 ;;  grs             4    7[BANK0 ] unsigned long 
  5813 ;;  rem             4    0[BANK0 ] unsigned long 
  5814 ;;  new_exp         2    5[BANK0 ] int 
  5815 ;;  aexp            1   12[BANK0 ] unsigned char 
  5816 ;;  bexp            1   11[BANK0 ] unsigned char 
  5817 ;;  sign            1    4[BANK0 ] unsigned char 
  5818 ;; Return value:  Size  Location     Type
  5819 ;;                  4    0[COMMON] unsigned char 
  5820 ;; Registers used:
  5821 ;;		wreg, status,2, status,0, btemp+1
  5822 ;; Tracked objects:
  5823 ;;		On entry : 0/0
  5824 ;;		On exit  : 0/0
  5825 ;;		Unchanged: 0/0
  5826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5827 ;;      Params:         8       0       0       0       0
  5828 ;;      Locals:         0      13       0       0       0
  5829 ;;      Temps:          5       0       0       0       0
  5830 ;;      Totals:        13      13       0       0       0
  5831 ;;Total ram usage:       26 bytes
  5832 ;; Hardware stack levels used:    1
  5833 ;; This function calls:
  5834 ;;		Nothing
  5835 ;; This function is called by:
  5836 ;;		_main
  5837 ;; This function uses a non-reentrant model
  5838 ;;
  5839                           psect	text10,local,class=CODE,delta=2,merge=1,group=1
  5840                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcdiv.c"
  5841                           	line	8
  5842                           global __ptext10
  5843                           __ptext10:	;psect for function ___fldiv
  5844  0DF1                     psect	text10
  5845                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcdiv.c"
  5846                           	line	8
  5847                           	global	__size_of___fldiv
  5848                           	__size_of___fldiv	equ	__end_of___fldiv-___fldiv
  5849  020F                     	
  5850                           ___fldiv:	
  5851  0DF1                     ;incstack = 0
  5852                           	opt	stack 7
  5853                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  5854                           	line	26
  5855                           	
  5856                           l2046:	
  5857  0DF1                     	movf	0+(___fldiv@b)+03h,w
  5858  0DF1  0877               	andlw	080h
  5859  0DF2  3980               	movwf	(??___fldiv+0)+0
  5860  0DF3  00F8               	movf	(??___fldiv+0)+0,w
  5861  0DF4  0878               	bcf	status, 5	;RP0=0, select bank0
  5862  0DF5  1283               	bcf	status, 6	;RP1=0, select bank0
  5863  0DF6  1303               	movwf	(___fldiv@sign)
  5864  0DF7  00A4               	line	27
  5865                           	
  5866                           l2048:	
  5867  0DF8                     	movf	0+(___fldiv@b)+03h,w
  5868  0DF8  0877               	movwf	(??___fldiv+0)+0
  5869  0DF9  00F8               	addwf	(??___fldiv+0)+0,w
  5870  0DFA  0778               	movwf	(??___fldiv+1)+0
  5871  0DFB  00F9               	movf	(??___fldiv+1)+0,w
  5872  0DFC  0879               	movwf	(___fldiv@bexp)
  5873  0DFD  00AB               	line	28
  5874                           	
  5875                           l2050:	
  5876  0DFE                     	btfss	0+(___fldiv@b)+02h,(7)&7
  5877  0DFE  1FF6               	goto	u2351
  5878  0DFF  2E01               	goto	u2350
  5879  0E00  2E02               u2351:
  5880  0E01                     	goto	l2054
  5881  0E01  2E04               u2350:
  5882  0E02                     	line	29
  5883                           	
  5884                           l2052:	
  5885  0E02                     	bsf	(___fldiv@bexp)+(0/8),(0)&7
  5886  0E02  142B               	goto	l2054
  5887  0E03  2E04               	line	30
  5888                           	
  5889                           l621:	
  5890  0E04                     	line	33
  5891                           	
  5892                           l2054:	
  5893  0E04                     	movf	((___fldiv@bexp)),w
  5894  0E04  082B               	btfsc	status,2
  5895  0E05  1903               	goto	u2361
  5896  0E06  2E08               	goto	u2360
  5897  0E07  2E09               u2361:
  5898  0E08                     	goto	l2064
  5899  0E08  2E1A               u2360:
  5900  0E09                     	line	35
  5901                           	
  5902                           l2056:	
  5903  0E09                     		incf	((___fldiv@bexp)),w
  5904  0E09  0A2B               	btfss	status,2
  5905  0E0A  1D03               	goto	u2371
  5906  0E0B  2E0D               	goto	u2370
  5907  0E0C  2E0E               u2371:
  5908  0E0D                     	goto	l2060
  5909  0E0D  2E17               u2370:
  5910  0E0E                     	line	37
  5911                           	
  5912                           l2058:	
  5913  0E0E                     	movlw	0x0
  5914  0E0E  3000               	movwf	(___fldiv@b+3)
  5915  0E0F  00F7               	movlw	0x0
  5916  0E10  3000               	movwf	(___fldiv@b+2)
  5917  0E11  00F6               	movlw	0x0
  5918  0E12  3000               	movwf	(___fldiv@b+1)
  5919  0E13  00F5               	movlw	0x0
  5920  0E14  3000               	movwf	(___fldiv@b)
  5921  0E15  00F4               
  5922                           	goto	l2060
  5923  0E16  2E17               	line	38
  5924                           	
  5925                           l623:	
  5926  0E17                     	line	40
  5927                           	
  5928                           l2060:	
  5929  0E17                     	bsf	(___fldiv@b)+(23/8),(23)&7
  5930  0E17  17F6               	line	42
  5931                           	
  5932                           l2062:	
  5933  0E18                     	clrf	0+(___fldiv@b)+03h
  5934  0E18  01F7               	line	43
  5935                           	goto	l2066
  5936  0E19  2E23               	line	44
  5937                           	
  5938                           l622:	
  5939  0E1A                     	line	46
  5940                           	
  5941                           l2064:	
  5942  0E1A                     	movlw	0x0
  5943  0E1A  3000               	movwf	(___fldiv@b+3)
  5944  0E1B  00F7               	movlw	0x0
  5945  0E1C  3000               	movwf	(___fldiv@b+2)
  5946  0E1D  00F6               	movlw	0x0
  5947  0E1E  3000               	movwf	(___fldiv@b+1)
  5948  0E1F  00F5               	movlw	0x0
  5949  0E20  3000               	movwf	(___fldiv@b)
  5950  0E21  00F4               
  5951                           	goto	l2066
  5952  0E22  2E23               	line	47
  5953                           	
  5954                           l624:	
  5955  0E23                     	line	49
  5956                           	
  5957                           l2066:	
  5958  0E23                     	movf	0+(___fldiv@a)+03h,w
  5959  0E23  0873               	andlw	080h
  5960  0E24  3980               	movwf	(??___fldiv+0)+0
  5961  0E25  00F8               	movf	(??___fldiv+0)+0,w
  5962  0E26  0878               	xorwf	(___fldiv@sign),f
  5963  0E27  06A4               	line	50
  5964                           	
  5965                           l2068:	
  5966  0E28                     	movf	0+(___fldiv@a)+03h,w
  5967  0E28  0873               	movwf	(??___fldiv+0)+0
  5968  0E29  00F8               	addwf	(??___fldiv+0)+0,w
  5969  0E2A  0778               	movwf	(??___fldiv+1)+0
  5970  0E2B  00F9               	movf	(??___fldiv+1)+0,w
  5971  0E2C  0879               	movwf	(___fldiv@aexp)
  5972  0E2D  00AC               	line	51
  5973                           	
  5974                           l2070:	
  5975  0E2E                     	btfss	0+(___fldiv@a)+02h,(7)&7
  5976  0E2E  1FF2               	goto	u2381
  5977  0E2F  2E31               	goto	u2380
  5978  0E30  2E32               u2381:
  5979  0E31                     	goto	l2074
  5980  0E31  2E34               u2380:
  5981  0E32                     	line	52
  5982                           	
  5983                           l2072:	
  5984  0E32                     	bsf	(___fldiv@aexp)+(0/8),(0)&7
  5985  0E32  142C               	goto	l2074
  5986  0E33  2E34               	line	53
  5987                           	
  5988                           l625:	
  5989  0E34                     	line	56
  5990                           	
  5991                           l2074:	
  5992  0E34                     	movf	((___fldiv@aexp)),w
  5993  0E34  082C               	btfsc	status,2
  5994  0E35  1903               	goto	u2391
  5995  0E36  2E38               	goto	u2390
  5996  0E37  2E39               u2391:
  5997  0E38                     	goto	l2084
  5998  0E38  2E4A               u2390:
  5999  0E39                     	line	58
  6000                           	
  6001                           l2076:	
  6002  0E39                     		incf	((___fldiv@aexp)),w
  6003  0E39  0A2C               	btfss	status,2
  6004  0E3A  1D03               	goto	u2401
  6005  0E3B  2E3D               	goto	u2400
  6006  0E3C  2E3E               u2401:
  6007  0E3D                     	goto	l2080
  6008  0E3D  2E47               u2400:
  6009  0E3E                     	line	60
  6010                           	
  6011                           l2078:	
  6012  0E3E                     	movlw	0x0
  6013  0E3E  3000               	movwf	(___fldiv@a+3)
  6014  0E3F  00F3               	movlw	0x0
  6015  0E40  3000               	movwf	(___fldiv@a+2)
  6016  0E41  00F2               	movlw	0x0
  6017  0E42  3000               	movwf	(___fldiv@a+1)
  6018  0E43  00F1               	movlw	0x0
  6019  0E44  3000               	movwf	(___fldiv@a)
  6020  0E45  00F0               
  6021                           	goto	l2080
  6022  0E46  2E47               	line	61
  6023                           	
  6024                           l627:	
  6025  0E47                     	line	63
  6026                           	
  6027                           l2080:	
  6028  0E47                     	bsf	(___fldiv@a)+(23/8),(23)&7
  6029  0E47  17F2               	line	65
  6030                           	
  6031                           l2082:	
  6032  0E48                     	clrf	0+(___fldiv@a)+03h
  6033  0E48  01F3               	line	66
  6034                           	goto	l628
  6035  0E49  2E52               	line	67
  6036                           	
  6037                           l626:	
  6038  0E4A                     	line	69
  6039                           	
  6040                           l2084:	
  6041  0E4A                     	movlw	0x0
  6042  0E4A  3000               	movwf	(___fldiv@a+3)
  6043  0E4B  00F3               	movlw	0x0
  6044  0E4C  3000               	movwf	(___fldiv@a+2)
  6045  0E4D  00F2               	movlw	0x0
  6046  0E4E  3000               	movwf	(___fldiv@a+1)
  6047  0E4F  00F1               	movlw	0x0
  6048  0E50  3000               	movwf	(___fldiv@a)
  6049  0E51  00F0               
  6050                           	line	70
  6051                           	
  6052                           l628:	
  6053  0E52                     	line	75
  6054                           	movf	(___fldiv@a+3),w
  6055  0E52  0873               	iorwf	(___fldiv@a+2),w
  6056  0E53  0472               	iorwf	(___fldiv@a+1),w
  6057  0E54  0471               	iorwf	(___fldiv@a),w
  6058  0E55  0470               	skipz
  6059  0E56  1D03               	goto	u2411
  6060  0E57  2E59               	goto	u2410
  6061  0E58  2E5A               u2411:
  6062  0E59                     	goto	l2094
  6063  0E59  2E74               u2410:
  6064  0E5A                     	line	76
  6065                           	
  6066                           l2086:	
  6067  0E5A                     	movlw	high highword(0)
  6068  0E5A  3000               	movwf	(___fldiv@b+3)
  6069  0E5B  00F7               	movlw	low highword(0)
  6070  0E5C  3000               	movwf	(___fldiv@b+2)
  6071  0E5D  00F6               	movlw	high(0)
  6072  0E5E  3000               	movwf	(___fldiv@b+1)
  6073  0E5F  00F5               	movlw	low(0)
  6074  0E60  3000               	movwf	(___fldiv@b)
  6075  0E61  00F4               
  6076                           	line	77
  6077                           	movlw	080h
  6078  0E62  3080               	iorwf	0+(___fldiv@b)+02h,f
  6079  0E63  04F6               	movlw	07Fh
  6080  0E64  307F               	iorwf	1+(___fldiv@b)+02h,f
  6081  0E65  04F7               	line	78
  6082                           	
  6083                           l2088:	
  6084  0E66                     	movf	(___fldiv@sign),w
  6085  0E66  0824               	movwf	(??___fldiv+0)+0
  6086  0E67  00F8               	movf	(??___fldiv+0)+0,w
  6087  0E68  0878               	iorwf	0+(___fldiv@b)+03h,f
  6088  0E69  04F7               	line	79
  6089                           	
  6090                           l2090:	
  6091  0E6A                     	movf	(___fldiv@b+3),w
  6092  0E6A  0877               	movwf	(?___fldiv+3)
  6093  0E6B  00F3               	movf	(___fldiv@b+2),w
  6094  0E6C  0876               	movwf	(?___fldiv+2)
  6095  0E6D  00F2               	movf	(___fldiv@b+1),w
  6096  0E6E  0875               	movwf	(?___fldiv+1)
  6097  0E6F  00F1               	movf	(___fldiv@b),w
  6098  0E70  0874               	movwf	(?___fldiv)
  6099  0E71  00F0               
  6100                           	goto	l630
  6101  0E72  2FFF               	
  6102                           l2092:	
  6103  0E73                     	goto	l630
  6104  0E73  2FFF               	line	80
  6105                           	
  6106                           l629:	
  6107  0E74                     	line	83
  6108                           	
  6109                           l2094:	
  6110  0E74                     	movf	((___fldiv@bexp)),w
  6111  0E74  082B               	btfss	status,2
  6112  0E75  1D03               	goto	u2421
  6113  0E76  2E78               	goto	u2420
  6114  0E77  2E79               u2421:
  6115  0E78                     	goto	l2100
  6116  0E78  2E8B               u2420:
  6117  0E79                     	line	84
  6118                           	
  6119                           l2096:	
  6120  0E79                     	movlw	high highword(0)
  6121  0E79  3000               	movwf	(___fldiv@b+3)
  6122  0E7A  00F7               	movlw	low highword(0)
  6123  0E7B  3000               	movwf	(___fldiv@b+2)
  6124  0E7C  00F6               	movlw	high(0)
  6125  0E7D  3000               	movwf	(___fldiv@b+1)
  6126  0E7E  00F5               	movlw	low(0)
  6127  0E7F  3000               	movwf	(___fldiv@b)
  6128  0E80  00F4               
  6129                           	line	85
  6130                           	movf	(___fldiv@b+3),w
  6131  0E81  0877               	movwf	(?___fldiv+3)
  6132  0E82  00F3               	movf	(___fldiv@b+2),w
  6133  0E83  0876               	movwf	(?___fldiv+2)
  6134  0E84  00F2               	movf	(___fldiv@b+1),w
  6135  0E85  0875               	movwf	(?___fldiv+1)
  6136  0E86  00F1               	movf	(___fldiv@b),w
  6137  0E87  0874               	movwf	(?___fldiv)
  6138  0E88  00F0               
  6139                           	goto	l630
  6140  0E89  2FFF               	
  6141                           l2098:	
  6142  0E8A                     	goto	l630
  6143  0E8A  2FFF               	line	86
  6144                           	
  6145                           l631:	
  6146  0E8B                     	line	89
  6147                           	
  6148                           l2100:	
  6149  0E8B                     	movf	(___fldiv@aexp),w
  6150  0E8B  082C               	movwf	(??___fldiv+0)+0
  6151  0E8C  00F8               	clrf	(??___fldiv+0)+0+1
  6152  0E8D  01F9               	comf	(??___fldiv+0)+0,f
  6153  0E8E  09F8               	comf	(??___fldiv+0)+1,f
  6154  0E8F  09F9               	incf	(??___fldiv+0)+0,f
  6155  0E90  0AF8               	skipnz
  6156  0E91  1903               	incf	(??___fldiv+0)+1,f
  6157  0E92  0AF9               	movf	(___fldiv@bexp),w
  6158  0E93  082B               	addwf	0+(??___fldiv+0)+0,w
  6159  0E94  0778               	movwf	(??___fldiv+2)+0
  6160  0E95  00FA               	movf	1+(??___fldiv+0)+0,w
  6161  0E96  0879               	skipnc
  6162  0E97  1803               	incf	1+(??___fldiv+0)+0,w
  6163  0E98  0A79               	movwf	((??___fldiv+2)+0)+1
  6164  0E99  00FB               	movf	0+(??___fldiv+2)+0,w
  6165  0E9A  087A               	addlw	low(07Fh)
  6166  0E9B  3E7F               	movwf	(___fldiv@new_exp)
  6167  0E9C  00A5               	movf	1+(??___fldiv+2)+0,w
  6168  0E9D  087B               	skipnc
  6169  0E9E  1803               	addlw	1
  6170  0E9F  3E01               	addlw	high(07Fh)
  6171  0EA0  3E00               	movwf	1+(___fldiv@new_exp)
  6172  0EA1  00A6               	line	92
  6173                           	
  6174                           l2102:	
  6175  0EA2                     	movf	(___fldiv@b+3),w
  6176  0EA2  0877               	movwf	(___fldiv@rem+3)
  6177  0EA3  00A3               	movf	(___fldiv@b+2),w
  6178  0EA4  0876               	movwf	(___fldiv@rem+2)
  6179  0EA5  00A2               	movf	(___fldiv@b+1),w
  6180  0EA6  0875               	movwf	(___fldiv@rem+1)
  6181  0EA7  00A1               	movf	(___fldiv@b),w
  6182  0EA8  0874               	movwf	(___fldiv@rem)
  6183  0EA9  00A0               
  6184                           	line	93
  6185                           	
  6186                           l2104:	
  6187  0EAA                     	movlw	high highword(0)
  6188  0EAA  3000               	movwf	(___fldiv@b+3)
  6189  0EAB  00F7               	movlw	low highword(0)
  6190  0EAC  3000               	movwf	(___fldiv@b+2)
  6191  0EAD  00F6               	movlw	high(0)
  6192  0EAE  3000               	movwf	(___fldiv@b+1)
  6193  0EAF  00F5               	movlw	low(0)
  6194  0EB0  3000               	movwf	(___fldiv@b)
  6195  0EB1  00F4               
  6196                           	line	94
  6197                           	
  6198                           l2106:	
  6199  0EB2                     	movlw	high highword(0)
  6200  0EB2  3000               	movwf	(___fldiv@grs+3)
  6201  0EB3  00AA               	movlw	low highword(0)
  6202  0EB4  3000               	movwf	(___fldiv@grs+2)
  6203  0EB5  00A9               	movlw	high(0)
  6204  0EB6  3000               	movwf	(___fldiv@grs+1)
  6205  0EB7  00A8               	movlw	low(0)
  6206  0EB8  3000               	movwf	(___fldiv@grs)
  6207  0EB9  00A7               
  6208                           	line	96
  6209                           	
  6210                           l2108:	
  6211  0EBA                     	clrf	(___fldiv@aexp)
  6212  0EBA  01AC               	line	97
  6213                           	goto	l2128
  6214  0EBB  2F10               	
  6215                           l633:	
  6216  0EBC                     	line	100
  6217                           	
  6218                           l2110:	
  6219  0EBC                     	movf	((___fldiv@aexp)),w
  6220  0EBC  082C               	btfsc	status,2
  6221  0EBD  1903               	goto	u2431
  6222  0EBE  2EC0               	goto	u2430
  6223  0EBF  2EC1               u2431:
  6224  0EC0                     	goto	l2120
  6225  0EC0  2EE3               u2430:
  6226  0EC1                     	line	101
  6227                           	
  6228                           l2112:	
  6229  0EC1                     	movlw	01h
  6230  0EC1  3001               	movwf	(??___fldiv+0)+0
  6231  0EC2  00F8               u2445:
  6232  0EC3                     	clrc
  6233  0EC3  1003               	rlf	(___fldiv@rem),f
  6234  0EC4  0DA0               	rlf	(___fldiv@rem+1),f
  6235  0EC5  0DA1               	rlf	(___fldiv@rem+2),f
  6236  0EC6  0DA2               	rlf	(___fldiv@rem+3),f
  6237  0EC7  0DA3               	decfsz	(??___fldiv+0)+0
  6238  0EC8  0BF8               	goto	u2445
  6239  0EC9  2EC3               	line	102
  6240                           	movlw	01h
  6241  0ECA  3001               	movwf	(??___fldiv+0)+0
  6242  0ECB  00F8               u2455:
  6243  0ECC                     	clrc
  6244  0ECC  1003               	rlf	(___fldiv@b),f
  6245  0ECD  0DF4               	rlf	(___fldiv@b+1),f
  6246  0ECE  0DF5               	rlf	(___fldiv@b+2),f
  6247  0ECF  0DF6               	rlf	(___fldiv@b+3),f
  6248  0ED0  0DF7               	decfsz	(??___fldiv+0)+0
  6249  0ED1  0BF8               	goto	u2455
  6250  0ED2  2ECC               	line	103
  6251                           	
  6252                           l2114:	
  6253  0ED3                     	btfss	(___fldiv@grs+3),(31)&7
  6254  0ED3  1FAA               	goto	u2461
  6255  0ED4  2ED6               	goto	u2460
  6256  0ED5  2ED7               u2461:
  6257  0ED6                     	goto	l2118
  6258  0ED6  2ED9               u2460:
  6259  0ED7                     	line	104
  6260                           	
  6261                           l2116:	
  6262  0ED7                     	bsf	(___fldiv@b)+(0/8),(0)&7
  6263  0ED7  1474               	goto	l2118
  6264  0ED8  2ED9               	line	105
  6265                           	
  6266                           l635:	
  6267  0ED9                     	line	106
  6268                           	
  6269                           l2118:	
  6270  0ED9                     	movlw	01h
  6271  0ED9  3001               	movwf	(??___fldiv+0)+0
  6272  0EDA  00F8               u2475:
  6273  0EDB                     	clrc
  6274  0EDB  1003               	rlf	(___fldiv@grs),f
  6275  0EDC  0DA7               	rlf	(___fldiv@grs+1),f
  6276  0EDD  0DA8               	rlf	(___fldiv@grs+2),f
  6277  0EDE  0DA9               	rlf	(___fldiv@grs+3),f
  6278  0EDF  0DAA               	decfsz	(??___fldiv+0)+0
  6279  0EE0  0BF8               	goto	u2475
  6280  0EE1  2EDB               	goto	l2120
  6281  0EE2  2EE3               	line	107
  6282                           	
  6283                           l634:	
  6284  0EE3                     	line	112
  6285                           	
  6286                           l2120:	
  6287  0EE3                     	movf	(___fldiv@a+3),w
  6288  0EE3  0873               	subwf	(___fldiv@rem+3),w
  6289  0EE4  0223               	skipz
  6290  0EE5  1D03               	goto	u2485
  6291  0EE6  2EF1               	movf	(___fldiv@a+2),w
  6292  0EE7  0872               	subwf	(___fldiv@rem+2),w
  6293  0EE8  0222               	skipz
  6294  0EE9  1D03               	goto	u2485
  6295  0EEA  2EF1               	movf	(___fldiv@a+1),w
  6296  0EEB  0871               	subwf	(___fldiv@rem+1),w
  6297  0EEC  0221               	skipz
  6298  0EED  1D03               	goto	u2485
  6299  0EEE  2EF1               	movf	(___fldiv@a),w
  6300  0EEF  0870               	subwf	(___fldiv@rem),w
  6301  0EF0  0220               u2485:
  6302  0EF1                     	skipc
  6303  0EF1  1C03               	goto	u2481
  6304  0EF2  2EF4               	goto	u2480
  6305  0EF3  2EF5               u2481:
  6306  0EF4                     	goto	l2126
  6307  0EF4  2F0B               u2480:
  6308  0EF5                     	line	115
  6309                           	
  6310                           l2122:	
  6311  0EF5                     	bsf	(___fldiv@grs)+(30/8),(30)&7
  6312  0EF5  172A               	line	116
  6313                           	
  6314                           l2124:	
  6315  0EF6                     	movf	(___fldiv@a),w
  6316  0EF6  0870               	subwf	(___fldiv@rem),f
  6317  0EF7  02A0               	movf	(___fldiv@a+1),w
  6318  0EF8  0871               	skipc
  6319  0EF9  1C03               	incfsz	(___fldiv@a+1),w
  6320  0EFA  0F71               	goto	u2495
  6321  0EFB  2EFD               	goto	u2496
  6322  0EFC  2EFE               u2495:
  6323  0EFD                     	subwf	(___fldiv@rem+1),f
  6324  0EFD  02A1               u2496:
  6325  0EFE                     	movf	(___fldiv@a+2),w
  6326  0EFE  0872               	skipc
  6327  0EFF  1C03               	incfsz	(___fldiv@a+2),w
  6328  0F00  0F72               	goto	u2497
  6329  0F01  2F03               	goto	u2498
  6330  0F02  2F04               u2497:
  6331  0F03                     	subwf	(___fldiv@rem+2),f
  6332  0F03  02A2               u2498:
  6333  0F04                     	movf	(___fldiv@a+3),w
  6334  0F04  0873               	skipc
  6335  0F05  1C03               	incfsz	(___fldiv@a+3),w
  6336  0F06  0F73               	goto	u2499
  6337  0F07  2F09               	goto	u2490
  6338  0F08  2F0A               u2499:
  6339  0F09                     	subwf	(___fldiv@rem+3),f
  6340  0F09  02A3               u2490:
  6341  0F0A                     
  6342                           	goto	l2126
  6343  0F0A  2F0B               	line	117
  6344                           	
  6345                           l636:	
  6346  0F0B                     	line	118
  6347                           	
  6348                           l2126:	
  6349  0F0B                     	movlw	low(01h)
  6350  0F0B  3001               	movwf	(??___fldiv+0)+0
  6351  0F0C  00F8               	movf	(??___fldiv+0)+0,w
  6352  0F0D  0878               	addwf	(___fldiv@aexp),f
  6353  0F0E  07AC               	goto	l2128
  6354  0F0F  2F10               	line	119
  6355                           	
  6356                           l632:	
  6357  0F10                     	line	97
  6358                           	
  6359                           l2128:	
  6360  0F10                     	movlw	low(01Ah)
  6361  0F10  301A               	subwf	(___fldiv@aexp),w
  6362  0F11  022C               	skipc
  6363  0F12  1C03               	goto	u2501
  6364  0F13  2F15               	goto	u2500
  6365  0F14  2F16               u2501:
  6366  0F15                     	goto	l2110
  6367  0F15  2EBC               u2500:
  6368  0F16                     	goto	l2130
  6369  0F16  2F17               	
  6370                           l637:	
  6371  0F17                     	line	122
  6372                           	
  6373                           l2130:	
  6374  0F17                     	movf	(___fldiv@rem+3),w
  6375  0F17  0823               	iorwf	(___fldiv@rem+2),w
  6376  0F18  0422               	iorwf	(___fldiv@rem+1),w
  6377  0F19  0421               	iorwf	(___fldiv@rem),w
  6378  0F1A  0420               	skipnz
  6379  0F1B  1903               	goto	u2511
  6380  0F1C  2F1E               	goto	u2510
  6381  0F1D  2F1F               u2511:
  6382  0F1E                     	goto	l2144
  6383  0F1E  2F41               u2510:
  6384  0F1F                     	line	123
  6385                           	
  6386                           l2132:	
  6387  0F1F                     	bsf	(___fldiv@grs)+(0/8),(0)&7
  6388  0F1F  1427               	goto	l2144
  6389  0F20  2F41               	line	124
  6390                           	
  6391                           l638:	
  6392  0F21                     	line	127
  6393                           	goto	l2144
  6394  0F21  2F41               	
  6395                           l640:	
  6396  0F22                     	line	128
  6397                           	
  6398                           l2134:	
  6399  0F22                     	movlw	01h
  6400  0F22  3001               	movwf	(??___fldiv+0)+0
  6401  0F23  00F8               u2525:
  6402  0F24                     	clrc
  6403  0F24  1003               	rlf	(___fldiv@b),f
  6404  0F25  0DF4               	rlf	(___fldiv@b+1),f
  6405  0F26  0DF5               	rlf	(___fldiv@b+2),f
  6406  0F27  0DF6               	rlf	(___fldiv@b+3),f
  6407  0F28  0DF7               	decfsz	(??___fldiv+0)+0
  6408  0F29  0BF8               	goto	u2525
  6409  0F2A  2F24               	line	129
  6410                           	
  6411                           l2136:	
  6412  0F2B                     	btfss	(___fldiv@grs+3),(31)&7
  6413  0F2B  1FAA               	goto	u2531
  6414  0F2C  2F2E               	goto	u2530
  6415  0F2D  2F2F               u2531:
  6416  0F2E                     	goto	l2140
  6417  0F2E  2F31               u2530:
  6418  0F2F                     	line	130
  6419                           	
  6420                           l2138:	
  6421  0F2F                     	bsf	(___fldiv@b)+(0/8),(0)&7
  6422  0F2F  1474               	goto	l2140
  6423  0F30  2F31               	line	131
  6424                           	
  6425                           l641:	
  6426  0F31                     	line	132
  6427                           	
  6428                           l2140:	
  6429  0F31                     	movlw	01h
  6430  0F31  3001               	movwf	(??___fldiv+0)+0
  6431  0F32  00F8               u2545:
  6432  0F33                     	clrc
  6433  0F33  1003               	rlf	(___fldiv@grs),f
  6434  0F34  0DA7               	rlf	(___fldiv@grs+1),f
  6435  0F35  0DA8               	rlf	(___fldiv@grs+2),f
  6436  0F36  0DA9               	rlf	(___fldiv@grs+3),f
  6437  0F37  0DAA               	decfsz	(??___fldiv+0)+0
  6438  0F38  0BF8               	goto	u2545
  6439  0F39  2F33               	line	133
  6440                           	
  6441                           l2142:	
  6442  0F3A                     	movlw	0FFh
  6443  0F3A  30FF               	addwf	(___fldiv@new_exp),f
  6444  0F3B  07A5               	skipnc
  6445  0F3C  1803               	incf	(___fldiv@new_exp+1),f
  6446  0F3D  0AA6               	movlw	0FFh
  6447  0F3E  30FF               	addwf	(___fldiv@new_exp+1),f
  6448  0F3F  07A6               	goto	l2144
  6449  0F40  2F41               	line	134
  6450                           	
  6451                           l639:	
  6452  0F41                     	line	127
  6453                           	
  6454                           l2144:	
  6455  0F41                     	btfss	(___fldiv@b+2),(23)&7
  6456  0F41  1FF6               	goto	u2551
  6457  0F42  2F44               	goto	u2550
  6458  0F43  2F45               u2551:
  6459  0F44                     	goto	l2134
  6460  0F44  2F22               u2550:
  6461  0F45                     	goto	l2146
  6462  0F45  2F46               	
  6463                           l642:	
  6464  0F46                     	line	139
  6465                           	
  6466                           l2146:	
  6467  0F46                     	clrf	(___fldiv@aexp)
  6468  0F46  01AC               	line	140
  6469                           	
  6470                           l2148:	
  6471  0F47                     	btfss	(___fldiv@grs+3),(31)&7
  6472  0F47  1FAA               	goto	u2561
  6473  0F48  2F4A               	goto	u2560
  6474  0F49  2F4B               u2561:
  6475  0F4A                     	goto	l2156
  6476  0F4A  2F6B               u2560:
  6477  0F4B                     	line	141
  6478                           	
  6479                           l2150:	
  6480  0F4B                     	movlw	0FFh
  6481  0F4B  30FF               	andwf	(___fldiv@grs),w
  6482  0F4C  0527               	movwf	(??___fldiv+0)+0
  6483  0F4D  00F8               	movlw	0FFh
  6484  0F4E  30FF               	andwf	(___fldiv@grs+1),w
  6485  0F4F  0528               	movwf	((??___fldiv+0)+0+1)
  6486  0F50  00F9               	movlw	0FFh
  6487  0F51  30FF               	andwf	(___fldiv@grs+2),w
  6488  0F52  0529               	movwf	((??___fldiv+0)+0+2)
  6489  0F53  00FA               	movlw	07Fh
  6490  0F54  307F               	andwf	(___fldiv@grs+3),w
  6491  0F55  052A               	movwf	((??___fldiv+0)+0+3)
  6492  0F56  00FB               	movf	3+(??___fldiv+0)+0,w
  6493  0F57  087B               	iorwf	2+(??___fldiv+0)+0,w
  6494  0F58  047A               	iorwf	1+(??___fldiv+0)+0,w
  6495  0F59  0479               	iorwf	0+(??___fldiv+0)+0,w
  6496  0F5A  0478               	skipnz
  6497  0F5B  1903               	goto	u2571
  6498  0F5C  2F5E               	goto	u2570
  6499  0F5D  2F5F               u2571:
  6500  0F5E                     	goto	l644
  6501  0F5E  2F62               u2570:
  6502  0F5F                     	line	142
  6503                           	
  6504                           l2152:	
  6505  0F5F                     	clrf	(___fldiv@aexp)
  6506  0F5F  01AC               	incf	(___fldiv@aexp),f
  6507  0F60  0AAC               	line	143
  6508                           	goto	l2156
  6509  0F61  2F6B               	line	144
  6510                           	
  6511                           l644:	
  6512  0F62                     	line	145
  6513                           	btfss	(___fldiv@b),(0)&7
  6514  0F62  1C74               	goto	u2581
  6515  0F63  2F65               	goto	u2580
  6516  0F64  2F66               u2581:
  6517  0F65                     	goto	l2156
  6518  0F65  2F6B               u2580:
  6519  0F66                     	line	146
  6520                           	
  6521                           l2154:	
  6522  0F66                     	clrf	(___fldiv@aexp)
  6523  0F66  01AC               	incf	(___fldiv@aexp),f
  6524  0F67  0AAC               	goto	l2156
  6525  0F68  2F6B               	line	147
  6526                           	
  6527                           l646:	
  6528  0F69                     	goto	l2156
  6529  0F69  2F6B               	line	148
  6530                           	
  6531                           l645:	
  6532  0F6A                     	goto	l2156
  6533  0F6A  2F6B               	line	149
  6534                           	
  6535                           l643:	
  6536  0F6B                     	line	150
  6537                           	
  6538                           l2156:	
  6539  0F6B                     	movf	((___fldiv@aexp)),w
  6540  0F6B  082C               	btfsc	status,2
  6541  0F6C  1903               	goto	u2591
  6542  0F6D  2F6F               	goto	u2590
  6543  0F6E  2F70               u2591:
  6544  0F6F                     	goto	l2166
  6545  0F6F  2FA3               u2590:
  6546  0F70                     	line	151
  6547                           	
  6548                           l2158:	
  6549  0F70                     	movlw	01h
  6550  0F70  3001               	addwf	(___fldiv@b),f
  6551  0F71  07F4               	movlw	0
  6552  0F72  3000               	skipnc
  6553  0F73  1803               movlw 1
  6554  0F74  3001               	addwf	(___fldiv@b+1),f
  6555  0F75  07F5               	movlw	0
  6556  0F76  3000               	skipnc
  6557  0F77  1803               movlw 1
  6558  0F78  3001               	addwf	(___fldiv@b+2),f
  6559  0F79  07F6               	movlw	0
  6560  0F7A  3000               	skipnc
  6561  0F7B  1803               movlw 1
  6562  0F7C  3001               	addwf	(___fldiv@b+3),f
  6563  0F7D  07F7               	line	152
  6564                           	
  6565                           l2160:	
  6566  0F7E                     	btfss	(___fldiv@b+3),(24)&7
  6567  0F7E  1C77               	goto	u2601
  6568  0F7F  2F81               	goto	u2600
  6569  0F80  2F82               u2601:
  6570  0F81                     	goto	l2166
  6571  0F81  2FA3               u2600:
  6572  0F82                     	line	153
  6573                           	
  6574                           l2162:	
  6575  0F82                     	movf	(___fldiv@b),w
  6576  0F82  0874               	movwf	(??___fldiv+0)+0
  6577  0F83  00F8               	movf	(___fldiv@b+1),w
  6578  0F84  0875               	movwf	((??___fldiv+0)+0+1)
  6579  0F85  00F9               	movf	(___fldiv@b+2),w
  6580  0F86  0876               	movwf	((??___fldiv+0)+0+2)
  6581  0F87  00FA               	movf	(___fldiv@b+3),w
  6582  0F88  0877               	movwf	((??___fldiv+0)+0+3)
  6583  0F89  00FB               	movlw	01h
  6584  0F8A  3001               	movwf	(??___fldiv+4)+0
  6585  0F8B  00FC               u2615:
  6586  0F8C                     	rlf	(??___fldiv+0)+3,w
  6587  0F8C  0D7B               	rrf	(??___fldiv+0)+3,f
  6588  0F8D  0CFB               	rrf	(??___fldiv+0)+2,f
  6589  0F8E  0CFA               	rrf	(??___fldiv+0)+1,f
  6590  0F8F  0CF9               	rrf	(??___fldiv+0)+0,f
  6591  0F90  0CF8               u2610:
  6592  0F91                     	decfsz	(??___fldiv+4)+0,f
  6593  0F91  0BFC               	goto	u2615
  6594  0F92  2F8C               	movf	3+(??___fldiv+0)+0,w
  6595  0F93  087B               	movwf	(___fldiv@b+3)
  6596  0F94  00F7               	movf	2+(??___fldiv+0)+0,w
  6597  0F95  087A               	movwf	(___fldiv@b+2)
  6598  0F96  00F6               	movf	1+(??___fldiv+0)+0,w
  6599  0F97  0879               	movwf	(___fldiv@b+1)
  6600  0F98  00F5               	movf	0+(??___fldiv+0)+0,w
  6601  0F99  0878               	movwf	(___fldiv@b)
  6602  0F9A  00F4               
  6603                           	line	154
  6604                           	
  6605                           l2164:	
  6606  0F9B                     	movlw	01h
  6607  0F9B  3001               	addwf	(___fldiv@new_exp),f
  6608  0F9C  07A5               	skipnc
  6609  0F9D  1803               	incf	(___fldiv@new_exp+1),f
  6610  0F9E  0AA6               	movlw	0
  6611  0F9F  3000               	addwf	(___fldiv@new_exp+1),f
  6612  0FA0  07A6               	goto	l2166
  6613  0FA1  2FA3               	line	155
  6614                           	
  6615                           l648:	
  6616  0FA2                     	goto	l2166
  6617  0FA2  2FA3               	line	156
  6618                           	
  6619                           l647:	
  6620  0FA3                     	line	159
  6621                           	
  6622                           l2166:	
  6623  0FA3                     	movf	(___fldiv@new_exp+1),w
  6624  0FA3  0826               	xorlw	80h
  6625  0FA4  3A80               	movwf	btemp+1
  6626  0FA5  00FF               	movlw	(0)^80h
  6627  0FA6  3080               	subwf	btemp+1,w
  6628  0FA7  027F               	skipz
  6629  0FA8  1D03               	goto	u2625
  6630  0FA9  2FAC               	movlw	0FFh
  6631  0FAA  30FF               	subwf	(___fldiv@new_exp),w
  6632  0FAB  0225               u2625:
  6633  0FAC                     
  6634                           	skipc
  6635  0FAC  1C03               	goto	u2621
  6636  0FAD  2FAF               	goto	u2620
  6637  0FAE  2FB0               u2621:
  6638  0FAF                     	goto	l2170
  6639  0FAF  2FBF               u2620:
  6640  0FB0                     	line	160
  6641                           	
  6642                           l2168:	
  6643  0FB0                     	movlw	0FFh
  6644  0FB0  30FF               	bcf	status, 5	;RP0=0, select bank0
  6645  0FB1  1283               	bcf	status, 6	;RP1=0, select bank0
  6646  0FB2  1303               	movwf	(___fldiv@new_exp)
  6647  0FB3  00A5               	movlw	0
  6648  0FB4  3000               	movwf	((___fldiv@new_exp))+1
  6649  0FB5  00A6               	line	161
  6650                           	movlw	high highword(0)
  6651  0FB6  3000               	movwf	(___fldiv@b+3)
  6652  0FB7  00F7               	movlw	low highword(0)
  6653  0FB8  3000               	movwf	(___fldiv@b+2)
  6654  0FB9  00F6               	movlw	high(0)
  6655  0FBA  3000               	movwf	(___fldiv@b+1)
  6656  0FBB  00F5               	movlw	low(0)
  6657  0FBC  3000               	movwf	(___fldiv@b)
  6658  0FBD  00F4               
  6659                           	goto	l2170
  6660  0FBE  2FBF               	line	162
  6661                           	
  6662                           l649:	
  6663  0FBF                     	line	165
  6664                           	
  6665                           l2170:	
  6666  0FBF                     	bcf	status, 5	;RP0=0, select bank0
  6667  0FBF  1283               	bcf	status, 6	;RP1=0, select bank0
  6668  0FC0  1303               	movf	(___fldiv@new_exp+1),w
  6669  0FC1  0826               	xorlw	80h
  6670  0FC2  3A80               	movwf	btemp+1
  6671  0FC3  00FF               	movlw	(0)^80h
  6672  0FC4  3080               	subwf	btemp+1,w
  6673  0FC5  027F               	skipz
  6674  0FC6  1D03               	goto	u2635
  6675  0FC7  2FCA               	movlw	01h
  6676  0FC8  3001               	subwf	(___fldiv@new_exp),w
  6677  0FC9  0225               u2635:
  6678  0FCA                     
  6679                           	skipnc
  6680  0FCA  1803               	goto	u2631
  6681  0FCB  2FCD               	goto	u2630
  6682  0FCC  2FCE               u2631:
  6683  0FCD                     	goto	l650
  6684  0FCD  2FDB               u2630:
  6685  0FCE                     	line	166
  6686                           	
  6687                           l2172:	
  6688  0FCE                     	bcf	status, 5	;RP0=0, select bank0
  6689  0FCE  1283               	bcf	status, 6	;RP1=0, select bank0
  6690  0FCF  1303               	clrf	(___fldiv@new_exp)
  6691  0FD0  01A5               	clrf	(___fldiv@new_exp+1)
  6692  0FD1  01A6               	line	167
  6693                           	
  6694                           l2174:	
  6695  0FD2                     	movlw	high highword(0)
  6696  0FD2  3000               	movwf	(___fldiv@b+3)
  6697  0FD3  00F7               	movlw	low highword(0)
  6698  0FD4  3000               	movwf	(___fldiv@b+2)
  6699  0FD5  00F6               	movlw	high(0)
  6700  0FD6  3000               	movwf	(___fldiv@b+1)
  6701  0FD7  00F5               	movlw	low(0)
  6702  0FD8  3000               	movwf	(___fldiv@b)
  6703  0FD9  00F4               
  6704                           	line	169
  6705                           	
  6706                           l2176:	
  6707  0FDA                     	clrf	(___fldiv@sign)
  6708  0FDA  01A4               	line	170
  6709                           	
  6710                           l650:	
  6711  0FDB                     	line	173
  6712                           	bcf	status, 5	;RP0=0, select bank0
  6713  0FDB  1283               	bcf	status, 6	;RP1=0, select bank0
  6714  0FDC  1303               	movf	(___fldiv@new_exp),w
  6715  0FDD  0825               	movwf	(??___fldiv+0)+0
  6716  0FDE  00F8               	movf	(??___fldiv+0)+0,w
  6717  0FDF  0878               	movwf	(___fldiv@bexp)
  6718  0FE0  00AB               	line	175
  6719                           	
  6720                           l2178:	
  6721  0FE1                     	btfss	(___fldiv@bexp),(0)&7
  6722  0FE1  1C2B               	goto	u2641
  6723  0FE2  2FE4               	goto	u2640
  6724  0FE3  2FE5               u2641:
  6725  0FE4                     	goto	l2182
  6726  0FE4  2FE7               u2640:
  6727  0FE5                     	line	176
  6728                           	
  6729                           l2180:	
  6730  0FE5                     	bsf	0+(___fldiv@b)+02h+(7/8),(7)&7
  6731  0FE5  17F6               	line	177
  6732                           	goto	l652
  6733  0FE6  2FEB               	line	179
  6734                           	
  6735                           l651:	
  6736  0FE7                     	line	180
  6737                           	
  6738                           l2182:	
  6739  0FE7                     	movlw	low(07Fh)
  6740  0FE7  307F               	movwf	(??___fldiv+0)+0
  6741  0FE8  00F8               	movf	(??___fldiv+0)+0,w
  6742  0FE9  0878               	andwf	0+(___fldiv@b)+02h,f
  6743  0FEA  05F6               	line	181
  6744                           	
  6745                           l652:	
  6746  0FEB                     	line	182
  6747                           	movf	(___fldiv@bexp),w
  6748  0FEB  082B               	movwf	(??___fldiv+0)+0
  6749  0FEC  00F8               	clrc
  6750  0FED  1003               	rrf	(??___fldiv+0)+0,w
  6751  0FEE  0C78               	movwf	(??___fldiv+1)+0
  6752  0FEF  00F9               	movf	(??___fldiv+1)+0,w
  6753  0FF0  0879               	movwf	0+(___fldiv@b)+03h
  6754  0FF1  00F7               	line	183
  6755                           	movf	(___fldiv@sign),w
  6756  0FF2  0824               	movwf	(??___fldiv+0)+0
  6757  0FF3  00F8               	movf	(??___fldiv+0)+0,w
  6758  0FF4  0878               	iorwf	0+(___fldiv@b)+03h,f
  6759  0FF5  04F7               	line	184
  6760                           	
  6761                           l2184:	
  6762  0FF6                     	movf	(___fldiv@b+3),w
  6763  0FF6  0877               	movwf	(?___fldiv+3)
  6764  0FF7  00F3               	movf	(___fldiv@b+2),w
  6765  0FF8  0876               	movwf	(?___fldiv+2)
  6766  0FF9  00F2               	movf	(___fldiv@b+1),w
  6767  0FFA  0875               	movwf	(?___fldiv+1)
  6768  0FFB  00F1               	movf	(___fldiv@b),w
  6769  0FFC  0874               	movwf	(?___fldiv)
  6770  0FFD  00F0               
  6771                           	goto	l630
  6772  0FFE  2FFF               	
  6773                           l2186:	
  6774  0FFF                     	line	185
  6775                           	
  6776                           l630:	
  6777  0FFF                     	return
  6778  0FFF  0008               	opt stack 0
  6779                           GLOBAL	__end_of___fldiv
  6780                           	__end_of___fldiv:
  6781  1000                     	signat	___fldiv,8316
  6782                           	global	___awmod
  6783                           
  6784 ;; *************** function ___awmod *****************
  6785 ;; Defined at:
  6786 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  6787 ;; Parameters:    Size  Location     Type
  6788 ;;  divisor         2    9[COMMON] int 
  6789 ;;  dividend        2   11[COMMON] int 
  6790 ;; Auto vars:     Size  Location     Type
  6791 ;;  sign            1    1[BANK0 ] unsigned char 
  6792 ;;  counter         1    0[BANK0 ] unsigned char 
  6793 ;; Return value:  Size  Location     Type
  6794 ;;                  2    9[COMMON] int 
  6795 ;; Registers used:
  6796 ;;		wreg, status,2, status,0
  6797 ;; Tracked objects:
  6798 ;;		On entry : 0/0
  6799 ;;		On exit  : 0/0
  6800 ;;		Unchanged: 0/0
  6801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6802 ;;      Params:         4       0       0       0       0
  6803 ;;      Locals:         0       2       0       0       0
  6804 ;;      Temps:          1       0       0       0       0
  6805 ;;      Totals:         5       2       0       0       0
  6806 ;;Total ram usage:        7 bytes
  6807 ;; Hardware stack levels used:    1
  6808 ;; This function calls:
  6809 ;;		Nothing
  6810 ;; This function is called by:
  6811 ;;		_main
  6812 ;; This function uses a non-reentrant model
  6813 ;;
  6814                           psect	text11,local,class=CODE,delta=2,merge=1,group=1
  6815                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  6816                           	line	5
  6817                           global __ptext11
  6818                           __ptext11:	;psect for function ___awmod
  6819  0BBB                     psect	text11
  6820                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  6821                           	line	5
  6822                           	global	__size_of___awmod
  6823                           	__size_of___awmod	equ	__end_of___awmod-___awmod
  6824  0065                     	
  6825                           ___awmod:	
  6826  0BBB                     ;incstack = 0
  6827                           	opt	stack 7
  6828                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  6829                           	line	12
  6830                           	
  6831                           l1972:	
  6832  0BBB                     	bcf	status, 5	;RP0=0, select bank0
  6833  0BBB  1283               	bcf	status, 6	;RP1=0, select bank0
  6834  0BBC  1303               	clrf	(___awmod@sign)
  6835  0BBD  01A1               	line	13
  6836                           	
  6837                           l1974:	
  6838  0BBE                     	btfss	(___awmod@dividend+1),7
  6839  0BBE  1FFC               	goto	u2161
  6840  0BBF  2BC1               	goto	u2160
  6841  0BC0  2BC2               u2161:
  6842  0BC1                     	goto	l1980
  6843  0BC1  2BCA               u2160:
  6844  0BC2                     	line	14
  6845                           	
  6846                           l1976:	
  6847  0BC2                     	comf	(___awmod@dividend),f
  6848  0BC2  09FB               	comf	(___awmod@dividend+1),f
  6849  0BC3  09FC               	incf	(___awmod@dividend),f
  6850  0BC4  0AFB               	skipnz
  6851  0BC5  1903               	incf	(___awmod@dividend+1),f
  6852  0BC6  0AFC               	line	15
  6853                           	
  6854                           l1978:	
  6855  0BC7                     	clrf	(___awmod@sign)
  6856  0BC7  01A1               	incf	(___awmod@sign),f
  6857  0BC8  0AA1               	goto	l1980
  6858  0BC9  2BCA               	line	16
  6859                           	
  6860                           l435:	
  6861  0BCA                     	line	17
  6862                           	
  6863                           l1980:	
  6864  0BCA                     	btfss	(___awmod@divisor+1),7
  6865  0BCA  1FFA               	goto	u2171
  6866  0BCB  2BCD               	goto	u2170
  6867  0BCC  2BCE               u2171:
  6868  0BCD                     	goto	l1984
  6869  0BCD  2BD4               u2170:
  6870  0BCE                     	line	18
  6871                           	
  6872                           l1982:	
  6873  0BCE                     	comf	(___awmod@divisor),f
  6874  0BCE  09F9               	comf	(___awmod@divisor+1),f
  6875  0BCF  09FA               	incf	(___awmod@divisor),f
  6876  0BD0  0AF9               	skipnz
  6877  0BD1  1903               	incf	(___awmod@divisor+1),f
  6878  0BD2  0AFA               	goto	l1984
  6879  0BD3  2BD4               	
  6880                           l436:	
  6881  0BD4                     	line	19
  6882                           	
  6883                           l1984:	
  6884  0BD4                     	movf	((___awmod@divisor)),w
  6885  0BD4  0879               iorwf	((___awmod@divisor+1)),w
  6886  0BD5  047A               	btfsc	status,2
  6887  0BD6  1903               	goto	u2181
  6888  0BD7  2BD9               	goto	u2180
  6889  0BD8  2BDA               u2181:
  6890  0BD9                     	goto	l2002
  6891  0BD9  2C0F               u2180:
  6892  0BDA                     	line	20
  6893                           	
  6894                           l1986:	
  6895  0BDA                     	clrf	(___awmod@counter)
  6896  0BDA  01A0               	incf	(___awmod@counter),f
  6897  0BDB  0AA0               	line	21
  6898                           	goto	l1992
  6899  0BDC  2BE9               	
  6900                           l439:	
  6901  0BDD                     	line	22
  6902                           	
  6903                           l1988:	
  6904  0BDD                     	movlw	01h
  6905  0BDD  3001               	
  6906                           u2195:
  6907  0BDE                     	clrc
  6908  0BDE  1003               	rlf	(___awmod@divisor),f
  6909  0BDF  0DF9               	rlf	(___awmod@divisor+1),f
  6910  0BE0  0DFA               	addlw	-1
  6911  0BE1  3EFF               	skipz
  6912  0BE2  1D03               	goto	u2195
  6913  0BE3  2BDE               	line	23
  6914                           	
  6915                           l1990:	
  6916  0BE4                     	movlw	low(01h)
  6917  0BE4  3001               	movwf	(??___awmod+0)+0
  6918  0BE5  00FD               	movf	(??___awmod+0)+0,w
  6919  0BE6  087D               	addwf	(___awmod@counter),f
  6920  0BE7  07A0               	goto	l1992
  6921  0BE8  2BE9               	line	24
  6922                           	
  6923                           l438:	
  6924  0BE9                     	line	21
  6925                           	
  6926                           l1992:	
  6927  0BE9                     	btfss	(___awmod@divisor+1),(15)&7
  6928  0BE9  1FFA               	goto	u2201
  6929  0BEA  2BEC               	goto	u2200
  6930  0BEB  2BED               u2201:
  6931  0BEC                     	goto	l1988
  6932  0BEC  2BDD               u2200:
  6933  0BED                     	goto	l1994
  6934  0BED  2BEF               	
  6935                           l440:	
  6936  0BEE                     	goto	l1994
  6937  0BEE  2BEF               	line	25
  6938                           	
  6939                           l441:	
  6940  0BEF                     	line	26
  6941                           	
  6942                           l1994:	
  6943  0BEF                     	movf	(___awmod@divisor+1),w
  6944  0BEF  087A               	subwf	(___awmod@dividend+1),w
  6945  0BF0  027C               	skipz
  6946  0BF1  1D03               	goto	u2215
  6947  0BF2  2BF5               	movf	(___awmod@divisor),w
  6948  0BF3  0879               	subwf	(___awmod@dividend),w
  6949  0BF4  027B               u2215:
  6950  0BF5                     	skipc
  6951  0BF5  1C03               	goto	u2211
  6952  0BF6  2BF8               	goto	u2210
  6953  0BF7  2BF9               u2211:
  6954  0BF8                     	goto	l1998
  6955  0BF8  2C00               u2210:
  6956  0BF9                     	line	27
  6957                           	
  6958                           l1996:	
  6959  0BF9                     	movf	(___awmod@divisor),w
  6960  0BF9  0879               	subwf	(___awmod@dividend),f
  6961  0BFA  02FB               	movf	(___awmod@divisor+1),w
  6962  0BFB  087A               	skipc
  6963  0BFC  1C03               	decf	(___awmod@dividend+1),f
  6964  0BFD  03FC               	subwf	(___awmod@dividend+1),f
  6965  0BFE  02FC               	goto	l1998
  6966  0BFF  2C00               	
  6967                           l442:	
  6968  0C00                     	line	28
  6969                           	
  6970                           l1998:	
  6971  0C00                     	movlw	01h
  6972  0C00  3001               	
  6973                           u2225:
  6974  0C01                     	clrc
  6975  0C01  1003               	rrf	(___awmod@divisor+1),f
  6976  0C02  0CFA               	rrf	(___awmod@divisor),f
  6977  0C03  0CF9               	addlw	-1
  6978  0C04  3EFF               	skipz
  6979  0C05  1D03               	goto	u2225
  6980  0C06  2C01               	line	29
  6981                           	
  6982                           l2000:	
  6983  0C07                     	movlw	01h
  6984  0C07  3001               	subwf	(___awmod@counter),f
  6985  0C08  02A0               	btfss	status,2
  6986  0C09  1D03               	goto	u2231
  6987  0C0A  2C0C               	goto	u2230
  6988  0C0B  2C0D               u2231:
  6989  0C0C                     	goto	l1994
  6990  0C0C  2BEF               u2230:
  6991  0C0D                     	goto	l2002
  6992  0C0D  2C0F               	
  6993                           l443:	
  6994  0C0E                     	goto	l2002
  6995  0C0E  2C0F               	line	30
  6996                           	
  6997                           l437:	
  6998  0C0F                     	line	31
  6999                           	
  7000                           l2002:	
  7001  0C0F                     	movf	((___awmod@sign)),w
  7002  0C0F  0821               	btfsc	status,2
  7003  0C10  1903               	goto	u2241
  7004  0C11  2C13               	goto	u2240
  7005  0C12  2C14               u2241:
  7006  0C13                     	goto	l2006
  7007  0C13  2C1A               u2240:
  7008  0C14                     	line	32
  7009                           	
  7010                           l2004:	
  7011  0C14                     	comf	(___awmod@dividend),f
  7012  0C14  09FB               	comf	(___awmod@dividend+1),f
  7013  0C15  09FC               	incf	(___awmod@dividend),f
  7014  0C16  0AFB               	skipnz
  7015  0C17  1903               	incf	(___awmod@dividend+1),f
  7016  0C18  0AFC               	goto	l2006
  7017  0C19  2C1A               	
  7018                           l444:	
  7019  0C1A                     	line	33
  7020                           	
  7021                           l2006:	
  7022  0C1A                     	movf	(___awmod@dividend+1),w
  7023  0C1A  087C               	movwf	(?___awmod+1)
  7024  0C1B  00FA               	movf	(___awmod@dividend),w
  7025  0C1C  087B               	movwf	(?___awmod)
  7026  0C1D  00F9               	goto	l445
  7027  0C1E  2C1F               	
  7028                           l2008:	
  7029  0C1F                     	line	34
  7030                           	
  7031                           l445:	
  7032  0C1F                     	return
  7033  0C1F  0008               	opt stack 0
  7034                           GLOBAL	__end_of___awmod
  7035                           	__end_of___awmod:
  7036  0C20                     	signat	___awmod,8314
  7037                           	global	___awdiv
  7038                           
  7039 ;; *************** function ___awdiv *****************
  7040 ;; Defined at:
  7041 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  7042 ;; Parameters:    Size  Location     Type
  7043 ;;  divisor         2    0[COMMON] int 
  7044 ;;  dividend        2    2[COMMON] int 
  7045 ;; Auto vars:     Size  Location     Type
  7046 ;;  quotient        2    7[COMMON] int 
  7047 ;;  sign            1    6[COMMON] unsigned char 
  7048 ;;  counter         1    5[COMMON] unsigned char 
  7049 ;; Return value:  Size  Location     Type
  7050 ;;                  2    0[COMMON] int 
  7051 ;; Registers used:
  7052 ;;		wreg, status,2, status,0
  7053 ;; Tracked objects:
  7054 ;;		On entry : 0/0
  7055 ;;		On exit  : 0/0
  7056 ;;		Unchanged: 0/0
  7057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7058 ;;      Params:         4       0       0       0       0
  7059 ;;      Locals:         4       0       0       0       0
  7060 ;;      Temps:          1       0       0       0       0
  7061 ;;      Totals:         9       0       0       0       0
  7062 ;;Total ram usage:        9 bytes
  7063 ;; Hardware stack levels used:    1
  7064 ;; This function calls:
  7065 ;;		Nothing
  7066 ;; This function is called by:
  7067 ;;		_main
  7068 ;; This function uses a non-reentrant model
  7069 ;;
  7070                           psect	text12,local,class=CODE,delta=2,merge=1,group=1
  7071                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  7072                           	line	5
  7073                           global __ptext12
  7074                           __ptext12:	;psect for function ___awdiv
  7075  0C20                     psect	text12
  7076                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  7077                           	line	5
  7078                           	global	__size_of___awdiv
  7079                           	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  7080  0071                     	
  7081                           ___awdiv:	
  7082  0C20                     ;incstack = 0
  7083                           	opt	stack 7
  7084                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  7085                           	line	13
  7086                           	
  7087                           l1928:	
  7088  0C20                     	clrf	(___awdiv@sign)
  7089  0C20  01F6               	line	14
  7090                           	
  7091                           l1930:	
  7092  0C21                     	btfss	(___awdiv@divisor+1),7
  7093  0C21  1FF1               	goto	u2061
  7094  0C22  2C24               	goto	u2060
  7095  0C23  2C25               u2061:
  7096  0C24                     	goto	l1936
  7097  0C24  2C2D               u2060:
  7098  0C25                     	line	15
  7099                           	
  7100                           l1932:	
  7101  0C25                     	comf	(___awdiv@divisor),f
  7102  0C25  09F0               	comf	(___awdiv@divisor+1),f
  7103  0C26  09F1               	incf	(___awdiv@divisor),f
  7104  0C27  0AF0               	skipnz
  7105  0C28  1903               	incf	(___awdiv@divisor+1),f
  7106  0C29  0AF1               	line	16
  7107                           	
  7108                           l1934:	
  7109  0C2A                     	clrf	(___awdiv@sign)
  7110  0C2A  01F6               	incf	(___awdiv@sign),f
  7111  0C2B  0AF6               	goto	l1936
  7112  0C2C  2C2D               	line	17
  7113                           	
  7114                           l422:	
  7115  0C2D                     	line	18
  7116                           	
  7117                           l1936:	
  7118  0C2D                     	btfss	(___awdiv@dividend+1),7
  7119  0C2D  1FF3               	goto	u2071
  7120  0C2E  2C30               	goto	u2070
  7121  0C2F  2C31               u2071:
  7122  0C30                     	goto	l1942
  7123  0C30  2C3B               u2070:
  7124  0C31                     	line	19
  7125                           	
  7126                           l1938:	
  7127  0C31                     	comf	(___awdiv@dividend),f
  7128  0C31  09F2               	comf	(___awdiv@dividend+1),f
  7129  0C32  09F3               	incf	(___awdiv@dividend),f
  7130  0C33  0AF2               	skipnz
  7131  0C34  1903               	incf	(___awdiv@dividend+1),f
  7132  0C35  0AF3               	line	20
  7133                           	
  7134                           l1940:	
  7135  0C36                     	movlw	low(01h)
  7136  0C36  3001               	movwf	(??___awdiv+0)+0
  7137  0C37  00F4               	movf	(??___awdiv+0)+0,w
  7138  0C38  0874               	xorwf	(___awdiv@sign),f
  7139  0C39  06F6               	goto	l1942
  7140  0C3A  2C3B               	line	21
  7141                           	
  7142                           l423:	
  7143  0C3B                     	line	22
  7144                           	
  7145                           l1942:	
  7146  0C3B                     	clrf	(___awdiv@quotient)
  7147  0C3B  01F7               	clrf	(___awdiv@quotient+1)
  7148  0C3C  01F8               	line	23
  7149                           	
  7150                           l1944:	
  7151  0C3D                     	movf	((___awdiv@divisor)),w
  7152  0C3D  0870               iorwf	((___awdiv@divisor+1)),w
  7153  0C3E  0471               	btfsc	status,2
  7154  0C3F  1903               	goto	u2081
  7155  0C40  2C42               	goto	u2080
  7156  0C41  2C43               u2081:
  7157  0C42                     	goto	l1964
  7158  0C42  2C80               u2080:
  7159  0C43                     	line	24
  7160                           	
  7161                           l1946:	
  7162  0C43                     	clrf	(___awdiv@counter)
  7163  0C43  01F5               	incf	(___awdiv@counter),f
  7164  0C44  0AF5               	line	25
  7165                           	goto	l1952
  7166  0C45  2C52               	
  7167                           l426:	
  7168  0C46                     	line	26
  7169                           	
  7170                           l1948:	
  7171  0C46                     	movlw	01h
  7172  0C46  3001               	
  7173                           u2095:
  7174  0C47                     	clrc
  7175  0C47  1003               	rlf	(___awdiv@divisor),f
  7176  0C48  0DF0               	rlf	(___awdiv@divisor+1),f
  7177  0C49  0DF1               	addlw	-1
  7178  0C4A  3EFF               	skipz
  7179  0C4B  1D03               	goto	u2095
  7180  0C4C  2C47               	line	27
  7181                           	
  7182                           l1950:	
  7183  0C4D                     	movlw	low(01h)
  7184  0C4D  3001               	movwf	(??___awdiv+0)+0
  7185  0C4E  00F4               	movf	(??___awdiv+0)+0,w
  7186  0C4F  0874               	addwf	(___awdiv@counter),f
  7187  0C50  07F5               	goto	l1952
  7188  0C51  2C52               	line	28
  7189                           	
  7190                           l425:	
  7191  0C52                     	line	25
  7192                           	
  7193                           l1952:	
  7194  0C52                     	btfss	(___awdiv@divisor+1),(15)&7
  7195  0C52  1FF1               	goto	u2101
  7196  0C53  2C55               	goto	u2100
  7197  0C54  2C56               u2101:
  7198  0C55                     	goto	l1948
  7199  0C55  2C46               u2100:
  7200  0C56                     	goto	l1954
  7201  0C56  2C58               	
  7202                           l427:	
  7203  0C57                     	goto	l1954
  7204  0C57  2C58               	line	29
  7205                           	
  7206                           l428:	
  7207  0C58                     	line	30
  7208                           	
  7209                           l1954:	
  7210  0C58                     	movlw	01h
  7211  0C58  3001               	
  7212                           u2115:
  7213  0C59                     	clrc
  7214  0C59  1003               	rlf	(___awdiv@quotient),f
  7215  0C5A  0DF7               	rlf	(___awdiv@quotient+1),f
  7216  0C5B  0DF8               	addlw	-1
  7217  0C5C  3EFF               	skipz
  7218  0C5D  1D03               	goto	u2115
  7219  0C5E  2C59               	line	31
  7220                           	movf	(___awdiv@divisor+1),w
  7221  0C5F  0871               	subwf	(___awdiv@dividend+1),w
  7222  0C60  0273               	skipz
  7223  0C61  1D03               	goto	u2125
  7224  0C62  2C65               	movf	(___awdiv@divisor),w
  7225  0C63  0870               	subwf	(___awdiv@dividend),w
  7226  0C64  0272               u2125:
  7227  0C65                     	skipc
  7228  0C65  1C03               	goto	u2121
  7229  0C66  2C68               	goto	u2120
  7230  0C67  2C69               u2121:
  7231  0C68                     	goto	l1960
  7232  0C68  2C71               u2120:
  7233  0C69                     	line	32
  7234                           	
  7235                           l1956:	
  7236  0C69                     	movf	(___awdiv@divisor),w
  7237  0C69  0870               	subwf	(___awdiv@dividend),f
  7238  0C6A  02F2               	movf	(___awdiv@divisor+1),w
  7239  0C6B  0871               	skipc
  7240  0C6C  1C03               	decf	(___awdiv@dividend+1),f
  7241  0C6D  03F3               	subwf	(___awdiv@dividend+1),f
  7242  0C6E  02F3               	line	33
  7243                           	
  7244                           l1958:	
  7245  0C6F                     	bsf	(___awdiv@quotient)+(0/8),(0)&7
  7246  0C6F  1477               	goto	l1960
  7247  0C70  2C71               	line	34
  7248                           	
  7249                           l429:	
  7250  0C71                     	line	35
  7251                           	
  7252                           l1960:	
  7253  0C71                     	movlw	01h
  7254  0C71  3001               	
  7255                           u2135:
  7256  0C72                     	clrc
  7257  0C72  1003               	rrf	(___awdiv@divisor+1),f
  7258  0C73  0CF1               	rrf	(___awdiv@divisor),f
  7259  0C74  0CF0               	addlw	-1
  7260  0C75  3EFF               	skipz
  7261  0C76  1D03               	goto	u2135
  7262  0C77  2C72               	line	36
  7263                           	
  7264                           l1962:	
  7265  0C78                     	movlw	01h
  7266  0C78  3001               	subwf	(___awdiv@counter),f
  7267  0C79  02F5               	btfss	status,2
  7268  0C7A  1D03               	goto	u2141
  7269  0C7B  2C7D               	goto	u2140
  7270  0C7C  2C7E               u2141:
  7271  0C7D                     	goto	l1954
  7272  0C7D  2C58               u2140:
  7273  0C7E                     	goto	l1964
  7274  0C7E  2C80               	
  7275                           l430:	
  7276  0C7F                     	goto	l1964
  7277  0C7F  2C80               	line	37
  7278                           	
  7279                           l424:	
  7280  0C80                     	line	38
  7281                           	
  7282                           l1964:	
  7283  0C80                     	movf	((___awdiv@sign)),w
  7284  0C80  0876               	btfsc	status,2
  7285  0C81  1903               	goto	u2151
  7286  0C82  2C84               	goto	u2150
  7287  0C83  2C85               u2151:
  7288  0C84                     	goto	l1968
  7289  0C84  2C8B               u2150:
  7290  0C85                     	line	39
  7291                           	
  7292                           l1966:	
  7293  0C85                     	comf	(___awdiv@quotient),f
  7294  0C85  09F7               	comf	(___awdiv@quotient+1),f
  7295  0C86  09F8               	incf	(___awdiv@quotient),f
  7296  0C87  0AF7               	skipnz
  7297  0C88  1903               	incf	(___awdiv@quotient+1),f
  7298  0C89  0AF8               	goto	l1968
  7299  0C8A  2C8B               	
  7300                           l431:	
  7301  0C8B                     	line	40
  7302                           	
  7303                           l1968:	
  7304  0C8B                     	movf	(___awdiv@quotient+1),w
  7305  0C8B  0878               	movwf	(?___awdiv+1)
  7306  0C8C  00F1               	movf	(___awdiv@quotient),w
  7307  0C8D  0877               	movwf	(?___awdiv)
  7308  0C8E  00F0               	goto	l432
  7309  0C8F  2C90               	
  7310                           l1970:	
  7311  0C90                     	line	41
  7312                           	
  7313                           l432:	
  7314  0C90                     	return
  7315  0C90  0008               	opt stack 0
  7316                           GLOBAL	__end_of___awdiv
  7317                           	__end_of___awdiv:
  7318  0C91                     	signat	___awdiv,8314
  7319                           	global	_UART_Init
  7320                           
  7321 ;; *************** function _UART_Init *****************
  7322 ;; Defined at:
  7323 ;;		line 130 in file "ROK3ZAD2.c"
  7324 ;; Parameters:    Size  Location     Type
  7325 ;;		None
  7326 ;; Auto vars:     Size  Location     Type
  7327 ;;		None
  7328 ;; Return value:  Size  Location     Type
  7329 ;;                  1    wreg      void 
  7330 ;; Registers used:
  7331 ;;		wreg
  7332 ;; Tracked objects:
  7333 ;;		On entry : 0/0
  7334 ;;		On exit  : 0/0
  7335 ;;		Unchanged: 0/0
  7336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7337 ;;      Params:         0       0       0       0       0
  7338 ;;      Locals:         0       0       0       0       0
  7339 ;;      Temps:          0       0       0       0       0
  7340 ;;      Totals:         0       0       0       0       0
  7341 ;;Total ram usage:        0 bytes
  7342 ;; Hardware stack levels used:    1
  7343 ;; This function calls:
  7344 ;;		Nothing
  7345 ;; This function is called by:
  7346 ;;		_main
  7347 ;; This function uses a non-reentrant model
  7348 ;;
  7349                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  7350                           	file	"ROK3ZAD2.c"
  7351                           	line	130
  7352                           global __ptext13
  7353                           __ptext13:	;psect for function _UART_Init
  7354  0915                     psect	text13
  7355                           	file	"ROK3ZAD2.c"
  7356                           	line	130
  7357                           	global	__size_of_UART_Init
  7358                           	__size_of_UART_Init	equ	__end_of_UART_Init-_UART_Init
  7359  0018                     	
  7360                           _UART_Init:	
  7361  0915                     ;incstack = 0
  7362                           	opt	stack 7
  7363                           ; Regs used in _UART_Init: [wreg]
  7364                           	line	131
  7365                           	
  7366                           l1818:	
  7367  0915                     ;ROK3ZAD2.c: 131:     TRISC6=0;
  7368                           	bsf	status, 5	;RP0=1, select bank1
  7369  0915  1683               	bcf	status, 6	;RP1=0, select bank1
  7370  0916  1303               	bcf	(1086/8)^080h,(1086)&7	;volatile
  7371  0917  1307               	line	132
  7372                           ;ROK3ZAD2.c: 132:     TRISC7=1;
  7373                           	bsf	(1087/8)^080h,(1087)&7	;volatile
  7374  0918  1787               	line	134
  7375                           	
  7376                           l1820:	
  7377  0919                     ;ROK3ZAD2.c: 134:     SPBRG=((20000000/16)/9600)-1;
  7378                           	movlw	low(081h)
  7379  0919  3081               	movwf	(153)^080h	;volatile
  7380  091A  0099               	line	135
  7381                           	
  7382                           l1822:	
  7383  091B                     ;ROK3ZAD2.c: 135:     BRGH=1;
  7384                           	bsf	(1218/8)^080h,(1218)&7	;volatile
  7385  091B  1518               	line	137
  7386                           	
  7387                           l1824:	
  7388  091C                     ;ROK3ZAD2.c: 137:     SYNC=0;
  7389                           	bcf	(1220/8)^080h,(1220)&7	;volatile
  7390  091C  1218               	line	138
  7391                           	
  7392                           l1826:	
  7393  091D                     ;ROK3ZAD2.c: 138:     SPEN=1;
  7394                           	bcf	status, 5	;RP0=0, select bank0
  7395  091D  1283               	bcf	status, 6	;RP1=0, select bank0
  7396  091E  1303               	bsf	(199/8),(199)&7	;volatile
  7397  091F  1798               	line	140
  7398                           	
  7399                           l1828:	
  7400  0920                     ;ROK3ZAD2.c: 140:     TXEN=1;
  7401                           	bsf	status, 5	;RP0=1, select bank1
  7402  0920  1683               	bcf	status, 6	;RP1=0, select bank1
  7403  0921  1303               	bsf	(1221/8)^080h,(1221)&7	;volatile
  7404  0922  1698               	line	141
  7405                           	
  7406                           l1830:	
  7407  0923                     ;ROK3ZAD2.c: 141:     CREN=1;
  7408                           	bcf	status, 5	;RP0=0, select bank0
  7409  0923  1283               	bcf	status, 6	;RP1=0, select bank0
  7410  0924  1303               	bsf	(196/8),(196)&7	;volatile
  7411  0925  1618               	line	143
  7412                           	
  7413                           l1832:	
  7414  0926                     ;ROK3ZAD2.c: 143:     TX9=0;
  7415                           	bsf	status, 5	;RP0=1, select bank1
  7416  0926  1683               	bcf	status, 6	;RP1=0, select bank1
  7417  0927  1303               	bcf	(1222/8)^080h,(1222)&7	;volatile
  7418  0928  1318               	line	144
  7419                           	
  7420                           l1834:	
  7421  0929                     ;ROK3ZAD2.c: 144:     RX9=0;
  7422                           	bcf	status, 5	;RP0=0, select bank0
  7423  0929  1283               	bcf	status, 6	;RP1=0, select bank0
  7424  092A  1303               	bcf	(198/8),(198)&7	;volatile
  7425  092B  1318               	line	145
  7426                           	
  7427                           l108:	
  7428  092C                     	return
  7429  092C  0008               	opt stack 0
  7430                           GLOBAL	__end_of_UART_Init
  7431                           	__end_of_UART_Init:
  7432  092D                     	signat	_UART_Init,89
  7433                           	global	_UART_Get_Char
  7434                           
  7435 ;; *************** function _UART_Get_Char *****************
  7436 ;; Defined at:
  7437 ;;		line 152 in file "ROK3ZAD2.c"
  7438 ;; Parameters:    Size  Location     Type
  7439 ;;		None
  7440 ;; Auto vars:     Size  Location     Type
  7441 ;;		None
  7442 ;; Return value:  Size  Location     Type
  7443 ;;                  1    wreg      unsigned char 
  7444 ;; Registers used:
  7445 ;;		wreg
  7446 ;; Tracked objects:
  7447 ;;		On entry : 0/0
  7448 ;;		On exit  : 0/0
  7449 ;;		Unchanged: 0/0
  7450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7451 ;;      Params:         0       0       0       0       0
  7452 ;;      Locals:         0       0       0       0       0
  7453 ;;      Temps:          0       0       0       0       0
  7454 ;;      Totals:         0       0       0       0       0
  7455 ;;Total ram usage:        0 bytes
  7456 ;; Hardware stack levels used:    1
  7457 ;; This function calls:
  7458 ;;		Nothing
  7459 ;; This function is called by:
  7460 ;;		_main
  7461 ;; This function uses a non-reentrant model
  7462 ;;
  7463                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
  7464                           	line	152
  7465                           global __ptext14
  7466                           __ptext14:	;psect for function _UART_Get_Char
  7467  0903                     psect	text14
  7468                           	file	"ROK3ZAD2.c"
  7469                           	line	152
  7470                           	global	__size_of_UART_Get_Char
  7471                           	__size_of_UART_Get_Char	equ	__end_of_UART_Get_Char-_UART_Get_Char
  7472  0012                     	
  7473                           _UART_Get_Char:	
  7474  0903                     ;incstack = 0
  7475                           	opt	stack 7
  7476                           ; Regs used in _UART_Get_Char: [wreg]
  7477                           	line	153
  7478                           	
  7479                           l1836:	
  7480  0903                     ;ROK3ZAD2.c: 153:     if(OERR) {
  7481                           	bcf	status, 5	;RP0=0, select bank0
  7482  0903  1283               	bcf	status, 6	;RP1=0, select bank0
  7483  0904  1303               	btfss	(193/8),(193)&7	;volatile
  7484  0905  1C98               	goto	u1901
  7485  0906  2908               	goto	u1900
  7486  0907  2909               u1901:
  7487  0908                     	goto	l118
  7488  0908  290D               u1900:
  7489  0909                     	line	154
  7490                           	
  7491                           l1838:	
  7492  0909                     ;ROK3ZAD2.c: 154:         CREN=0;
  7493                           	bcf	(196/8),(196)&7	;volatile
  7494  0909  1218               	line	155
  7495                           ;ROK3ZAD2.c: 155:         CREN=1;
  7496                           	bsf	(196/8),(196)&7	;volatile
  7497  090A  1618               	goto	l118
  7498  090B  290D               	line	156
  7499                           ;ROK3ZAD2.c: 156:     }
  7500                           	
  7501                           l117:	
  7502  090C                     	line	157
  7503                           ;ROK3ZAD2.c: 157:     while(!RCIF);
  7504                           	goto	l118
  7505  090C  290D               	
  7506                           l119:	
  7507  090D                     	
  7508                           l118:	
  7509  090D                     	btfss	(101/8),(101)&7	;volatile
  7510  090D  1E8C               	goto	u1911
  7511  090E  2910               	goto	u1910
  7512  090F  2911               u1911:
  7513  0910                     	goto	l118
  7514  0910  290D               u1910:
  7515  0911                     	goto	l1840
  7516  0911  2912               	
  7517                           l120:	
  7518  0912                     	line	158
  7519                           	
  7520                           l1840:	
  7521  0912                     ;ROK3ZAD2.c: 158:     return RCREG;
  7522                           	movf	(26),w	;volatile
  7523  0912  081A               	goto	l121
  7524  0913  2914               	
  7525                           l1842:	
  7526  0914                     	line	159
  7527                           	
  7528                           l121:	
  7529  0914                     	return
  7530  0914  0008               	opt stack 0
  7531                           GLOBAL	__end_of_UART_Get_Char
  7532                           	__end_of_UART_Get_Char:
  7533  0915                     	signat	_UART_Get_Char,89
  7534                           	global	_ServoRotiraj180
  7535                           
  7536 ;; *************** function _ServoRotiraj180 *****************
  7537 ;; Defined at:
  7538 ;;		line 206 in file "ROK3ZAD2.c"
  7539 ;; Parameters:    Size  Location     Type
  7540 ;;		None
  7541 ;; Auto vars:     Size  Location     Type
  7542 ;;  i               2    2[COMMON] unsigned int 
  7543 ;; Return value:  Size  Location     Type
  7544 ;;                  1    wreg      void 
  7545 ;; Registers used:
  7546 ;;		wreg, status,2
  7547 ;; Tracked objects:
  7548 ;;		On entry : 0/0
  7549 ;;		On exit  : 0/0
  7550 ;;		Unchanged: 0/0
  7551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7552 ;;      Params:         0       0       0       0       0
  7553 ;;      Locals:         2       0       0       0       0
  7554 ;;      Temps:          2       0       0       0       0
  7555 ;;      Totals:         4       0       0       0       0
  7556 ;;Total ram usage:        4 bytes
  7557 ;; Hardware stack levels used:    1
  7558 ;; This function calls:
  7559 ;;		Nothing
  7560 ;; This function is called by:
  7561 ;;		_main
  7562 ;; This function uses a non-reentrant model
  7563 ;;
  7564                           psect	text15,local,class=CODE,delta=2,merge=1,group=0
  7565                           	line	206
  7566                           global __ptext15
  7567                           __ptext15:	;psect for function _ServoRotiraj180
  7568  09CA                     psect	text15
  7569                           	file	"ROK3ZAD2.c"
  7570                           	line	206
  7571                           	global	__size_of_ServoRotiraj180
  7572                           	__size_of_ServoRotiraj180	equ	__end_of_ServoRotiraj180-_ServoRotiraj180
  7573  0036                     	
  7574                           _ServoRotiraj180:	
  7575  09CA                     ;incstack = 0
  7576                           	opt	stack 7
  7577                           ; Regs used in _ServoRotiraj180: [wreg+status,2]
  7578                           	line	208
  7579                           	
  7580                           l1866:	
  7581  09CA                     ;ROK3ZAD2.c: 207:     unsigned int i;;ROK3ZAD2.c: 208:     for(i=0;i<50;i++) {
  7582                           	clrf	(ServoRotiraj180@i)
  7583  09CA  01F2               	clrf	(ServoRotiraj180@i+1)
  7584  09CB  01F3               	
  7585                           l1868:	
  7586  09CC                     	movlw	0
  7587  09CC  3000               	subwf	(ServoRotiraj180@i+1),w
  7588  09CD  0273               	movlw	032h
  7589  09CE  3032               	skipnz
  7590  09CF  1903               	subwf	(ServoRotiraj180@i),w
  7591  09D0  0272               	skipc
  7592  09D1  1C03               	goto	u1961
  7593  09D2  29D4               	goto	u1960
  7594  09D3  29D5               u1961:
  7595  09D4                     	goto	l146
  7596  09D4  29D7               u1960:
  7597  09D5                     	goto	l148
  7598  09D5  29FF               	
  7599                           l1870:	
  7600  09D6                     	goto	l148
  7601  09D6  29FF               	
  7602                           l146:	
  7603  09D7                     	line	209
  7604                           ;ROK3ZAD2.c: 209:         RB0=1;
  7605                           	bcf	status, 5	;RP0=0, select bank0
  7606  09D7  1283               	bcf	status, 6	;RP1=0, select bank0
  7607  09D8  1303               	bsf	(48/8),(48)&7	;volatile
  7608  09D9  1406               	line	210
  7609                           	
  7610                           l1872:	
  7611  09DA                     ;ROK3ZAD2.c: 210:         _delay((unsigned long)((2200)*(20000000/4000000.0)));
  7612                           	opt asmopt_push
  7613                           opt asmopt_off
  7614                           movlw	15
  7615  09DA  300F               movwf	((??_ServoRotiraj180+0)+0+1),f
  7616  09DB  00F1               	movlw	71
  7617  09DC  3047               movwf	((??_ServoRotiraj180+0)+0),f
  7618  09DD  00F0               	u3237:
  7619  09DE                     decfsz	((??_ServoRotiraj180+0)+0),f
  7620  09DE  0BF0               	goto	u3237
  7621  09DF  29DE               	decfsz	((??_ServoRotiraj180+0)+0+1),f
  7622  09E0  0BF1               	goto	u3237
  7623  09E1  29DE               	nop2
  7624  09E2  29E3               opt asmopt_pop
  7625                           
  7626                           	line	211
  7627                           	
  7628                           l1874:	
  7629  09E3                     ;ROK3ZAD2.c: 211:         RB0=0;
  7630                           	bcf	status, 5	;RP0=0, select bank0
  7631  09E3  1283               	bcf	status, 6	;RP1=0, select bank0
  7632  09E4  1303               	bcf	(48/8),(48)&7	;volatile
  7633  09E5  1006               	line	212
  7634                           ;ROK3ZAD2.c: 212:         _delay((unsigned long)((17800)*(20000000/4000000.0)));
  7635                           	opt asmopt_push
  7636                           opt asmopt_off
  7637                           movlw	116
  7638  09E6  3074               movwf	((??_ServoRotiraj180+0)+0+1),f
  7639  09E7  00F1               	movlw	148
  7640  09E8  3094               movwf	((??_ServoRotiraj180+0)+0),f
  7641  09E9  00F0               	u3247:
  7642  09EA                     decfsz	((??_ServoRotiraj180+0)+0),f
  7643  09EA  0BF0               	goto	u3247
  7644  09EB  29EA               	decfsz	((??_ServoRotiraj180+0)+0+1),f
  7645  09EC  0BF1               	goto	u3247
  7646  09ED  29EA               	nop
  7647  09EE  0000               opt asmopt_pop
  7648                           
  7649                           	line	213
  7650                           ;ROK3ZAD2.c: 213:     }
  7651                           	movlw	01h
  7652  09EF  3001               	addwf	(ServoRotiraj180@i),f
  7653  09F0  07F2               	skipnc
  7654  09F1  1803               	incf	(ServoRotiraj180@i+1),f
  7655  09F2  0AF3               	movlw	0
  7656  09F3  3000               	addwf	(ServoRotiraj180@i+1),f
  7657  09F4  07F3               	movlw	0
  7658  09F5  3000               	subwf	(ServoRotiraj180@i+1),w
  7659  09F6  0273               	movlw	032h
  7660  09F7  3032               	skipnz
  7661  09F8  1903               	subwf	(ServoRotiraj180@i),w
  7662  09F9  0272               	skipc
  7663  09FA  1C03               	goto	u1971
  7664  09FB  29FD               	goto	u1970
  7665  09FC  29FE               u1971:
  7666  09FD                     	goto	l146
  7667  09FD  29D7               u1970:
  7668  09FE                     	goto	l148
  7669  09FE  29FF               	
  7670                           l147:	
  7671  09FF                     	line	214
  7672                           	
  7673                           l148:	
  7674  09FF                     	return
  7675  09FF  0008               	opt stack 0
  7676                           GLOBAL	__end_of_ServoRotiraj180
  7677                           	__end_of_ServoRotiraj180:
  7678  0A00                     	signat	_ServoRotiraj180,89
  7679                           	global	_ServoRotiraj0
  7680                           
  7681 ;; *************** function _ServoRotiraj0 *****************
  7682 ;; Defined at:
  7683 ;;		line 186 in file "ROK3ZAD2.c"
  7684 ;; Parameters:    Size  Location     Type
  7685 ;;		None
  7686 ;; Auto vars:     Size  Location     Type
  7687 ;;  i               2    2[COMMON] unsigned int 
  7688 ;; Return value:  Size  Location     Type
  7689 ;;                  1    wreg      void 
  7690 ;; Registers used:
  7691 ;;		wreg, status,2
  7692 ;; Tracked objects:
  7693 ;;		On entry : 0/0
  7694 ;;		On exit  : 0/0
  7695 ;;		Unchanged: 0/0
  7696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7697 ;;      Params:         0       0       0       0       0
  7698 ;;      Locals:         2       0       0       0       0
  7699 ;;      Temps:          2       0       0       0       0
  7700 ;;      Totals:         4       0       0       0       0
  7701 ;;Total ram usage:        4 bytes
  7702 ;; Hardware stack levels used:    1
  7703 ;; This function calls:
  7704 ;;		Nothing
  7705 ;; This function is called by:
  7706 ;;		_main
  7707 ;; This function uses a non-reentrant model
  7708 ;;
  7709                           psect	text16,local,class=CODE,delta=2,merge=1,group=0
  7710                           	line	186
  7711                           global __ptext16
  7712                           __ptext16:	;psect for function _ServoRotiraj0
  7713  0994                     psect	text16
  7714                           	file	"ROK3ZAD2.c"
  7715                           	line	186
  7716                           	global	__size_of_ServoRotiraj0
  7717                           	__size_of_ServoRotiraj0	equ	__end_of_ServoRotiraj0-_ServoRotiraj0
  7718  0036                     	
  7719                           _ServoRotiraj0:	
  7720  0994                     ;incstack = 0
  7721                           	opt	stack 7
  7722                           ; Regs used in _ServoRotiraj0: [wreg+status,2]
  7723                           	line	188
  7724                           	
  7725                           l1856:	
  7726  0994                     ;ROK3ZAD2.c: 187:     unsigned int i;;ROK3ZAD2.c: 188:     for(i=0;i<50;i++) {
  7727                           	clrf	(ServoRotiraj0@i)
  7728  0994  01F2               	clrf	(ServoRotiraj0@i+1)
  7729  0995  01F3               	
  7730                           l1858:	
  7731  0996                     	movlw	0
  7732  0996  3000               	subwf	(ServoRotiraj0@i+1),w
  7733  0997  0273               	movlw	032h
  7734  0998  3032               	skipnz
  7735  0999  1903               	subwf	(ServoRotiraj0@i),w
  7736  099A  0272               	skipc
  7737  099B  1C03               	goto	u1941
  7738  099C  299E               	goto	u1940
  7739  099D  299F               u1941:
  7740  099E                     	goto	l136
  7741  099E  29A1               u1940:
  7742  099F                     	goto	l138
  7743  099F  29C9               	
  7744                           l1860:	
  7745  09A0                     	goto	l138
  7746  09A0  29C9               	
  7747                           l136:	
  7748  09A1                     	line	189
  7749                           ;ROK3ZAD2.c: 189:         RB0=1;
  7750                           	bcf	status, 5	;RP0=0, select bank0
  7751  09A1  1283               	bcf	status, 6	;RP1=0, select bank0
  7752  09A2  1303               	bsf	(48/8),(48)&7	;volatile
  7753  09A3  1406               	line	190
  7754                           	
  7755                           l1862:	
  7756  09A4                     ;ROK3ZAD2.c: 190:         _delay((unsigned long)((800)*(20000000/4000000.0)));
  7757                           	opt asmopt_push
  7758                           opt asmopt_off
  7759                           movlw	6
  7760  09A4  3006               movwf	((??_ServoRotiraj0+0)+0+1),f
  7761  09A5  00F1               	movlw	48
  7762  09A6  3030               movwf	((??_ServoRotiraj0+0)+0),f
  7763  09A7  00F0               	u3257:
  7764  09A8                     decfsz	((??_ServoRotiraj0+0)+0),f
  7765  09A8  0BF0               	goto	u3257
  7766  09A9  29A8               	decfsz	((??_ServoRotiraj0+0)+0+1),f
  7767  09AA  0BF1               	goto	u3257
  7768  09AB  29A8               	nop
  7769  09AC  0000               opt asmopt_pop
  7770                           
  7771                           	line	191
  7772                           	
  7773                           l1864:	
  7774  09AD                     ;ROK3ZAD2.c: 191:         RB0=0;
  7775                           	bcf	status, 5	;RP0=0, select bank0
  7776  09AD  1283               	bcf	status, 6	;RP1=0, select bank0
  7777  09AE  1303               	bcf	(48/8),(48)&7	;volatile
  7778  09AF  1006               	line	192
  7779                           ;ROK3ZAD2.c: 192:         _delay((unsigned long)((19200)*(20000000/4000000.0)));
  7780                           	opt asmopt_push
  7781                           opt asmopt_off
  7782                           movlw	125
  7783  09B0  307D               movwf	((??_ServoRotiraj0+0)+0+1),f
  7784  09B1  00F1               	movlw	171
  7785  09B2  30AB               movwf	((??_ServoRotiraj0+0)+0),f
  7786  09B3  00F0               	u3267:
  7787  09B4                     decfsz	((??_ServoRotiraj0+0)+0),f
  7788  09B4  0BF0               	goto	u3267
  7789  09B5  29B4               	decfsz	((??_ServoRotiraj0+0)+0+1),f
  7790  09B6  0BF1               	goto	u3267
  7791  09B7  29B4               	nop2
  7792  09B8  29B9               opt asmopt_pop
  7793                           
  7794                           	line	193
  7795                           ;ROK3ZAD2.c: 193:     }
  7796                           	movlw	01h
  7797  09B9  3001               	addwf	(ServoRotiraj0@i),f
  7798  09BA  07F2               	skipnc
  7799  09BB  1803               	incf	(ServoRotiraj0@i+1),f
  7800  09BC  0AF3               	movlw	0
  7801  09BD  3000               	addwf	(ServoRotiraj0@i+1),f
  7802  09BE  07F3               	movlw	0
  7803  09BF  3000               	subwf	(ServoRotiraj0@i+1),w
  7804  09C0  0273               	movlw	032h
  7805  09C1  3032               	skipnz
  7806  09C2  1903               	subwf	(ServoRotiraj0@i),w
  7807  09C3  0272               	skipc
  7808  09C4  1C03               	goto	u1951
  7809  09C5  29C7               	goto	u1950
  7810  09C6  29C8               u1951:
  7811  09C7                     	goto	l136
  7812  09C7  29A1               u1950:
  7813  09C8                     	goto	l138
  7814  09C8  29C9               	
  7815                           l137:	
  7816  09C9                     	line	194
  7817                           	
  7818                           l138:	
  7819  09C9                     	return
  7820  09C9  0008               	opt stack 0
  7821                           GLOBAL	__end_of_ServoRotiraj0
  7822                           	__end_of_ServoRotiraj0:
  7823  09CA                     	signat	_ServoRotiraj0,89
  7824                           	global	_Lcd_Write_String
  7825                           
  7826 ;; *************** function _Lcd_Write_String *****************
  7827 ;; Defined at:
  7828 ;;		line 120 in file "ROK3ZAD2.c"
  7829 ;; Parameters:    Size  Location     Type
  7830 ;;  a               2    5[COMMON] PTR unsigned char 
  7831 ;;		 -> STR_24(31), STR_23(31), STR_22(25), STR_21(16), 
  7832 ;;		 -> STR_19(2), STR_18(2), STR_17(12), 
  7833 ;; Auto vars:     Size  Location     Type
  7834 ;;  i               2   10[COMMON] int 
  7835 ;; Return value:  Size  Location     Type
  7836 ;;                  1    wreg      void 
  7837 ;; Registers used:
  7838 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7839 ;; Tracked objects:
  7840 ;;		On entry : 0/0
  7841 ;;		On exit  : 0/0
  7842 ;;		Unchanged: 0/0
  7843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7844 ;;      Params:         2       0       0       0       0
  7845 ;;      Locals:         2       0       0       0       0
  7846 ;;      Temps:          3       0       0       0       0
  7847 ;;      Totals:         7       0       0       0       0
  7848 ;;Total ram usage:        7 bytes
  7849 ;; Hardware stack levels used:    1
  7850 ;; Hardware stack levels required when called:    2
  7851 ;; This function calls:
  7852 ;;		_Lcd_Write_Char
  7853 ;; This function is called by:
  7854 ;;		_main
  7855 ;; This function uses a non-reentrant model
  7856 ;;
  7857                           psect	text17,local,class=CODE,delta=2,merge=1,group=0
  7858                           	line	120
  7859                           global __ptext17
  7860                           __ptext17:	;psect for function _Lcd_Write_String
  7861  0A7A                     psect	text17
  7862                           	file	"ROK3ZAD2.c"
  7863                           	line	120
  7864                           	global	__size_of_Lcd_Write_String
  7865                           	__size_of_Lcd_Write_String	equ	__end_of_Lcd_Write_String-_Lcd_Write_String
  7866  0044                     	
  7867                           _Lcd_Write_String:	
  7868  0A7A                     ;incstack = 0
  7869                           	opt	stack 5
  7870                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7871                           	line	122
  7872                           	
  7873                           l1810:	
  7874  0A7A                     ;ROK3ZAD2.c: 121:     int i;;ROK3ZAD2.c: 122:     for(i=0;a[i]!='\0';i++) {
  7875                           	clrf	(Lcd_Write_String@i)
  7876  0A7A  01FA               	clrf	(Lcd_Write_String@i+1)
  7877  0A7B  01FB               	goto	l1816
  7878  0A7C  2AA0               	
  7879                           l103:	
  7880  0A7D                     	line	123
  7881                           	
  7882                           l1812:	
  7883  0A7D                     ;ROK3ZAD2.c: 123:         Lcd_Write_Char(a[i]);
  7884                           	movf	(Lcd_Write_String@i),w
  7885  0A7D  087A               	addwf	(Lcd_Write_String@a),w
  7886  0A7E  0775               	movwf	(??_Lcd_Write_String+1)+0
  7887  0A7F  00F8               	movf	(Lcd_Write_String@a+1),w
  7888  0A80  0876               	movwf	(??_Lcd_Write_String+0)+0
  7889  0A81  00F7               	skipnc
  7890  0A82  1803               	incf	(??_Lcd_Write_String+0)+0,f
  7891  0A83  0AF7               	btfss	(Lcd_Write_String@i),7
  7892  0A84  1FFA               	goto	u1870
  7893  0A85  2A87               	decf	(??_Lcd_Write_String+0)+0,f
  7894  0A86  03F7               u1870:
  7895  0A87                     	movf	(??_Lcd_Write_String+0)+0,w
  7896  0A87  0877               	movwf	0+((??_Lcd_Write_String+1)+0)+1
  7897  0A88  00F9               	movf	1+(??_Lcd_Write_String+1)+0,w
  7898  0A89  0879               	bcf	status, 5	;RP0=0, select bank0
  7899  0A8A  1283               	bcf	status, 6	;RP1=0, select bank0
  7900  0A8B  1303               	movwf	btemp+1
  7901  0A8C  00FF               	movf	0+(??_Lcd_Write_String+1)+0,w
  7902  0A8D  0878               	movwf	fsr0
  7903  0A8E  0084               	fcall	stringtab
  7904  0A8F  160A  118A  2000  120A  158A  	fcall	_Lcd_Write_Char
  7905  0A94  120A  158A  2200  120A  158A  	line	124
  7906                           	
  7907                           l1814:	
  7908  0A99                     ;ROK3ZAD2.c: 124:     }
  7909                           	movlw	01h
  7910  0A99  3001               	addwf	(Lcd_Write_String@i),f
  7911  0A9A  07FA               	skipnc
  7912  0A9B  1803               	incf	(Lcd_Write_String@i+1),f
  7913  0A9C  0AFB               	movlw	0
  7914  0A9D  3000               	addwf	(Lcd_Write_String@i+1),f
  7915  0A9E  07FB               	goto	l1816
  7916  0A9F  2AA0               	
  7917                           l102:	
  7918  0AA0                     	
  7919                           l1816:	
  7920  0AA0                     	movf	(Lcd_Write_String@i),w
  7921  0AA0  087A               	addwf	(Lcd_Write_String@a),w
  7922  0AA1  0775               	movwf	(??_Lcd_Write_String+1)+0
  7923  0AA2  00F8               	movf	(Lcd_Write_String@a+1),w
  7924  0AA3  0876               	movwf	(??_Lcd_Write_String+0)+0
  7925  0AA4  00F7               	skipnc
  7926  0AA5  1803               	incf	(??_Lcd_Write_String+0)+0,f
  7927  0AA6  0AF7               	btfss	(Lcd_Write_String@i),7
  7928  0AA7  1FFA               	goto	u1880
  7929  0AA8  2AAA               	decf	(??_Lcd_Write_String+0)+0,f
  7930  0AA9  03F7               u1880:
  7931  0AAA                     	movf	(??_Lcd_Write_String+0)+0,w
  7932  0AAA  0877               	movwf	0+((??_Lcd_Write_String+1)+0)+1
  7933  0AAB  00F9               	movf	1+(??_Lcd_Write_String+1)+0,w
  7934  0AAC  0879               	bcf	status, 5	;RP0=0, select bank0
  7935  0AAD  1283               	bcf	status, 6	;RP1=0, select bank0
  7936  0AAE  1303               	movwf	btemp+1
  7937  0AAF  00FF               	movf	0+(??_Lcd_Write_String+1)+0,w
  7938  0AB0  0878               	movwf	fsr0
  7939  0AB1  0084               	fcall	stringtab
  7940  0AB2  160A  118A  2000  120A  158A  	xorlw	0
  7941  0AB7  3A00               	skipz
  7942  0AB8  1D03               	goto	u1891
  7943  0AB9  2ABB               	goto	u1890
  7944  0ABA  2ABC               u1891:
  7945  0ABB                     	goto	l1812
  7946  0ABB  2A7D               u1890:
  7947  0ABC                     	goto	l105
  7948  0ABC  2ABD               	
  7949                           l104:	
  7950  0ABD                     	line	125
  7951                           	
  7952                           l105:	
  7953  0ABD                     	return
  7954  0ABD  0008               	opt stack 0
  7955                           GLOBAL	__end_of_Lcd_Write_String
  7956                           	__end_of_Lcd_Write_String:
  7957  0ABE                     	signat	_Lcd_Write_String,4217
  7958                           	global	_Lcd_Write_Char
  7959                           
  7960 ;; *************** function _Lcd_Write_Char *****************
  7961 ;; Defined at:
  7962 ;;		line 105 in file "ROK3ZAD2.c"
  7963 ;; Parameters:    Size  Location     Type
  7964 ;;  a               1    wreg     unsigned char 
  7965 ;; Auto vars:     Size  Location     Type
  7966 ;;  a               1    4[COMMON] unsigned char 
  7967 ;;  y               1    3[COMMON] unsigned char 
  7968 ;;  temp            1    2[COMMON] unsigned char 
  7969 ;; Return value:  Size  Location     Type
  7970 ;;                  1    wreg      void 
  7971 ;; Registers used:
  7972 ;;		wreg, status,2, status,0, pclath, cstack
  7973 ;; Tracked objects:
  7974 ;;		On entry : 0/0
  7975 ;;		On exit  : 0/0
  7976 ;;		Unchanged: 0/0
  7977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7978 ;;      Params:         0       0       0       0       0
  7979 ;;      Locals:         3       0       0       0       0
  7980 ;;      Temps:          1       0       0       0       0
  7981 ;;      Totals:         4       0       0       0       0
  7982 ;;Total ram usage:        4 bytes
  7983 ;; Hardware stack levels used:    1
  7984 ;; Hardware stack levels required when called:    1
  7985 ;; This function calls:
  7986 ;;		_Lcd_Port
  7987 ;; This function is called by:
  7988 ;;		_Lcd_Write_String
  7989 ;;		_main
  7990 ;; This function uses a non-reentrant model
  7991 ;;
  7992                           psect	text18,local,class=CODE,delta=2,merge=1,group=0
  7993                           	line	105
  7994                           global __ptext18
  7995                           __ptext18:	;psect for function _Lcd_Write_Char
  7996  0A00                     psect	text18
  7997                           	file	"ROK3ZAD2.c"
  7998                           	line	105
  7999                           	global	__size_of_Lcd_Write_Char
  8000                           	__size_of_Lcd_Write_Char	equ	__end_of_Lcd_Write_Char-_Lcd_Write_Char
  8001  0039                     	
  8002                           _Lcd_Write_Char:	
  8003  0A00                     ;incstack = 0
  8004                           	opt	stack 5
  8005                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  8006                           ;Lcd_Write_Char@a stored from wreg
  8007                           	movwf	(Lcd_Write_Char@a)
  8008  0A00  00F4               	line	107
  8009                           	
  8010                           l1694:	
  8011  0A01                     ;ROK3ZAD2.c: 106:     char temp, y;;ROK3ZAD2.c: 107:     temp=a&0x0F;
  8012                           	movf	(Lcd_Write_Char@a),w
  8013  0A01  0874               	andlw	0Fh
  8014  0A02  390F               	movwf	(??_Lcd_Write_Char+0)+0
  8015  0A03  00F1               	movf	(??_Lcd_Write_Char+0)+0,w
  8016  0A04  0871               	movwf	(Lcd_Write_Char@temp)
  8017  0A05  00F2               	line	108
  8018                           ;ROK3ZAD2.c: 108:     y=a&0xF0;
  8019                           	movf	(Lcd_Write_Char@a),w
  8020  0A06  0874               	andlw	0F0h
  8021  0A07  39F0               	movwf	(??_Lcd_Write_Char+0)+0
  8022  0A08  00F1               	movf	(??_Lcd_Write_Char+0)+0,w
  8023  0A09  0871               	movwf	(Lcd_Write_Char@y)
  8024  0A0A  00F3               	line	109
  8025                           	
  8026                           l1696:	
  8027  0A0B                     ;ROK3ZAD2.c: 109:     RD2=1;
  8028                           	bcf	status, 5	;RP0=0, select bank0
  8029  0A0B  1283               	bcf	status, 6	;RP1=0, select bank0
  8030  0A0C  1303               	bsf	(66/8),(66)&7	;volatile
  8031  0A0D  1508               	line	110
  8032                           	
  8033                           l1698:	
  8034  0A0E                     ;ROK3ZAD2.c: 110:     Lcd_Port(y>>4);
  8035                           	movf	(Lcd_Write_Char@y),w
  8036  0A0E  0873               	movwf	(??_Lcd_Write_Char+0)+0
  8037  0A0F  00F1               	movlw	04h
  8038  0A10  3004               u1665:
  8039  0A11                     	clrc
  8040  0A11  1003               	rrf	(??_Lcd_Write_Char+0)+0,f
  8041  0A12  0CF1               	addlw	-1
  8042  0A13  3EFF               	skipz
  8043  0A14  1D03               	goto	u1665
  8044  0A15  2A11               	movf	0+(??_Lcd_Write_Char+0)+0,w
  8045  0A16  0871               	fcall	_Lcd_Port
  8046  0A17  120A  158A  2147  120A  158A  	line	111
  8047                           	
  8048                           l1700:	
  8049  0A1C                     ;ROK3ZAD2.c: 111:     RD3=1;
  8050                           	bcf	status, 5	;RP0=0, select bank0
  8051  0A1C  1283               	bcf	status, 6	;RP1=0, select bank0
  8052  0A1D  1303               	bsf	(67/8),(67)&7	;volatile
  8053  0A1E  1588               	line	112
  8054                           	
  8055                           l1702:	
  8056  0A1F                     ;ROK3ZAD2.c: 112:     _delay((unsigned long)((40)*(20000000/4000000.0)));
  8057                           	opt asmopt_push
  8058                           opt asmopt_off
  8059                           	movlw	66
  8060  0A1F  3042               movwf	((??_Lcd_Write_Char+0)+0),f
  8061  0A20  00F1               	u3277:
  8062  0A21                     decfsz	(??_Lcd_Write_Char+0)+0,f
  8063  0A21  0BF1               	goto	u3277
  8064  0A22  2A21               	nop
  8065  0A23  0000               opt asmopt_pop
  8066                           
  8067                           	line	113
  8068                           	
  8069                           l1704:	
  8070  0A24                     ;ROK3ZAD2.c: 113:     RD3=0;
  8071                           	bcf	status, 5	;RP0=0, select bank0
  8072  0A24  1283               	bcf	status, 6	;RP1=0, select bank0
  8073  0A25  1303               	bcf	(67/8),(67)&7	;volatile
  8074  0A26  1188               	line	114
  8075                           	
  8076                           l1706:	
  8077  0A27                     ;ROK3ZAD2.c: 114:     Lcd_Port(temp);
  8078                           	movf	(Lcd_Write_Char@temp),w
  8079  0A27  0872               	fcall	_Lcd_Port
  8080  0A28  120A  158A  2147  120A  158A  	line	115
  8081                           	
  8082                           l1708:	
  8083  0A2D                     ;ROK3ZAD2.c: 115:     RD3=1;
  8084                           	bcf	status, 5	;RP0=0, select bank0
  8085  0A2D  1283               	bcf	status, 6	;RP1=0, select bank0
  8086  0A2E  1303               	bsf	(67/8),(67)&7	;volatile
  8087  0A2F  1588               	line	116
  8088                           	
  8089                           l1710:	
  8090  0A30                     ;ROK3ZAD2.c: 116:     _delay((unsigned long)((40)*(20000000/4000000.0)));
  8091                           	opt asmopt_push
  8092                           opt asmopt_off
  8093                           	movlw	66
  8094  0A30  3042               movwf	((??_Lcd_Write_Char+0)+0),f
  8095  0A31  00F1               	u3287:
  8096  0A32                     decfsz	(??_Lcd_Write_Char+0)+0,f
  8097  0A32  0BF1               	goto	u3287
  8098  0A33  2A32               	nop
  8099  0A34  0000               opt asmopt_pop
  8100                           
  8101                           	line	117
  8102                           	
  8103                           l1712:	
  8104  0A35                     ;ROK3ZAD2.c: 117:     RD3=0;
  8105                           	bcf	status, 5	;RP0=0, select bank0
  8106  0A35  1283               	bcf	status, 6	;RP1=0, select bank0
  8107  0A36  1303               	bcf	(67/8),(67)&7	;volatile
  8108  0A37  1188               	line	118
  8109                           	
  8110                           l99:	
  8111  0A38                     	return
  8112  0A38  0008               	opt stack 0
  8113                           GLOBAL	__end_of_Lcd_Write_Char
  8114                           	__end_of_Lcd_Write_Char:
  8115  0A39                     	signat	_Lcd_Write_Char,4217
  8116                           	global	_Lcd_Set_Cursor
  8117                           
  8118 ;; *************** function _Lcd_Set_Cursor *****************
  8119 ;; Defined at:
  8120 ;;		line 70 in file "ROK3ZAD2.c"
  8121 ;; Parameters:    Size  Location     Type
  8122 ;;  a               1    wreg     unsigned char 
  8123 ;;  b               1    4[COMMON] unsigned char 
  8124 ;; Auto vars:     Size  Location     Type
  8125 ;;  a               1    7[COMMON] unsigned char 
  8126 ;;  temp            1   10[COMMON] unsigned char 
  8127 ;;  y               1    9[COMMON] unsigned char 
  8128 ;;  z               1    8[COMMON] unsigned char 
  8129 ;; Return value:  Size  Location     Type
  8130 ;;                  1    wreg      void 
  8131 ;; Registers used:
  8132 ;;		wreg, status,2, status,0, pclath, cstack
  8133 ;; Tracked objects:
  8134 ;;		On entry : 0/0
  8135 ;;		On exit  : 0/0
  8136 ;;		Unchanged: 0/0
  8137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8138 ;;      Params:         1       0       0       0       0
  8139 ;;      Locals:         4       0       0       0       0
  8140 ;;      Temps:          2       0       0       0       0
  8141 ;;      Totals:         7       0       0       0       0
  8142 ;;Total ram usage:        7 bytes
  8143 ;; Hardware stack levels used:    1
  8144 ;; Hardware stack levels required when called:    2
  8145 ;; This function calls:
  8146 ;;		_Lcd_Cmd
  8147 ;; This function is called by:
  8148 ;;		_main
  8149 ;; This function uses a non-reentrant model
  8150 ;;
  8151                           psect	text19,local,class=CODE,delta=2,merge=1,group=0
  8152                           	line	70
  8153                           global __ptext19
  8154                           __ptext19:	;psect for function _Lcd_Set_Cursor
  8155  0B09                     psect	text19
  8156                           	file	"ROK3ZAD2.c"
  8157                           	line	70
  8158                           	global	__size_of_Lcd_Set_Cursor
  8159                           	__size_of_Lcd_Set_Cursor	equ	__end_of_Lcd_Set_Cursor-_Lcd_Set_Cursor
  8160  0054                     	
  8161                           _Lcd_Set_Cursor:	
  8162  0B09                     ;incstack = 0
  8163                           	opt	stack 5
  8164                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  8165                           ;Lcd_Set_Cursor@a stored from wreg
  8166                           	movwf	(Lcd_Set_Cursor@a)
  8167  0B09  00F7               	line	72
  8168                           	
  8169                           l1780:	
  8170  0B0A                     ;ROK3ZAD2.c: 71:     char temp, z, y;;ROK3ZAD2.c: 72:     if(a==1) {
  8171                           		decf	((Lcd_Set_Cursor@a)),w
  8172  0B0A  0377               	btfss	status,2
  8173  0B0B  1D03               	goto	u1831
  8174  0B0C  2B0E               	goto	u1830
  8175  0B0D  2B0F               u1831:
  8176  0B0E                     	goto	l1790
  8177  0B0E  2B32               u1830:
  8178  0B0F                     	line	73
  8179                           	
  8180                           l1782:	
  8181  0B0F                     ;ROK3ZAD2.c: 73:         temp=0x80+b-1;
  8182                           	movf	(Lcd_Set_Cursor@b),w
  8183  0B0F  0874               	addlw	07Fh
  8184  0B10  3E7F               	movwf	(??_Lcd_Set_Cursor+0)+0
  8185  0B11  00F5               	movf	(??_Lcd_Set_Cursor+0)+0,w
  8186  0B12  0875               	movwf	(Lcd_Set_Cursor@temp)
  8187  0B13  00FA               	line	74
  8188                           ;ROK3ZAD2.c: 74:         z=temp>>4;
  8189                           	movf	(Lcd_Set_Cursor@temp),w
  8190  0B14  087A               	movwf	(??_Lcd_Set_Cursor+0)+0
  8191  0B15  00F5               	movlw	04h
  8192  0B16  3004               u1845:
  8193  0B17                     	clrc
  8194  0B17  1003               	rrf	(??_Lcd_Set_Cursor+0)+0,f
  8195  0B18  0CF5               	addlw	-1
  8196  0B19  3EFF               	skipz
  8197  0B1A  1D03               	goto	u1845
  8198  0B1B  2B17               	movf	0+(??_Lcd_Set_Cursor+0)+0,w
  8199  0B1C  0875               	movwf	(??_Lcd_Set_Cursor+1)+0
  8200  0B1D  00F6               	movf	(??_Lcd_Set_Cursor+1)+0,w
  8201  0B1E  0876               	movwf	(Lcd_Set_Cursor@z)
  8202  0B1F  00F8               	line	75
  8203                           	
  8204                           l1784:	
  8205  0B20                     ;ROK3ZAD2.c: 75:         y=temp&0x0F;
  8206                           	movf	(Lcd_Set_Cursor@temp),w
  8207  0B20  087A               	andlw	0Fh
  8208  0B21  390F               	movwf	(??_Lcd_Set_Cursor+0)+0
  8209  0B22  00F5               	movf	(??_Lcd_Set_Cursor+0)+0,w
  8210  0B23  0875               	movwf	(Lcd_Set_Cursor@y)
  8211  0B24  00F9               	line	76
  8212                           	
  8213                           l1786:	
  8214  0B25                     ;ROK3ZAD2.c: 76:         Lcd_Cmd(z);
  8215                           	movf	(Lcd_Set_Cursor@z),w
  8216  0B25  0878               	fcall	_Lcd_Cmd
  8217  0B26  120A  158A  212D  120A  158A  	line	77
  8218                           	
  8219                           l1788:	
  8220  0B2B                     ;ROK3ZAD2.c: 77:         Lcd_Cmd(y);
  8221                           	movf	(Lcd_Set_Cursor@y),w
  8222  0B2B  0879               	fcall	_Lcd_Cmd
  8223  0B2C  120A  158A  212D  120A  158A  	line	78
  8224                           ;ROK3ZAD2.c: 78:     }
  8225                           	goto	l93
  8226  0B31  2B5C               	line	79
  8227                           ;ROK3ZAD2.c: 79:     else if(a==2) {
  8228                           	
  8229                           l90:	
  8230  0B32                     	
  8231                           l1790:	
  8232  0B32                     		movlw	2
  8233  0B32  3002               	xorwf	((Lcd_Set_Cursor@a)),w
  8234  0B33  0677               	btfss	status,2
  8235  0B34  1D03               	goto	u1851
  8236  0B35  2B37               	goto	u1850
  8237  0B36  2B38               u1851:
  8238  0B37                     	goto	l93
  8239  0B37  2B5C               u1850:
  8240  0B38                     	line	80
  8241                           	
  8242                           l1792:	
  8243  0B38                     ;ROK3ZAD2.c: 80:         temp=0xC0+b-1;
  8244                           	movf	(Lcd_Set_Cursor@b),w
  8245  0B38  0874               	addlw	0BFh
  8246  0B39  3EBF               	movwf	(??_Lcd_Set_Cursor+0)+0
  8247  0B3A  00F5               	movf	(??_Lcd_Set_Cursor+0)+0,w
  8248  0B3B  0875               	movwf	(Lcd_Set_Cursor@temp)
  8249  0B3C  00FA               	line	81
  8250                           ;ROK3ZAD2.c: 81:         z=temp>>4;
  8251                           	movf	(Lcd_Set_Cursor@temp),w
  8252  0B3D  087A               	movwf	(??_Lcd_Set_Cursor+0)+0
  8253  0B3E  00F5               	movlw	04h
  8254  0B3F  3004               u1865:
  8255  0B40                     	clrc
  8256  0B40  1003               	rrf	(??_Lcd_Set_Cursor+0)+0,f
  8257  0B41  0CF5               	addlw	-1
  8258  0B42  3EFF               	skipz
  8259  0B43  1D03               	goto	u1865
  8260  0B44  2B40               	movf	0+(??_Lcd_Set_Cursor+0)+0,w
  8261  0B45  0875               	movwf	(??_Lcd_Set_Cursor+1)+0
  8262  0B46  00F6               	movf	(??_Lcd_Set_Cursor+1)+0,w
  8263  0B47  0876               	movwf	(Lcd_Set_Cursor@z)
  8264  0B48  00F8               	line	82
  8265                           	
  8266                           l1794:	
  8267  0B49                     ;ROK3ZAD2.c: 82:         y=temp&0x0F;
  8268                           	movf	(Lcd_Set_Cursor@temp),w
  8269  0B49  087A               	andlw	0Fh
  8270  0B4A  390F               	movwf	(??_Lcd_Set_Cursor+0)+0
  8271  0B4B  00F5               	movf	(??_Lcd_Set_Cursor+0)+0,w
  8272  0B4C  0875               	movwf	(Lcd_Set_Cursor@y)
  8273  0B4D  00F9               	line	83
  8274                           	
  8275                           l1796:	
  8276  0B4E                     ;ROK3ZAD2.c: 83:         Lcd_Cmd(z);
  8277                           	movf	(Lcd_Set_Cursor@z),w
  8278  0B4E  0878               	fcall	_Lcd_Cmd
  8279  0B4F  120A  158A  212D  120A  158A  	line	84
  8280                           	
  8281                           l1798:	
  8282  0B54                     ;ROK3ZAD2.c: 84:         Lcd_Cmd(y);
  8283                           	movf	(Lcd_Set_Cursor@y),w
  8284  0B54  0879               	fcall	_Lcd_Cmd
  8285  0B55  120A  158A  212D  120A  158A  	goto	l93
  8286  0B5A  2B5C               	line	85
  8287                           ;ROK3ZAD2.c: 85:     }
  8288                           	
  8289                           l92:	
  8290  0B5B                     	goto	l93
  8291  0B5B  2B5C               	
  8292                           l91:	
  8293  0B5C                     	line	86
  8294                           	
  8295                           l93:	
  8296  0B5C                     	return
  8297  0B5C  0008               	opt stack 0
  8298                           GLOBAL	__end_of_Lcd_Set_Cursor
  8299                           	__end_of_Lcd_Set_Cursor:
  8300  0B5D                     	signat	_Lcd_Set_Cursor,8313
  8301                           	global	_Lcd_Init
  8302                           
  8303 ;; *************** function _Lcd_Init *****************
  8304 ;; Defined at:
  8305 ;;		line 88 in file "ROK3ZAD2.c"
  8306 ;; Parameters:    Size  Location     Type
  8307 ;;		None
  8308 ;; Auto vars:     Size  Location     Type
  8309 ;;		None
  8310 ;; Return value:  Size  Location     Type
  8311 ;;                  1    wreg      void 
  8312 ;; Registers used:
  8313 ;;		wreg, status,2, status,0, pclath, cstack
  8314 ;; Tracked objects:
  8315 ;;		On entry : 0/0
  8316 ;;		On exit  : 0/0
  8317 ;;		Unchanged: 0/0
  8318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8319 ;;      Params:         0       0       0       0       0
  8320 ;;      Locals:         0       0       0       0       0
  8321 ;;      Temps:          2       0       0       0       0
  8322 ;;      Totals:         2       0       0       0       0
  8323 ;;Total ram usage:        2 bytes
  8324 ;; Hardware stack levels used:    1
  8325 ;; Hardware stack levels required when called:    2
  8326 ;; This function calls:
  8327 ;;		_Lcd_Cmd
  8328 ;;		_Lcd_Port
  8329 ;; This function is called by:
  8330 ;;		_main
  8331 ;; This function uses a non-reentrant model
  8332 ;;
  8333                           psect	text20,local,class=CODE,delta=2,merge=1,group=0
  8334                           	line	88
  8335                           global __ptext20
  8336                           __ptext20:	;psect for function _Lcd_Init
  8337  0B5D                     psect	text20
  8338                           	file	"ROK3ZAD2.c"
  8339                           	line	88
  8340                           	global	__size_of_Lcd_Init
  8341                           	__size_of_Lcd_Init	equ	__end_of_Lcd_Init-_Lcd_Init
  8342  005E                     	
  8343                           _Lcd_Init:	
  8344  0B5D                     ;incstack = 0
  8345                           	opt	stack 5
  8346                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  8347                           	line	89
  8348                           	
  8349                           l1800:	
  8350  0B5D                     ;ROK3ZAD2.c: 89:     Lcd_Port(0x00);
  8351                           	movlw	low(0)
  8352  0B5D  3000               	fcall	_Lcd_Port
  8353  0B5E  120A  158A  2147  120A  158A  	line	90
  8354                           	
  8355                           l1802:	
  8356  0B63                     ;ROK3ZAD2.c: 90:     _delay((unsigned long)((20)*(20000000/4000.0)));
  8357                           	opt asmopt_push
  8358                           opt asmopt_off
  8359                           movlw	130
  8360  0B63  3082               movwf	((??_Lcd_Init+0)+0+1),f
  8361  0B64  00F5               	movlw	221
  8362  0B65  30DD               movwf	((??_Lcd_Init+0)+0),f
  8363  0B66  00F4               	u3297:
  8364  0B67                     decfsz	((??_Lcd_Init+0)+0),f
  8365  0B67  0BF4               	goto	u3297
  8366  0B68  2B67               	decfsz	((??_Lcd_Init+0)+0+1),f
  8367  0B69  0BF5               	goto	u3297
  8368  0B6A  2B67               	nop2
  8369  0B6B  2B6C               opt asmopt_pop
  8370                           
  8371                           	line	91
  8372                           	
  8373                           l1804:	
  8374  0B6C                     ;ROK3ZAD2.c: 91:     Lcd_Cmd(0x03);
  8375                           	movlw	low(03h)
  8376  0B6C  3003               	fcall	_Lcd_Cmd
  8377  0B6D  120A  158A  212D  120A  158A  	line	92
  8378                           ;ROK3ZAD2.c: 92:     _delay((unsigned long)((5)*(20000000/4000.0)));
  8379                           	opt asmopt_push
  8380                           opt asmopt_off
  8381                           movlw	33
  8382  0B72  3021               movwf	((??_Lcd_Init+0)+0+1),f
  8383  0B73  00F5               	movlw	118
  8384  0B74  3076               movwf	((??_Lcd_Init+0)+0),f
  8385  0B75  00F4               	u3307:
  8386  0B76                     decfsz	((??_Lcd_Init+0)+0),f
  8387  0B76  0BF4               	goto	u3307
  8388  0B77  2B76               	decfsz	((??_Lcd_Init+0)+0+1),f
  8389  0B78  0BF5               	goto	u3307
  8390  0B79  2B76               	nop
  8391  0B7A  0000               opt asmopt_pop
  8392                           
  8393                           	line	93
  8394                           	
  8395                           l1806:	
  8396  0B7B                     ;ROK3ZAD2.c: 93:     Lcd_Cmd(0x03);
  8397                           	movlw	low(03h)
  8398  0B7B  3003               	fcall	_Lcd_Cmd
  8399  0B7C  120A  158A  212D  120A  158A  	line	94
  8400                           	
  8401                           l1808:	
  8402  0B81                     ;ROK3ZAD2.c: 94:     _delay((unsigned long)((11)*(20000000/4000.0)));
  8403                           	opt asmopt_push
  8404                           opt asmopt_off
  8405                           movlw	72
  8406  0B81  3048               movwf	((??_Lcd_Init+0)+0+1),f
  8407  0B82  00F5               	movlw	108
  8408  0B83  306C               movwf	((??_Lcd_Init+0)+0),f
  8409  0B84  00F4               	u3317:
  8410  0B85                     decfsz	((??_Lcd_Init+0)+0),f
  8411  0B85  0BF4               	goto	u3317
  8412  0B86  2B85               	decfsz	((??_Lcd_Init+0)+0+1),f
  8413  0B87  0BF5               	goto	u3317
  8414  0B88  2B85               	nop
  8415  0B89  0000               opt asmopt_pop
  8416                           
  8417                           	line	95
  8418                           ;ROK3ZAD2.c: 95:     Lcd_Cmd(0x03);
  8419                           	movlw	low(03h)
  8420  0B8A  3003               	fcall	_Lcd_Cmd
  8421  0B8B  120A  158A  212D  120A  158A  	line	96
  8422                           ;ROK3ZAD2.c: 96:     Lcd_Cmd(0x02);
  8423                           	movlw	low(02h)
  8424  0B90  3002               	fcall	_Lcd_Cmd
  8425  0B91  120A  158A  212D  120A  158A  	line	97
  8426                           ;ROK3ZAD2.c: 97:     Lcd_Cmd(0x02);
  8427                           	movlw	low(02h)
  8428  0B96  3002               	fcall	_Lcd_Cmd
  8429  0B97  120A  158A  212D  120A  158A  	line	98
  8430                           ;ROK3ZAD2.c: 98:     Lcd_Cmd(0x08);
  8431                           	movlw	low(08h)
  8432  0B9C  3008               	fcall	_Lcd_Cmd
  8433  0B9D  120A  158A  212D  120A  158A  	line	99
  8434                           ;ROK3ZAD2.c: 99:     Lcd_Cmd(0x00);
  8435                           	movlw	low(0)
  8436  0BA2  3000               	fcall	_Lcd_Cmd
  8437  0BA3  120A  158A  212D  120A  158A  	line	100
  8438                           ;ROK3ZAD2.c: 100:     Lcd_Cmd(0x0C);
  8439                           	movlw	low(0Ch)
  8440  0BA8  300C               	fcall	_Lcd_Cmd
  8441  0BA9  120A  158A  212D  120A  158A  	line	101
  8442                           ;ROK3ZAD2.c: 101:     Lcd_Cmd(0x00);
  8443                           	movlw	low(0)
  8444  0BAE  3000               	fcall	_Lcd_Cmd
  8445  0BAF  120A  158A  212D  120A  158A  	line	102
  8446                           ;ROK3ZAD2.c: 102:     Lcd_Cmd(0x06);
  8447                           	movlw	low(06h)
  8448  0BB4  3006               	fcall	_Lcd_Cmd
  8449  0BB5  120A  158A  212D  120A  158A  	line	103
  8450                           	
  8451                           l96:	
  8452  0BBA                     	return
  8453  0BBA  0008               	opt stack 0
  8454                           GLOBAL	__end_of_Lcd_Init
  8455                           	__end_of_Lcd_Init:
  8456  0BBB                     	signat	_Lcd_Init,89
  8457                           	global	_Lcd_Clear
  8458                           
  8459 ;; *************** function _Lcd_Clear *****************
  8460 ;; Defined at:
  8461 ;;		line 65 in file "ROK3ZAD2.c"
  8462 ;; Parameters:    Size  Location     Type
  8463 ;;		None
  8464 ;; Auto vars:     Size  Location     Type
  8465 ;;		None
  8466 ;; Return value:  Size  Location     Type
  8467 ;;                  2   86[None  ] int 
  8468 ;; Registers used:
  8469 ;;		wreg, status,2, status,0, pclath, cstack
  8470 ;; Tracked objects:
  8471 ;;		On entry : 0/0
  8472 ;;		On exit  : 0/0
  8473 ;;		Unchanged: 0/0
  8474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8475 ;;      Params:         0       0       0       0       0
  8476 ;;      Locals:         0       0       0       0       0
  8477 ;;      Temps:          0       0       0       0       0
  8478 ;;      Totals:         0       0       0       0       0
  8479 ;;Total ram usage:        0 bytes
  8480 ;; Hardware stack levels used:    1
  8481 ;; Hardware stack levels required when called:    2
  8482 ;; This function calls:
  8483 ;;		_Lcd_Cmd
  8484 ;; This function is called by:
  8485 ;;		_main
  8486 ;; This function uses a non-reentrant model
  8487 ;;
  8488                           psect	text21,local,class=CODE,delta=2,merge=1,group=0
  8489                           	line	65
  8490                           global __ptext21
  8491                           __ptext21:	;psect for function _Lcd_Clear
  8492  08F6                     psect	text21
  8493                           	file	"ROK3ZAD2.c"
  8494                           	line	65
  8495                           	global	__size_of_Lcd_Clear
  8496                           	__size_of_Lcd_Clear	equ	__end_of_Lcd_Clear-_Lcd_Clear
  8497  000D                     	
  8498                           _Lcd_Clear:	
  8499  08F6                     ;incstack = 0
  8500                           	opt	stack 5
  8501                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  8502                           	line	66
  8503                           	
  8504                           l1778:	
  8505  08F6                     ;ROK3ZAD2.c: 66:     Lcd_Cmd(0);
  8506                           	movlw	low(0)
  8507  08F6  3000               	fcall	_Lcd_Cmd
  8508  08F7  120A  158A  212D  120A  158A  	line	67
  8509                           ;ROK3ZAD2.c: 67:     Lcd_Cmd(1);
  8510                           	movlw	low(01h)
  8511  08FC  3001               	fcall	_Lcd_Cmd
  8512  08FD  120A  158A  212D  120A  158A  	line	68
  8513                           	
  8514                           l87:	
  8515  0902                     	return
  8516  0902  0008               	opt stack 0
  8517                           GLOBAL	__end_of_Lcd_Clear
  8518                           	__end_of_Lcd_Clear:
  8519  0903                     	signat	_Lcd_Clear,90
  8520                           	global	_Lcd_Cmd
  8521                           
  8522 ;; *************** function _Lcd_Cmd *****************
  8523 ;; Defined at:
  8524 ;;		line 58 in file "ROK3ZAD2.c"
  8525 ;; Parameters:    Size  Location     Type
  8526 ;;  a               1    wreg     unsigned char 
  8527 ;; Auto vars:     Size  Location     Type
  8528 ;;  a               1    3[COMMON] unsigned char 
  8529 ;; Return value:  Size  Location     Type
  8530 ;;                  1    wreg      void 
  8531 ;; Registers used:
  8532 ;;		wreg, status,2, status,0, pclath, cstack
  8533 ;; Tracked objects:
  8534 ;;		On entry : 0/0
  8535 ;;		On exit  : 0/0
  8536 ;;		Unchanged: 0/0
  8537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8538 ;;      Params:         0       0       0       0       0
  8539 ;;      Locals:         1       0       0       0       0
  8540 ;;      Temps:          2       0       0       0       0
  8541 ;;      Totals:         3       0       0       0       0
  8542 ;;Total ram usage:        3 bytes
  8543 ;; Hardware stack levels used:    1
  8544 ;; Hardware stack levels required when called:    1
  8545 ;; This function calls:
  8546 ;;		_Lcd_Port
  8547 ;; This function is called by:
  8548 ;;		_Lcd_Clear
  8549 ;;		_Lcd_Set_Cursor
  8550 ;;		_Lcd_Init
  8551 ;; This function uses a non-reentrant model
  8552 ;;
  8553                           psect	text22,local,class=CODE,delta=2,merge=1,group=0
  8554                           	line	58
  8555                           global __ptext22
  8556                           __ptext22:	;psect for function _Lcd_Cmd
  8557  092D                     psect	text22
  8558                           	file	"ROK3ZAD2.c"
  8559                           	line	58
  8560                           	global	__size_of_Lcd_Cmd
  8561                           	__size_of_Lcd_Cmd	equ	__end_of_Lcd_Cmd-_Lcd_Cmd
  8562  001A                     	
  8563                           _Lcd_Cmd:	
  8564  092D                     ;incstack = 0
  8565                           	opt	stack 5
  8566                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  8567                           ;Lcd_Cmd@a stored from wreg
  8568                           	movwf	(Lcd_Cmd@a)
  8569  092D  00F3               	line	59
  8570                           	
  8571                           l1684:	
  8572  092E                     ;ROK3ZAD2.c: 59:     RD2=0;
  8573                           	bcf	status, 5	;RP0=0, select bank0
  8574  092E  1283               	bcf	status, 6	;RP1=0, select bank0
  8575  092F  1303               	bcf	(66/8),(66)&7	;volatile
  8576  0930  1108               	line	60
  8577                           	
  8578                           l1686:	
  8579  0931                     ;ROK3ZAD2.c: 60:     Lcd_Port(a);
  8580                           	movf	(Lcd_Cmd@a),w
  8581  0931  0873               	fcall	_Lcd_Port
  8582  0932  120A  158A  2147  120A  158A  	line	61
  8583                           	
  8584                           l1688:	
  8585  0937                     ;ROK3ZAD2.c: 61:     RD3=1;
  8586                           	bcf	status, 5	;RP0=0, select bank0
  8587  0937  1283               	bcf	status, 6	;RP1=0, select bank0
  8588  0938  1303               	bsf	(67/8),(67)&7	;volatile
  8589  0939  1588               	line	62
  8590                           	
  8591                           l1690:	
  8592  093A                     ;ROK3ZAD2.c: 62:     _delay((unsigned long)((4)*(20000000/4000.0)));
  8593                           	opt asmopt_push
  8594                           opt asmopt_off
  8595                           movlw	26
  8596  093A  301A               movwf	((??_Lcd_Cmd+0)+0+1),f
  8597  093B  00F2               	movlw	248
  8598  093C  30F8               movwf	((??_Lcd_Cmd+0)+0),f
  8599  093D  00F1               	u3327:
  8600  093E                     decfsz	((??_Lcd_Cmd+0)+0),f
  8601  093E  0BF1               	goto	u3327
  8602  093F  293E               	decfsz	((??_Lcd_Cmd+0)+0+1),f
  8603  0940  0BF2               	goto	u3327
  8604  0941  293E               	nop
  8605  0942  0000               opt asmopt_pop
  8606                           
  8607                           	line	63
  8608                           	
  8609                           l1692:	
  8610  0943                     ;ROK3ZAD2.c: 63:     RD3=0;
  8611                           	bcf	status, 5	;RP0=0, select bank0
  8612  0943  1283               	bcf	status, 6	;RP1=0, select bank0
  8613  0944  1303               	bcf	(67/8),(67)&7	;volatile
  8614  0945  1188               	line	64
  8615                           	
  8616                           l84:	
  8617  0946                     	return
  8618  0946  0008               	opt stack 0
  8619                           GLOBAL	__end_of_Lcd_Cmd
  8620                           	__end_of_Lcd_Cmd:
  8621  0947                     	signat	_Lcd_Cmd,4217
  8622                           	global	_Lcd_Port
  8623                           
  8624 ;; *************** function _Lcd_Port *****************
  8625 ;; Defined at:
  8626 ;;		line 39 in file "ROK3ZAD2.c"
  8627 ;; Parameters:    Size  Location     Type
  8628 ;;  a               1    wreg     unsigned char 
  8629 ;; Auto vars:     Size  Location     Type
  8630 ;;  a               1    0[COMMON] unsigned char 
  8631 ;; Return value:  Size  Location     Type
  8632 ;;                  1    wreg      void 
  8633 ;; Registers used:
  8634 ;;		wreg
  8635 ;; Tracked objects:
  8636 ;;		On entry : 0/0
  8637 ;;		On exit  : 0/0
  8638 ;;		Unchanged: 0/0
  8639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8640 ;;      Params:         0       0       0       0       0
  8641 ;;      Locals:         1       0       0       0       0
  8642 ;;      Temps:          0       0       0       0       0
  8643 ;;      Totals:         1       0       0       0       0
  8644 ;;Total ram usage:        1 bytes
  8645 ;; Hardware stack levels used:    1
  8646 ;; This function calls:
  8647 ;;		Nothing
  8648 ;; This function is called by:
  8649 ;;		_Lcd_Cmd
  8650 ;;		_Lcd_Init
  8651 ;;		_Lcd_Write_Char
  8652 ;; This function uses a non-reentrant model
  8653 ;;
  8654                           psect	text23,local,class=CODE,delta=2,merge=1,group=0
  8655                           	line	39
  8656                           global __ptext23
  8657                           __ptext23:	;psect for function _Lcd_Port
  8658  0947                     psect	text23
  8659                           	file	"ROK3ZAD2.c"
  8660                           	line	39
  8661                           	global	__size_of_Lcd_Port
  8662                           	__size_of_Lcd_Port	equ	__end_of_Lcd_Port-_Lcd_Port
  8663  0023                     	
  8664                           _Lcd_Port:	
  8665  0947                     ;incstack = 0
  8666                           	opt	stack 5
  8667                           ; Regs used in _Lcd_Port: [wreg]
  8668                           ;Lcd_Port@a stored from wreg
  8669                           	movwf	(Lcd_Port@a)
  8670  0947  00F0               	line	40
  8671                           	
  8672                           l1670:	
  8673  0948                     ;ROK3ZAD2.c: 40:     if(a&1)
  8674                           	btfss	(Lcd_Port@a),(0)&7
  8675  0948  1C70               	goto	u1611
  8676  0949  294B               	goto	u1610
  8677  094A  294C               u1611:
  8678  094B                     	goto	l73
  8679  094B  2950               u1610:
  8680  094C                     	line	41
  8681                           	
  8682                           l1672:	
  8683  094C                     ;ROK3ZAD2.c: 41:         RD4=1;
  8684                           	bcf	status, 5	;RP0=0, select bank0
  8685  094C  1283               	bcf	status, 6	;RP1=0, select bank0
  8686  094D  1303               	bsf	(68/8),(68)&7	;volatile
  8687  094E  1608               	goto	l74
  8688  094F  2953               	line	42
  8689                           ;ROK3ZAD2.c: 42:     else
  8690                           	
  8691                           l73:	
  8692  0950                     	line	43
  8693                           ;ROK3ZAD2.c: 43:         RD4=0;
  8694                           	bcf	status, 5	;RP0=0, select bank0
  8695  0950  1283               	bcf	status, 6	;RP1=0, select bank0
  8696  0951  1303               	bcf	(68/8),(68)&7	;volatile
  8697  0952  1208               	
  8698                           l74:	
  8699  0953                     	line	44
  8700                           ;ROK3ZAD2.c: 44:     if(a&2)
  8701                           	btfss	(Lcd_Port@a),(1)&7
  8702  0953  1CF0               	goto	u1621
  8703  0954  2956               	goto	u1620
  8704  0955  2957               u1621:
  8705  0956                     	goto	l75
  8706  0956  2959               u1620:
  8707  0957                     	line	45
  8708                           	
  8709                           l1674:	
  8710  0957                     ;ROK3ZAD2.c: 45:         RD5=1;
  8711                           	bsf	(69/8),(69)&7	;volatile
  8712  0957  1688               	goto	l76
  8713  0958  295A               	line	46
  8714                           ;ROK3ZAD2.c: 46:     else
  8715                           	
  8716                           l75:	
  8717  0959                     	line	47
  8718                           ;ROK3ZAD2.c: 47:         RD5=0;
  8719                           	bcf	(69/8),(69)&7	;volatile
  8720  0959  1288               	
  8721                           l76:	
  8722  095A                     	line	48
  8723                           ;ROK3ZAD2.c: 48:     if(a&4)
  8724                           	btfss	(Lcd_Port@a),(2)&7
  8725  095A  1D70               	goto	u1631
  8726  095B  295D               	goto	u1630
  8727  095C  295E               u1631:
  8728  095D                     	goto	l77
  8729  095D  2960               u1630:
  8730  095E                     	line	49
  8731                           	
  8732                           l1676:	
  8733  095E                     ;ROK3ZAD2.c: 49:         RD6=1;
  8734                           	bsf	(70/8),(70)&7	;volatile
  8735  095E  1708               	goto	l78
  8736  095F  2961               	line	50
  8737                           ;ROK3ZAD2.c: 50:     else
  8738                           	
  8739                           l77:	
  8740  0960                     	line	51
  8741                           ;ROK3ZAD2.c: 51:         RD6=0;
  8742                           	bcf	(70/8),(70)&7	;volatile
  8743  0960  1308               	
  8744                           l78:	
  8745  0961                     	line	52
  8746                           ;ROK3ZAD2.c: 52:     if(a&8)
  8747                           	btfss	(Lcd_Port@a),(3)&7
  8748  0961  1DF0               	goto	u1641
  8749  0962  2964               	goto	u1640
  8750  0963  2965               u1641:
  8751  0964                     	goto	l79
  8752  0964  2967               u1640:
  8753  0965                     	line	53
  8754                           	
  8755                           l1678:	
  8756  0965                     ;ROK3ZAD2.c: 53:         RD7=1;
  8757                           	bsf	(71/8),(71)&7	;volatile
  8758  0965  1788               	goto	l81
  8759  0966  2969               	line	54
  8760                           ;ROK3ZAD2.c: 54:     else
  8761                           	
  8762                           l79:	
  8763  0967                     	line	55
  8764                           ;ROK3ZAD2.c: 55:         RD7=0;
  8765                           	bcf	(71/8),(71)&7	;volatile
  8766  0967  1388               	goto	l81
  8767  0968  2969               	
  8768                           l80:	
  8769  0969                     	line	56
  8770                           	
  8771                           l81:	
  8772  0969                     	return
  8773  0969  0008               	opt stack 0
  8774                           GLOBAL	__end_of_Lcd_Port
  8775                           	__end_of_Lcd_Port:
  8776  096A                     	signat	_Lcd_Port,4217
  8777                           	global	_ADC_Read
  8778                           
  8779 ;; *************** function _ADC_Read *****************
  8780 ;; Defined at:
  8781 ;;		line 172 in file "ROK3ZAD2.c"
  8782 ;; Parameters:    Size  Location     Type
  8783 ;;  channel         1    wreg     unsigned char 
  8784 ;; Auto vars:     Size  Location     Type
  8785 ;;  channel         1    4[COMMON] unsigned char 
  8786 ;; Return value:  Size  Location     Type
  8787 ;;                  2    0[COMMON] unsigned int 
  8788 ;; Registers used:
  8789 ;;		wreg, status,2, status,0
  8790 ;; Tracked objects:
  8791 ;;		On entry : 0/0
  8792 ;;		On exit  : 0/0
  8793 ;;		Unchanged: 0/0
  8794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8795 ;;      Params:         2       0       0       0       0
  8796 ;;      Locals:         1       0       0       0       0
  8797 ;;      Temps:          2       0       0       0       0
  8798 ;;      Totals:         5       0       0       0       0
  8799 ;;Total ram usage:        5 bytes
  8800 ;; Hardware stack levels used:    1
  8801 ;; This function calls:
  8802 ;;		Nothing
  8803 ;; This function is called by:
  8804 ;;		_main
  8805 ;; This function uses a non-reentrant model
  8806 ;;
  8807                           psect	text24,local,class=CODE,delta=2,merge=1,group=0
  8808                           	line	172
  8809                           global __ptext24
  8810                           __ptext24:	;psect for function _ADC_Read
  8811  0005                     psect	text24
  8812                           	file	"ROK3ZAD2.c"
  8813                           	line	172
  8814                           	global	__size_of_ADC_Read
  8815                           	__size_of_ADC_Read	equ	__end_of_ADC_Read-_ADC_Read
  8816  002E                     	
  8817                           _ADC_Read:	
  8818  0005                     ;incstack = 0
  8819                           	opt	stack 7
  8820                           ; Regs used in _ADC_Read: [wreg+status,2+status,0]
  8821                           ;ADC_Read@channel stored from wreg
  8822                           	movwf	(ADC_Read@channel)
  8823  0005  00F4               	line	174
  8824                           	
  8825                           l1846:	
  8826  0006                     ;ROK3ZAD2.c: 172: unsigned int ADC_Read(unsigned char channel);ROK3ZAD2.c: 173: {;ROK3ZA
                                 D2.c: 174:   ADCON0 &= 0x11000101;
  8827                           	movlw	low(01h)
  8828  0006  3001               	movwf	(??_ADC_Read+0)+0
  8829  0007  00F2               	movf	(??_ADC_Read+0)+0,w
  8830  0008  0872               	bcf	status, 5	;RP0=0, select bank0
  8831  0009  1283               	bcf	status, 6	;RP1=0, select bank0
  8832  000A  1303               	andwf	(31),f	;volatile
  8833  000B  059F               	line	175
  8834                           ;ROK3ZAD2.c: 175:   ADCON0 |= channel<<3;
  8835                           	movf	(ADC_Read@channel),w	;volatile
  8836  000C  0874               	movwf	(??_ADC_Read+0)+0
  8837  000D  00F2               	movlw	(03h)-1
  8838  000E  3002               u1925:
  8839  000F                     	clrc
  8840  000F  1003               	rlf	(??_ADC_Read+0)+0,f
  8841  0010  0DF2               	addlw	-1
  8842  0011  3EFF               	skipz
  8843  0012  1D03               	goto	u1925
  8844  0013  280F               	clrc
  8845  0014  1003               	rlf	(??_ADC_Read+0)+0,w
  8846  0015  0D72               	movwf	(??_ADC_Read+1)+0
  8847  0016  00F3               	movf	(??_ADC_Read+1)+0,w
  8848  0017  0873               	iorwf	(31),f	;volatile
  8849  0018  049F               	line	176
  8850                           	
  8851                           l1848:	
  8852  0019                     ;ROK3ZAD2.c: 176:   _delay((unsigned long)((2)*(20000000/4000.0)));
  8853                           	opt asmopt_push
  8854                           opt asmopt_off
  8855                           movlw	13
  8856  0019  300D               movwf	((??_ADC_Read+0)+0+1),f
  8857  001A  00F3               	movlw	251
  8858  001B  30FB               movwf	((??_ADC_Read+0)+0),f
  8859  001C  00F2               	u3337:
  8860  001D                     decfsz	((??_ADC_Read+0)+0),f
  8861  001D  0BF2               	goto	u3337
  8862  001E  281D               	decfsz	((??_ADC_Read+0)+0+1),f
  8863  001F  0BF3               	goto	u3337
  8864  0020  281D               	nop2
  8865  0021  2822               opt asmopt_pop
  8866                           
  8867                           	line	177
  8868                           	
  8869                           l1850:	
  8870  0022                     ;ROK3ZAD2.c: 177:   GO_nDONE = 1;
  8871                           	bcf	status, 5	;RP0=0, select bank0
  8872  0022  1283               	bcf	status, 6	;RP1=0, select bank0
  8873  0023  1303               	bsf	(250/8),(250)&7	;volatile
  8874  0024  151F               	line	179
  8875                           ;ROK3ZAD2.c: 179:   while(GO_nDONE);
  8876                           	goto	l130
  8877  0025  2826               	
  8878                           l131:	
  8879  0026                     	
  8880                           l130:	
  8881  0026                     	btfsc	(250/8),(250)&7	;volatile
  8882  0026  191F               	goto	u1931
  8883  0027  2829               	goto	u1930
  8884  0028  282A               u1931:
  8885  0029                     	goto	l130
  8886  0029  2826               u1930:
  8887  002A                     	goto	l1852
  8888  002A  282B               	
  8889                           l132:	
  8890  002B                     	line	181
  8891                           	
  8892                           l1852:	
  8893  002B                     ;ROK3ZAD2.c: 181:   return ((ADRESH<<8)+ADRESL);
  8894                           	movf	(30),w	;volatile
  8895  002B  081E               	movwf	(?_ADC_Read+1)
  8896  002C  00F1               	bsf	status, 5	;RP0=1, select bank1
  8897  002D  1683               	bcf	status, 6	;RP1=0, select bank1
  8898  002E  1303               	movf	(158)^080h,w	;volatile
  8899  002F  081E               	movwf	(?_ADC_Read)
  8900  0030  00F0               	goto	l133
  8901  0031  2832               	
  8902                           l1854:	
  8903  0032                     	line	182
  8904                           	
  8905                           l133:	
  8906  0032                     	return
  8907  0032  0008               	opt stack 0
  8908                           GLOBAL	__end_of_ADC_Read
  8909                           	__end_of_ADC_Read:
  8910  0033                     	signat	_ADC_Read,4218
  8911                           	global	_ADC_Initialize
  8912                           
  8913 ;; *************** function _ADC_Initialize *****************
  8914 ;; Defined at:
  8915 ;;		line 166 in file "ROK3ZAD2.c"
  8916 ;; Parameters:    Size  Location     Type
  8917 ;;		None
  8918 ;; Auto vars:     Size  Location     Type
  8919 ;;		None
  8920 ;; Return value:  Size  Location     Type
  8921 ;;                  1    wreg      void 
  8922 ;; Registers used:
  8923 ;;		wreg
  8924 ;; Tracked objects:
  8925 ;;		On entry : 0/0
  8926 ;;		On exit  : 0/0
  8927 ;;		Unchanged: 0/0
  8928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8929 ;;      Params:         0       0       0       0       0
  8930 ;;      Locals:         0       0       0       0       0
  8931 ;;      Temps:          0       0       0       0       0
  8932 ;;      Totals:         0       0       0       0       0
  8933 ;;Total ram usage:        0 bytes
  8934 ;; Hardware stack levels used:    1
  8935 ;; This function calls:
  8936 ;;		Nothing
  8937 ;; This function is called by:
  8938 ;;		_main
  8939 ;; This function uses a non-reentrant model
  8940 ;;
  8941                           psect	text25,local,class=CODE,delta=2,merge=1,group=0
  8942                           	line	166
  8943                           global __ptext25
  8944                           __ptext25:	;psect for function _ADC_Initialize
  8945  08E1                     psect	text25
  8946                           	file	"ROK3ZAD2.c"
  8947                           	line	166
  8948                           	global	__size_of_ADC_Initialize
  8949                           	__size_of_ADC_Initialize	equ	__end_of_ADC_Initialize-_ADC_Initialize
  8950  0009                     	
  8951                           _ADC_Initialize:	
  8952  08E1                     ;incstack = 0
  8953                           	opt	stack 7
  8954                           ; Regs used in _ADC_Initialize: [wreg]
  8955                           	line	168
  8956                           	
  8957                           l1844:	
  8958  08E1                     ;ROK3ZAD2.c: 168:   ADCON0 = 0b01000001;
  8959                           	movlw	low(041h)
  8960  08E1  3041               	bcf	status, 5	;RP0=0, select bank0
  8961  08E2  1283               	bcf	status, 6	;RP1=0, select bank0
  8962  08E3  1303               	movwf	(31)	;volatile
  8963  08E4  009F               	line	169
  8964                           ;ROK3ZAD2.c: 169:   ADCON1 = 0b11000000;
  8965                           	movlw	low(0C0h)
  8966  08E5  30C0               	bsf	status, 5	;RP0=1, select bank1
  8967  08E6  1683               	bcf	status, 6	;RP1=0, select bank1
  8968  08E7  1303               	movwf	(159)^080h	;volatile
  8969  08E8  009F               	line	170
  8970                           	
  8971                           l127:	
  8972  08E9                     	return
  8973  08E9  0008               	opt stack 0
  8974                           GLOBAL	__end_of_ADC_Initialize
  8975                           	__end_of_ADC_Initialize:
  8976  08EA                     	signat	_ADC_Initialize,89
  8977                           global	___latbits
  8978                           ___latbits	equ	2
  8979  0002                     	global	btemp
  8980                           	btemp set 07Eh
  8981  007E                     
  8982                           	DABS	1,126,2	;btemp
  8983                           	global	wtemp0
  8984                           	wtemp0 set btemp+0
  8985  007E                     	end


Data Sizes:
    Strings     472
    Constant    10
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     62      62
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 68
		 -> STR_20(CODE[26]), STR_16(CODE[3]), STR_15(CODE[3]), STR_14(CODE[3]), 
		 -> STR_13(CODE[2]), STR_12(CODE[3]), STR_11(CODE[3]), STR_10(CODE[16]), 
		 -> STR_9(CODE[25]), STR_8(CODE[8]), STR_7(CODE[45]), STR_6(CODE[8]), 
		 -> STR_5(CODE[53]), STR_4(CODE[40]), STR_3(CODE[34]), STR_2(CODE[37]), 
		 -> STR_1(CODE[68]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 31
		 -> STR_24(CODE[31]), STR_23(CODE[31]), STR_22(CODE[25]), STR_21(CODE[16]), 
		 -> STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[12]), 


Critical Paths under _main in COMMON

    _main->___awmod
    _main->___flmul
    _printf->___lwmod
    _putch->_UART_Send_Char
    ___lwmod->___lwdiv
    ___xxtofl->_ADC_Read
    ___fltol->___flmul
    ___flmul->__Umul8_16
    ___awmod->___awdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->___fltol
    ___fltol->___flmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                30    30      0   11261
                                             32 BANK0     30    30      0
                     _ADC_Initialize
                           _ADC_Read
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                      _ServoRotiraj0
                    _ServoRotiraj180
                      _UART_Get_Char
                          _UART_Init
                     _UART_Send_Char
                            ___awdiv
                            ___awmod
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              22    18      4    2347
                                              0 BANK0     14    10      4
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      44
                                              1 COMMON     1     1      0
                     _UART_Send_Char
 ---------------------------------------------------------------------------------
 (3) _UART_Send_Char                                       1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              5 COMMON     8     4      4
                                              0 BANK0      6     6      0
                           _ADC_Read (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             11     7      4     305
                                             21 BANK0     11     7      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             26    18      8    2569
                                              9 COMMON     5     5      0
                                              0 BANK0     21    13      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (2) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1273
                                              0 COMMON    13     5      8
                                              0 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     904
                                              9 COMMON     5     1      4
                                              0 BANK0      2     2      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     756
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Get_Char                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ServoRotiraj180                                      4     4      0      46
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _ServoRotiraj0                                        4     4      0      46
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     800
                                              5 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     836
                                              4 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             5     3      2      22
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Initialize
   _ADC_Read
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _ServoRotiraj0
   _ServoRotiraj180
   _UART_Get_Char
   _UART_Init
   _UART_Send_Char
   ___awdiv
   ___awmod
     ___awdiv (ARG)
   ___fldiv
   ___flmul
     __Umul8_16
   ___fltol
     ___flmul (ARG)
       __Umul8_16
   ___xxtofl
     _ADC_Read (ARG)
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putch
       _UART_Send_Char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3E      3E       5       77.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sat Jan 05 23:10:36 2019

             ___fldiv@aexp 002C               ___fldiv@bexp 002B                          pc 0002  
             ___fldiv@sign 0024                __CFG_CP$OFF 0000                         l80 0969  
                       l81 0969                         l73 0950                         l74 0953  
                       l90 0B32                         l75 0959                         l91 0B5C  
                       l76 095A                         l84 0946                         l92 0B5B  
                       l77 0960                         l93 0B5C                         l78 0961  
                       l79 0967                         l87 0902                         l96 0BBA  
                       l99 0A38               ___awdiv@sign 0076                         fsr 0004  
      __Umul8_16@word_mpld 0076                        l102 0AA0                        l103 0A7D  
                      l111 08EC                        l104 0ABD                        l120 0912  
                      l112 08EC                        l105 0ABD                        l121 0914  
                      l113 08F3                        l130 0026                        l114 08F5  
                      l131 0026                        l132 002B                        l108 092C  
                      l124 08E0                        l133 0032                        l117 090C  
                      l118 090D                        l127 08E9                        l119 090D  
                      l136 09A1                        l160 041B                        l137 09C9  
                      l161 045F                        l153 015B                        l138 09C9  
                      l146 09D7                        l162 0484                        l154 0466  
                      l147 09FF                        l163 0484                        l155 01C7  
                      l148 09FF                        l260 004B                        l156 047B  
                      l261 0139                        l157 03A4                        l430 0C7F  
                      l422 0C2D                        l270 00D0                        l262 004C  
                      l158 03A5                        l431 0C8B                        l423 0C3B  
                      l271 0110                        l263 004D                        l159 03E6  
                      l432 0C90                        l424 0C80                        l440 0BEE  
                      l256 011D                        l272 00D7                        l264 0073  
                      l425 0C52                        l441 0BEF                        l273 011C  
                      l265 004E                        l257 003A                        l426 0C46  
                      l442 0C00                        l274 0138                        l266 008D  
                      l258 0047                        l427 0C57                        l443 0C0E  
                      l435 0BCA                        l267 0097                        l259 0050  
                      l275 0139                        l428 0C58                        l444 0C1A  
                      l436 0BD4                        l700 0DB8                        l268 00C3  
                      l429 0C71                        l445 0C1F                        l437 0C0F  
                      l621 0E04                        l701 0DC4                        l269 00B8  
                      l438 0BE9                        l630 0FFF                        l622 0E1A  
                      l470 0D1C                        l702 0DE7                        l550 0B02  
                      l439 0BDD                        l631 0E8B                        l623 0E17  
                      l471 0D09                        l551 0B08                        l640 0F22  
                      l632 0F10                        l624 0E23                        l472 0D15  
                      l464 0CB0                        l544 0B03                        l560 0A73  
                      l641 0F31                        l633 0EBC                        l625 0E34  
                      l705 0975                        l473 0D0A                        l465 0D2C  
                      l545 0AD5                        l561 0A79                        l650 0FDB  
                      l642 0F46                        l634 0EE3                        l626 0E4A  
                      l706 097F                        l474 0D1B                        l466 0CF9  
                      l546 0AC9                        l554 0A74                        l651 0FE7  
                      l643 0F6B                        l635 0ED9                        l627 0E47  
                      l707 098E                        l475 0D2C                        l467 0CE5  
                      l547 0ADA                        l555 0A4E                        l652 0FEB  
                      l644 0F62                        l636 0F0B                        l628 0E52  
                      l708 0993                        l660 04B8                        l468 0CE6  
                      l548 0ADB                        l556 0A42                        l645 0F6A  
                      l637 0F17                        l629 0E74                        l661 04C9  
                      l469 0CF8                        l549 0AF4                        l557 0A53  
                      l646 0F69                        l638 0F21                        l670 071E  
                      l662 04DE                        l558 0A54                        l647 0FA3  
                      l639 0F41                        l671 072D                        l663 04DC  
                      l559 0A65                        l648 0FA2                        l680 07EE  
                      l672 0742                        l664 04E7                        l649 0FBF  
                      l681 07D2                        l673 0767                        l665 04FC  
                      l657 049A                        l682 07EE                        l674 075E  
                      l658 04AF                        l690 0D76                        l683 07E6  
                      l675 0766                        l667 04F2                        l659 04AD  
                      l691 0D68                        l676 0765                        l668 07FB  
                      l692 0D7D                        l677 079F                        l669 073D  
                      l693 0D99                        l678 079E                        l694 0D7E  
                      l686 0D49                        l679 07B7                        l695 0DA0  
                      l687 0D51                        l696 0DAD                        l688 0D63  
                      l697 0DA1                        l689 0DF0                        l699 0DB8  
                      _RB0 0030                        _RB1 0031                        _RB2 0032  
                      _RD2 0042                        _RD3 0043                        _RD4 0044  
                      _RD5 0045                        _RD6 0046                        _RD7 0047  
             __CFG_CPD$OFF 0000                        _RX9 00C6                        _TX9 04C6  
                      fsr0 0004                        indf 0000               ___awmod@sign 0021  
             __CFG_FOSC$HS 0000               ___flmul@aexp 002D               ___flmul@bexp 002E  
             ___flmul@sign 0028               ___flmul@temp 0033               ___flmul@prod 002F  
             __CFG_LVP$OFF 0000               ___fltol@exp1 003F                       l2000 0C07  
                     l2002 0C0F                       l2010 0C91                       l2004 0C14  
                     l2100 0E8B                       l2020 0CC6                       l2012 0CA6  
                     l2006 0C1A                       l2110 0EBC                       l2102 0EA2  
                     l2030 0CE4                       l2022 0CCE                       l2014 0CAF  
                     l2008 0C1F                       l2112 0EC1                       l2120 0EE3  
                     l2104 0EAA                       l2200 04A4                       l2040 0D0A  
                     l2032 0CE6                       l2024 0CD0                       l2016 0CB0  
                     l2130 0F17                       l2122 0EF5                       l2114 0ED3  
                     l2106 0EB2                       l2050 0DFE                       l2210 04C3  
                     l2202 04AD                       l2042 0D1C                       l2026 0CD4  
                     l2034 0CF9                       l2018 0CC5                       l2140 0F31  
                     l2132 0F1F                       l2124 0EF6                       l2116 0ED7  
                     l2108 0EBA                       l2060 0E17                       l2052 0E02  
                     l2300 077A                       l2220 04DC                       l2212 04C7  
                     l2204 04AF                       l2044 0D21                       l2036 0CFF  
                     l2028 0CDB                       l2150 0F4B                       l2142 0F3A  
                     l2134 0F22                       l2126 0F0B                       l2118 0ED9  
                     l2070 0E2E                       l2062 0E18                       l2054 0E04  
                     l2046 0DF1                       l2310 07B7                       l2302 077E  
                     l2230 04FB                       l2222 04DE                       l2214 04C9  
                     l2206 04B8                       l2038 0D08                       l2160 0F7E  
                     l2152 0F5F                       l2136 0F2B                       l2144 0F41  
                     l2128 0F10                       l2080 0E47                       l2072 0E32  
                     l2056 0E09                       l2064 0E1A                       l2048 0DF8  
                     l2320 07E4                       l2312 07C6                       l2304 0797  
                     l2240 0552                       l2232 04FC                       l2224 04E7  
                     l2216 04CE                       l2208 04BD                       l2400 01BB  
                     l2170 0FBF                       l2162 0F82                       l2154 0F66  
                     l2146 0F46                       l2138 0F2F                       l2090 0E6A  
                     l2082 0E48                       l2074 0E34                       l2066 0E23  
                     l2058 0E0E                       l2322 07E6                       l2314 07D0  
                     l2306 079F                       l2250 05CF                       l2242 057E  
                     l2234 050C                       l2226 04EC                       l2218 04D3  
                     l2330 0D35                       l2410 0236                       l2402 01C7  
                     l1700 0A1C                       l2180 0FE5                       l2172 0FCE  
                     l2164 0F9B                       l2156 0F6B                       l2148 0F47  
                     l2092 0E73                       l2076 0E39                       l2084 0E4A  
                     l2068 0E28                       l2324 07F2                       l2316 07D2  
                     l2308 07AC                       l2260 064F                       l2252 05EC  
                     l2244 059A                       l2236 0519                       l2228 04F2  
                     l2340 0D63                       l2332 0D39                       l2500 045F  
                     l2420 02D3                       l2412 0260                       l2404 01D2  
                     l1710 0A30                       l1702 0A1F                       l2182 0FE7  
                     l2174 0FD2                       l2158 0F70                       l2166 0FA3  
                     l2086 0E5A                       l2094 0E74                       l2078 0E3E  
                     l2326 07FB                       l2318 07E0                       l2270 0707  
                     l2262 067C                       l2254 05FC                       l2246 05B6  
                     l2238 0536                       l2190 048E                       l2350 0D90  
                     l2342 0D68                       l2334 0D49                       l2502 0465  
                     l2430 0314                       l2422 02DC                       l2414 0280  
                     l2406 01F8                       l1800 0B5D                       l1712 0A35  
                     l1704 0A24                       l2184 0FF6                       l2176 0FDA  
                     l2168 0FB0                       l2096 0E79                       l2088 0E66  
                     l2280 072D                       l2272 0710                       l2264 068C  
                     l2256 0619                       l2248 05BF                       l2192 0494  
                     l2360 0DC6                       l2352 0DA1                       l2344 0D76  
                     l2336 0D59                       l2328 0D30                       l1720 0AC6  
                     l2440 0348                       l2432 0323                       l2424 02EB  
                     l2416 02A0                       l2408 0217                       l2504 0466  
                     l1802 0B63                       l1706 0A27                       l1810 0A7A  
                     l2186 0FFF                       l2178 0FE1                       l2098 0E8A  
                     l2290 0747                       l2282 0736                       l2274 071E  
                     l2266 06B9                       l2258 0632                       l2194 0498  
                     l2370 0DF0                       l2362 0DDC                       l2354 0DAD  
                     l2346 0D7E                       l2338 0D62                       l1730 0AEC  
                     l1722 0AC9                       l1714 08DA                       l2506 047B  
                     l2450 0378                       l2442 0354                       l2434 032E  
                     l2426 02FA                       l2418 02C0                       l1804 0B6C  
                     l1708 0A2D                       l1812 0A7D                       l1820 0919  
                     l2292 075B                       l2276 0727                       l2284 073D  
                     l2268 06DF                       l2196 049A                       l2188 0487  
                     l2364 0DE1                       l2356 0DB1                       l2348 0D82  
                     l1740 0B08                       l1732 0AF2                       l1724 0AD0  
                     l1716 0ABE                       l1900 008F                       l2460 03A5  
                     l2452 0381                       l2444 035D                       l2436 0333  
                     l2428 0305                       l2380 0155                       l2372 013A  
                     l1670 0948                       l1806 0B7B                       l1814 0A99  
                     l1830 0923                       l1822 091B                       l2294 0762  
                     l2286 0742                       l2278 072B                       l2198 049F  
                     l2366 0DE5                       l2358 0DBC                       l1734 0AF4  
                     l1726 0AD5                       l1718 0AC0                       l1750 0A4E  
                     l1742 0A39                       l1902 0096                       l1910 00C3  
                     l2470 03E0                       l2462 03B0                       l2454 0387  
                     l2446 0366                       l2438 033F                       l2390 0187  
                     l2382 015B                       l2374 0146                       l1672 094C  
                     l1808 0B81                       l1816 0AA0                       l1840 0912  
                     l1832 0926                       l1824 091C                       l2296 0767  
                     l2288 0743                       l2368 0DE7                       l1736 0AFB  
                     l1728 0ADB                       l1752 0A54                       l1744 0A3F  
                     l1760 0A74                       l1680 08EB                       l1920 0110  
                     l1912 00C9                       l1904 0097                       l2480 040C  
                     l2472 03E6                       l2464 03B8                       l2456 0390  
                     l2448 036F                       l2392 0192                       l2384 0166  
                     l2376 014B                       l1850 0022                       l1674 0957  
                     l1690 093A                       l1842 0914                       l1834 0929  
                     l1826 091D                       l1818 0915                       l1930 0C21  
                     l1770 0979                       l2298 076C                       l1738 0B03  
                     l1762 0A79                       l1754 0A5E                       l1746 0A42  
                     l1682 08F3                       l1914 00D0                       l1906 00B7  
                     l1922 011D                       l2490 0424                       l2482 041A  
                     l2474 03EE                       l2466 03C9                       l2458 039E  
                     l2394 019D                       l2386 0171                       l2378 0150  
                     l1844 08E1                       l1852 002B                       l1676 095E  
                     l1692 0943                       l1684 092E                       l1780 0B0A  
                     l1860 09A0                       l1836 0903                       l1828 0920  
                     l1940 0C36                       l1932 0C25                       l1772 0988  
                     l1764 096B                       l1756 0A65                       l1748 0A49  
                     l1916 00D7                       l1908 00B8                       l2564 046D  
                     l2492 0432                       l2484 041B                       l2476 03F7  
                     l2468 03D2                       l2396 01A8                       l2388 017C  
                     l1854 0032                       l1846 0006                       l1678 0965  
                     l1686 0931                       l1782 0B0F                       l1790 0B32  
                     l1694 0A01                       l1862 09A4                       l1870 09D6  
                     l1838 0909                       l1950 0C4D                       l1942 0C3B  
                     l1934 0C2A                       l1774 098E                       l1766 096D  
                     l1758 0A6C                       l1918 0109                       l2566 0068  
                     l2494 0437                       l2486 0420                       l2478 0408  
                     l2398 01B5                       l1848 0019                       l1688 0937  
                     l1792 0B38                       l1784 0B20                       l1696 0A0B  
                     l1864 09AD                       l1856 0994                       l1872 09DA  
                     l1960 0C71                       l1952 0C52                       l1944 0C3D  
                     l1936 0C2D                       l1928 0C20                       l1776 0993  
                     l1768 0975                       l1880 0040                       l2496 043A  
                     l2488 0423                       l1778 08F6                       l1794 0B49  
                     l1786 0B25                       l1698 0A0E                       l1858 0996  
                     l1874 09E3                       l1866 09CA                       l1970 0C90  
                     l1962 0C78                       l1954 0C58                       l1946 0C43  
                     l1938 0C31                       l1890 007B                       l1882 0047  
                     l2498 0451                       l1796 0B4E                       l1788 0B2B  
                     l1868 09CC                       l1956 0C69                       l1948 0C46  
                     l1964 0C80                       l1980 0BCA                       l1972 0BBB  
                     l1892 007F                       l1884 004F                       l1876 0033  
                     l1798 0B54                       l1966 0C85                       l1958 0C6F  
                     l1990 0BE4                       l1982 0BCE                       l1974 0BBE  
                     l1894 0083                       l1886 0050                       l1878 003A  
                     l1968 0C8B                       l1992 0BE9                       l1984 0BD4  
                     l1976 0BC2                       l1896 0087                       l1888 0073  
                     l1994 0BEF                       l1986 0BDA                       l1978 0BC7  
                     l1898 008D                       l1996 0BF9                       l1988 0BDD  
                     l1998 0C00                       STR_1 101C                       STR_2 10EA  
                     STR_3 110F                       STR_4 10C2                       STR_5 1060  
                     STR_6 11E7                       STR_7 1095                       STR_8 11E7  
                     STR_9 11A2                       _BRGH 04C2                       _CREN 00C4  
                     u2000 0095                       u2001 0094                       u2010 00B6  
                     u2011 00B5                       u2100 0C56                       u2020 00C2  
                     u2101 0C55                       u2021 00C1                       u2030 00C9  
                     u2031 00C8                       u2015 00B2                       u2120 0C69  
                     u2200 0BED                       u3000 07C6                       u2040 011B  
                     u2121 0C68                       u2201 0BEC                       u3001 07C5  
                     u2041 011A                       u2210 0BF9                       u3010 07E4  
                     u2050 0137                       u2115 0C59                       u2211 0BF8  
                     u3011 07E3                       u2051 0136                       u2140 0C7E  
                     u2060 0C25                       u2300 0CF7                       u3100 0DB1  
                     u3020 0D35                       u2141 0C7D                       u2125 0C65  
                     u2061 0C24                       u3005 07C2                       u2301 0CF6  
                     u3101 0DB0                       u3021 0D34                       u2150 0C85  
                     u2070 0C31                       u2230 0C0D                       u2310 0CFF  
                     u3110 0DB7                       u3030 0D39                       u2151 0C84  
                     u2135 0C72                       u2071 0C30                       u2231 0C0C  
                     u2215 0BF5                       u2311 0CFE                       u3111 0DB6  
                     u3031 0D38                       u2080 0C43                       u2240 0C14  
                     u2160 0BC2                       u2400 0E3E                       u3120 0DBC  
                     u3040 0D59                       u2081 0C42                       u2241 0C13  
                     u2225 0C01                       u2161 0BC1                       u2401 0E3D  
                     u3121 0DBB                       u3041 0D58                       u1610 094C  
                     u2170 0BCE                       u2410 0E5A                       u2330 0D1A  
                     u2250 0CA6                       u3130 0DD1                       u1611 094B  
                     u2171 0BCD                       u2411 0E59                       u2331 0D19  
                     u2251 0CA5                       u1620 0957                       u2180 0BDA  
                     u2500 0F16                       u2420 0E79                       u2340 0D21  
                     u2260 0CBE                       u3140 0DE1                       u3060 0D7C  
                     u1621 0956                       u2181 0BD9                       u2501 0F15  
                     u2421 0E78                       u2341 0D20                       u2325 0D0C  
                     u3141 0DE0                       u3061 0D7B                       u1630 095E  
                     u2510 0F1F                       u2430 0EC1                       u2350 0E02  
                     u2270 0CD4                       u3150 0DE5                       u1710 0AEC  
                     u1631 095D                       u2095 0C47                       u2511 0F1E  
                     u2431 0EC0                       u2351 0E01                       u2271 0CD3  
                     u3151 0DE4                       u3135 0DCC                       u3055 0D6D  
                     u1711 0AEB                       u3207 03DA                       u1640 0965  
                     u2600 0F82                       u2360 0E09                       u1800 0979  
                     u2280 0CDB                       u3080 0D9F                       u3160 0419  
                     u1641 0964                       u2601 0F81                       u2361 0E08  
                     u1801 0978                       u2281 0CDA                       u2265 0CB9  
                     u3081 0D9E                       u1705 0ADC                       u3217 042C  
                     u3161 0418                       u2610 0F91                       u2530 0F2F  
                     u2370 0E0E                       u1730 0B01                       u1650 08F2  
                     u3170 045E                       u3307 0B76                       u2195 0BDE  
                     u2531 0F2E                       u2371 0E0D                       u3075 0D91  
                     u1731 0B00                       u1715 0AE8                       u1651 08F1  
                     u3171 045D                       u3227 0443                       u1900 0909  
                     u2620 0FB0                       u2460 0ED7                       u2380 0E32  
                     u1820 098D                       u2700 04D3                       u1740 0A3F  
                     u3180 0483                       u3317 0B85                       u3237 09DE  
                     u1901 0908                       u2621 0FAF                       u2525 0F24  
                     u2461 0ED6                       u2445 0EC3                       u2381 0E31  
                     u1821 098C                       u2701 04D2                       u1725 0AF5  
                     u1741 0A3E                       u3181 0482                       u3165 0415  
                     u1830 0B0F                       u1910 0911                       u2630 0FCE  
                     u2550 0F45                       u2390 0E39                       u2710 04EC  
                     u1670 0AC6                       u3327 093E                       u1831 0B0E  
                     u3247 09EA                       u1911 0910                       u2631 0FCD  
                     u2615 0F8C                       u2551 0F44                       u2455 0ECC  
                     u2391 0E38                       u1815 0980                       u2711 04EB  
                     u2295 0CE7                       u3095 0DA5                       u1671 0AC5  
                     u3175 045A                       u2640 0FE5                       u2560 0F4B  
                     u2480 0EF5                       u2720 04F1                       u1760 0A52  
                     u3337 001D                       u1665 0A11                       u3257 09A8  
                     u2641 0FE4                       u2625 0FAC                       u2561 0F4A  
                     u2545 0F33                       u2481 0EF4                       u2721 04F0  
                     u1761 0A51                       u1930 002A                       u1850 0B38  
                     u2570 0F5F                       u2490 0F0A                       u2650 0498  
                     u1690 0AD9                       u1770 0A5E                       u1931 0029  
                     u1851 0B37                       u3267 09B4                       u2635 0FCA  
                     u2571 0F5E                       u2475 0EDB                       u2811 0641  
                     u2731 0544                       u2651 0497                       u1691 0AD8  
                     u1771 0A5D                       u1755 0A43                       u1940 099F  
                     u2580 0F66                       u2900 072B                       u2812 0648  
                     u2732 054B                       u2660 049F                       u1925 000F  
                     u1845 0B17                       u3277 0A21                       u1941 099E  
                     u2581 0F65                       u2485 0EF1                       u2901 072A  
                     u2821 066E                       u2813 064F                       u2805 061B  
                     u2741 0560                       u2733 0552                       u2661 049E  
                     u1685 0ACA                       u3197 0398                       u1870 0A87  
                     u1950 09C8                       u2590 0F70                       u2822 0675  
                     u2742 0567                       u2670 04A4                       u1790 0A72  
                     u3287 0A32                       u1951 09C7                       u2591 0F6F  
                     u2495 0EFD                       u2831 069B                       u2823 067C  
                     u2751 058C                       u2743 056E                       u2671 04A3  
                     u1791 0A71                       u1775 0A5A                       u1880 0AAA  
                     u1960 09D5                       u2496 0EFE                       u2920 0741  
                     u2840 06C5                       u2832 06A2                       u2752 0593  
                     u2680 04C7                       u3297 0B67                       u1865 0B40  
                     u1961 09D4                       u2497 0F03                       u2921 0740  
                     u2833 06A9                       u2761 05A8                       u2753 059A  
                     u2681 04C6                       u1785 0A66                       u1890 0ABC  
                     u1970 09FE                       u2498 0F04                       u2930 0747  
                     u2762 05AF                       u2690 04CE                       u1891 0ABB  
                     u1971 09FD                       u2499 0F09                       u2931 0746  
                     u2915 072F                       u2851 06D1                       u2763 05B6  
                     u2691 04CD                       u2940 075B                       u2860 06ED  
                     u2852 06D8                       u1980 0040                       u2941 075A  
                     u2853 06DF                       u2845 06C0                       u2781 05DE  
                     u1981 003F                       u2950 0762                       u2782 05E5  
                     u1990 0083                       u2951 0761                       u2871 06F9  
                     u2791 060B                       u2783 05EC                       u2775 05B8  
                     u1991 0082                       u2960 076C                       u2872 0700  
                     u2792 0612                       u2961 076B                       u2873 0707  
                     u2865 06E8                       u2793 0619                       u2970 077E  
                     u2971 077D                       u2980 078D                       _RCIF 0065  
                     u2885 0709                       u2990 07AC                       u2991 07AB  
                     u2895 0720                       u2985 0788                       u2995 07A8  
                     _OERR 00C1                       _SPEN 00C7                       _TXEN 04C5  
                     _TXIF 0064                       _SYNC 04C4               __CFG_WRT$OFF 0000  
        ?_Lcd_Write_String 0075                       _main 013A                       btemp 007E  
         __end_of_ADC_Read 0033              __CFG_BOREN$ON 0000                       start 0000  
       ??_Lcd_Write_String 0077            ___fldiv@new_exp 0025            __end_of_Lcd_Cmd 0947  
            ___fltol@sign1 003E                      ?_main 0070            __end_of___fldiv 1000  
          __end_of___awdiv 0C91                      STR_10 11BB                      STR_11 11EF  
                    STR_12 11EF                      STR_20 116F                      STR_13 11B9  
                    STR_21 11CB                      STR_14 11EF                      STR_22 1189  
                    STR_15 11EF                      STR_23 1150                      STR_16 1186  
                    STR_24 1131                      STR_17 11DB              __CFG_WDTE$OFF 0000  
                    STR_18 11B9                      STR_19 11F2            __end_of___awmod 0C20  
          __end_of___flmul 07FC            __end_of___fltol 0D2D            ___awdiv@divisor 0070  
         ?_ServoRotiraj180 0070            __end_of___lwdiv 0B09            __end_of___lwmod 0A7A  
          ___awdiv@counter 0075                      _RCREG 001A                      _SPBRG 0099  
                    _PORTB 0006                      _PORTD 0008    __size_of_Lcd_Set_Cursor 0054  
                    _TRISB 0086                      _TRISD 0088                      _TXREG 0019  
       __size_of_UART_Init 0018            __end_of_dpowers 101C                      _putch 08D9  
                    main@i 0058                      pclath 000A                      status 0003  
                    wtemp0 007E           __end_of_Lcd_Init 0BBB           __end_of_Lcd_Port 096A  
          __initialization 07FC               __end_of_main 0487                     ??_main 0040  
       __size_of_Lcd_Clear 000D                     _ADCON0 001F                     _ADCON1 009F  
                   _ADRESH 001E                     _ADRESL 009E           ___awdiv@dividend 0072  
                   ?_putch 0070                  ??_Lcd_Cmd 0071    __size_of_Lcd_Write_Char 0039  
                   _TRISC6 043E                     _TRISC7 043F           __end_of___xxtofl 0DF1  
           __CFG_PWRTE$OFF 0000          __end_of_UART_Init 092D                  ??___fldiv 0078  
                ??___awdiv 0074                  ??___awmod 007D                  ??___flmul 0079  
                ??___fltol 0039                  ??___lwdiv 0074                  ??___lwmod 007C  
          ADC_Read@channel 0074           ___awdiv@quotient 0077            ___awmod@divisor 0079  
    __end_of_UART_Get_Char 0915            ___awmod@counter 0020                     _printf 0033  
                   main@c1 0050                     main@c2 0052                     main@c3 0054  
                   main@c4 0056         __size_of__Umul8_16 002A    __size_of_UART_Send_Char 000C  
                ?_ADC_Read 0070                     putch@a 0071      __end_of_ServoRotiraj0 09CA  
          Lcd_Set_Cursor@a 0077            Lcd_Set_Cursor@b 0074            Lcd_Set_Cursor@y 0079  
          Lcd_Set_Cursor@z 0078               ___xxtofl@arg 0022               ___xxtofl@exp 0021  
             ___xxtofl@val 0075    __end_of__initialization 07FC          __end_of_Lcd_Clear 0903  
               ___fltol@f1 0035             __pcstackCOMMON 0070              __end_of_putch 08E1  
           _Lcd_Set_Cursor 0B09                 ??_ADC_Read 0072                  ?_Lcd_Init 0070  
                ?_Lcd_Port 0070                    ??_putch 0071          __end_of__Umul8_16 0994  
               __pmaintext 013A  __size_of_Lcd_Write_String 0044     __end_of_Lcd_Set_Cursor 0B5D  
                  ?_printf 0020    __size_of_ADC_Initialize 0009                  ?___xxtofl 0075  
               ??_Lcd_Init 0074                 ??_Lcd_Port 0070                 __stringtab 1000  
           ServoRotiraj0@i 0072             _Lcd_Write_Char 0A00                    _Lcd_Cmd 092D  
                  ___fldiv 0DF1                    ___awdiv 0C20                    ___awmod 0BBB  
                  ___flmul 0487                    ___fltol 0C91                    ___lwdiv 0ABE  
                  ___lwmod 0A39            ?_Lcd_Set_Cursor 0074                    __ptext1 0033  
                  __ptext2 08D9                    __ptext3 08EA                    __ptext4 0A39  
                  __ptext5 0ABE                    __ptext6 0D2D                    __ptext7 0C91  
                  __ptext8 0487                    __ptext9 096A            __size_of_printf 0107  
                  _dpowers 1012             _UART_Send_Char 08EA                 ??___xxtofl 0079  
         ___awmod@dividend 007B                    main@adc 0044     __end_of_Lcd_Write_Char 0A39  
 __size_of_ServoRotiraj180 0036       end_of_initialization 07FC                    printf@c 002D  
                  printf@f 0020                  Lcd_Port@a 0070               __pstringtext 1000  
                _UART_Init 0915     __end_of_UART_Send_Char 08F6              ___xxtofl@sign 0020  
              ___fldiv@grs 0027                ___fldiv@rem 0020          __size_of_ADC_Read 002E  
          ?_Lcd_Write_Char 0070           ServoRotiraj180@i 0072          Lcd_Write_String@a 0075  
        Lcd_Write_String@i 007A                ___flmul@grs 0029                 main@opcija 005A  
                _Lcd_Clear 08F6           _Lcd_Write_String 0A7A                 ?_UART_Init 0070  
           _ADC_Initialize 08E1            ?_UART_Send_Char 0070             __end_of_printf 013A  
      start_initialization 07FC          __size_of_Lcd_Init 005E          __size_of_Lcd_Port 0023  
   __size_of_UART_Get_Char 0012          ??_ServoRotiraj180 0070                 ?_Lcd_Clear 0070  
   __end_of_ADC_Initialize 08EA                  __Umul8_16 096A     __size_of_ServoRotiraj0 0036  
          Lcd_Write_Char@a 0074            Lcd_Write_Char@y 0073                   ??_printf 0024  
                ___fldiv@a 0070                  ___fldiv@b 0074                  ___flmul@a 0024  
                ___flmul@b 0020                  ___latbits 0002              __pcstackBANK0 0020  
        __size_of___xxtofl 00C4                   ?_Lcd_Cmd 0070           ___lwdiv@dividend 0072  
         ??_Lcd_Set_Cursor 0075                   ?___fldiv 0070                   ?___awdiv 0070  
                 ?___awmod 0079                   ?___flmul 0020                   ?___fltol 0035  
               ?__Umul8_16 0070                   ?___lwdiv 0070                   ?___lwmod 0078  
          ?_ADC_Initialize 0070                ??_UART_Init 0070              _UART_Get_Char 0903  
                 _ADC_Read 0005           ___lwdiv@quotient 0075              _ServoRotiraj0 0994  
           __size_of_putch 0008                   Lcd_Cmd@a 0073                   _GO_nDONE 00FA  
              ??_Lcd_Clear 0074             ?_UART_Get_Char 0070                __stringbase 1012  
               printf@flag 0029                 printf@prec 002A           ??_Lcd_Write_Char 0071  
                main@temp1 005C                   _Lcd_Init 0B5D                   _Lcd_Port 0947  
           ?_ServoRotiraj0 0070   __end_of_Lcd_Write_String 0ABE            UART_Send_Char@a 0070  
         __size_of_Lcd_Cmd 001A           ??_UART_Send_Char 0070                ??__Umul8_16 0072  
         __size_of___fldiv 020F           __size_of___awdiv 0071           __size_of___awmod 0065  
         __size_of___flmul 0375           __size_of___fltol 009C           __size_of___lwdiv 004B  
         __size_of___lwmod 0041         __end_of__stringtab 1012                   ___xxtofl 0D2D  
          ___lwdiv@divisor 0070            ___lwdiv@counter 0077                   __ptext10 0DF1  
                 __ptext11 0BBB                   __ptext20 0B5D                   __ptext12 0C20  
                 __ptext21 08F6                   __ptext13 0915                   __ptext22 092D  
                 __ptext14 0903                   __ptext23 0947                   __ptext15 09CA  
                 __ptext24 0005                   __ptext16 0994                   __ptext25 08E1  
                 __ptext17 0A7A                   __ptext18 0A00                   __ptext19 0B09  
          _ServoRotiraj180 09CA              __size_of_main 034D            ??_UART_Get_Char 0070  
                printf@val 002B                   main@temp 004C                   main@volt 0048  
          ??_ServoRotiraj0 0070         Lcd_Write_Char@temp 0072           ___lwmod@dividend 007A  
         ??_ADC_Initialize 0070                  stringcode 100A                   printf@ap 0028  
       Lcd_Set_Cursor@temp 007A     __Umul8_16@multiplicand 0070    __end_of_ServoRotiraj180 0A00  
          ___lwmod@divisor 0078            ___lwmod@counter 007D                   stringtab 1000  
     __Umul8_16@multiplier 0078          __Umul8_16@product 0074  
